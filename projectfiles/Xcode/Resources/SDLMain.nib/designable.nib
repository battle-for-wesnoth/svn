<?xml version="1.0" encoding="UTF-8"?>
<archive type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="8.00">
	<data>
		<int key="IBDocument.SystemTarget">1050</int>
		<string key="IBDocument.SystemVersion">10F569</string>
		<string key="IBDocument.InterfaceBuilderVersion">804</string>
		<string key="IBDocument.AppKitVersion">1038.29</string>
		<string key="IBDocument.HIToolboxVersion">461.00</string>
		<object class="NSMutableDictionary" key="IBDocument.PluginVersions">
			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin</string>
			<string key="NS.object.0">804</string>
		</object>
		<array class="NSMutableArray" key="IBDocument.EditedObjectIDs">
			<integer value="29"/>
			<integer value="501"/>
		</array>
		<array key="IBDocument.PluginDependencies">
			<string>com.apple.InterfaceBuilder.CocoaPlugin</string>
		</array>
		<object class="NSMutableDictionary" key="IBDocument.Metadata">
			<string key="NS.key.0">PluginDependencyRecalculationVersion</string>
			<integer value="1" key="NS.object.0"/>
		</object>
		<array class="NSMutableArray" key="IBDocument.RootObjects" id="932824768">
			<object class="NSCustomObject" id="407535207">
				<string key="NSClassName">NSApplication</string>
			</object>
			<object class="NSCustomObject" id="569325114">
				<string key="NSClassName">FirstResponder</string>
			</object>
			<object class="NSCustomObject" id="506767808">
				<string key="NSClassName">NSApplication</string>
			</object>
			<object class="NSMenu" id="79934085">
				<string key="NSTitle">SDLMain</string>
				<array class="NSMutableArray" key="NSMenuItems">
					<object class="NSMenuItem" id="216580393">
						<reference key="NSMenu" ref="79934085"/>
						<string key="NSTitle">Wesnoth</string>
						<string key="NSKeyEquiv"/>
						<int key="NSKeyEquivModMask">1048576</int>
						<int key="NSMnemonicLoc">2147483647</int>
						<object class="NSCustomResource" key="NSOnImage" id="244536583">
							<string key="NSClassName">NSImage</string>
							<string key="NSResourceName">NSMenuCheckmark</string>
						</object>
						<object class="NSCustomResource" key="NSMixedImage" id="206569275">
							<string key="NSClassName">NSImage</string>
							<string key="NSResourceName">NSMenuMixedState</string>
						</object>
						<string key="NSAction">submenuAction:</string>
						<object class="NSMenu" key="NSSubmenu" id="594642970">
							<string key="NSTitle">Wesnoth</string>
							<array class="NSMutableArray" key="NSMenuItems">
								<object class="NSMenuItem" id="658074344">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">About Wesnoth</string>
									<string key="NSKeyEquiv"/>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="525181201">
									<reference key="NSMenu" ref="594642970"/>
									<bool key="NSIsDisabled">YES</bool>
									<bool key="NSIsSeparator">YES</bool>
									<string key="NSTitle"/>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="716930705">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">Wesnoth Homepage</string>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="1072989466">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">Changelog</string>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="299046830">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">License</string>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="332777180">
									<reference key="NSMenu" ref="594642970"/>
									<bool key="NSIsDisabled">YES</bool>
									<bool key="NSIsSeparator">YES</bool>
									<string key="NSTitle"/>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="953708084">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">Hide Wesnoth</string>
									<string key="NSKeyEquiv">h</string>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="960552698">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">Hide Others</string>
									<string key="NSKeyEquiv">h</string>
									<int key="NSKeyEquivModMask">1572864</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="408425643">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">Show All</string>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="700601227">
									<reference key="NSMenu" ref="594642970"/>
									<bool key="NSIsDisabled">YES</bool>
									<bool key="NSIsSeparator">YES</bool>
									<string key="NSTitle"/>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="583710504">
									<reference key="NSMenu" ref="594642970"/>
									<string key="NSTitle">Quit Wesnoth</string>
									<string key="NSKeyEquiv">q</string>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
							</array>
							<string key="NSName">_NSAppleMenu</string>
						</object>
					</object>
					<object class="NSMenuItem" id="1072241388">
						<reference key="NSMenu" ref="79934085"/>
						<string key="NSTitle">File</string>
						<string key="NSKeyEquiv"/>
						<int key="NSKeyEquivModMask">1048576</int>
						<int key="NSMnemonicLoc">2147483647</int>
						<reference key="NSOnImage" ref="244536583"/>
						<reference key="NSMixedImage" ref="206569275"/>
						<string key="NSAction">submenuAction:</string>
						<object class="NSMenu" key="NSSubmenu" id="472918284">
							<object class="NSMutableString" key="NSTitle">
								<characters key="NS.bytes">File</characters>
							</object>
							<array class="NSMutableArray" key="NSMenuItems">
								<object class="NSMenuItem" id="425262020">
									<reference key="NSMenu" ref="472918284"/>
									<string key="NSTitle">Close</string>
									<string key="NSKeyEquiv"/>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
							</array>
						</object>
					</object>
					<object class="NSMenuItem" id="1043237288">
						<reference key="NSMenu" ref="79934085"/>
						<string key="NSTitle">Edit</string>
						<string key="NSKeyEquiv"/>
						<int key="NSKeyEquivModMask">1048576</int>
						<int key="NSMnemonicLoc">2147483647</int>
						<reference key="NSOnImage" ref="244536583"/>
						<reference key="NSMixedImage" ref="206569275"/>
						<string key="NSAction">submenuAction:</string>
						<object class="NSMenu" key="NSSubmenu" id="551261138">
							<object class="NSMutableString" key="NSTitle">
								<characters key="NS.bytes">Edit</characters>
							</object>
							<array class="NSMutableArray" key="NSMenuItems">
								<object class="NSMenuItem" id="481136155">
									<reference key="NSMenu" ref="551261138"/>
									<string key="NSTitle">Cut</string>
									<string key="NSKeyEquiv">x</string>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="1049326683">
									<reference key="NSMenu" ref="551261138"/>
									<string key="NSTitle">Copy</string>
									<string key="NSKeyEquiv">c</string>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="499588544">
									<reference key="NSMenu" ref="551261138"/>
									<string key="NSTitle">Paste</string>
									<string key="NSKeyEquiv">v</string>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="658432170">
									<reference key="NSMenu" ref="551261138"/>
									<string key="NSTitle">Delete</string>
									<string key="NSKeyEquiv"/>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
								<object class="NSMenuItem" id="708092569">
									<reference key="NSMenu" ref="551261138"/>
									<string key="NSTitle">Select All</string>
									<string key="NSKeyEquiv">a</string>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
							</array>
						</object>
					</object>
					<object class="NSMenuItem" id="343660265">
						<reference key="NSMenu" ref="79934085"/>
						<string key="NSTitle">Window</string>
						<string key="NSKeyEquiv"/>
						<int key="NSKeyEquivModMask">1048576</int>
						<int key="NSMnemonicLoc">2147483647</int>
						<reference key="NSOnImage" ref="244536583"/>
						<reference key="NSMixedImage" ref="206569275"/>
						<string key="NSAction">submenuAction:</string>
						<object class="NSMenu" key="NSSubmenu" id="793167855">
							<object class="NSMutableString" key="NSTitle">
								<characters key="NS.bytes">Window</characters>
							</object>
							<array class="NSMutableArray" key="NSMenuItems">
								<object class="NSMenuItem" id="39311282">
									<reference key="NSMenu" ref="793167855"/>
									<string key="NSTitle">Minimize</string>
									<string key="NSKeyEquiv">m</string>
									<int key="NSKeyEquivModMask">1048576</int>
									<int key="NSMnemonicLoc">2147483647</int>
									<reference key="NSOnImage" ref="244536583"/>
									<reference key="NSMixedImage" ref="206569275"/>
								</object>
							</array>
							<string key="NSName">_NSWindowsMenu</string>
						</object>
					</object>
				</array>
				<string key="NSName">_NSMainMenu</string>
			</object>
			<object class="NSCustomObject" id="985693348">
				<string key="NSClassName">SDLMain</string>
			</object>
			<object class="NSCustomObject" id="12099763">
				<string key="NSClassName">NSFontManager</string>
			</object>
			<object class="NSWindowTemplate" id="914236993">
				<int key="NSWindowStyleMask">7</int>
				<int key="NSWindowBacking">2</int>
				<string key="NSWindowRect">{{471, 210}, {475, 420}}</string>
				<int key="NSWTFlags">1685586944</int>
				<string key="NSWindowTitle">License</string>
				<string key="NSWindowClass">NSWindow</string>
				<nil key="NSViewClass"/>
				<string key="NSWindowContentMaxSize">{1.79769e+308, 1.79769e+308}</string>
				<object class="NSView" key="NSWindowView" id="143187975">
					<nil key="NSNextResponder"/>
					<int key="NSvFlags">256</int>
					<array class="NSMutableArray" key="NSSubviews">
						<object class="NSScrollView" id="954278164">
							<reference key="NSNextResponder" ref="143187975"/>
							<int key="NSvFlags">256</int>
							<array class="NSMutableArray" key="NSSubviews">
								<object class="NSClipView" id="646620328">
									<reference key="NSNextResponder" ref="954278164"/>
									<int key="NSvFlags">2304</int>
									<array class="NSMutableArray" key="NSSubviews">
										<object class="NSTextView" id="829392622">
											<reference key="NSNextResponder" ref="646620328"/>
											<int key="NSvFlags">2322</int>
											<string key="NSFrameSize">{418, 4284}</string>
											<reference key="NSSuperview" ref="646620328"/>
											<object class="NSTextContainer" key="NSTextContainer" id="864385540">
												<object class="NSLayoutManager" key="NSLayoutManager">
													<object class="NSTextStorage" key="NSTextStorage">
														<object class="NSMutableString" key="NSString">
															<bytes key="NS.bytes">CQkgICAgR05VIEdFTkVSQUwgUFVCTElDIExJQ0VOU0UKCQkgICAgICAgVmVyc2lvbiAyLCBKdW5lIDE5
OTEKCiBDb3B5cmlnaHQgKEMpIDE5ODksIDE5OTEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMu
CiAgICAgICAgICAgICAgICAgICAgICAgNTEgRnJhbmtsaW4gU3QsIEZpZnRoIEZsb29yLCBCb3N0b24s
IE1BICAwMjExMC0xMzAxICBVU0EKIEV2ZXJ5b25lIGlzIHBlcm1pdHRlZCB0byBjb3B5IGFuZCBkaXN0
cmlidXRlIHZlcmJhdGltIGNvcGllcwogb2YgdGhpcyBsaWNlbnNlIGRvY3VtZW50LCBidXQgY2hhbmdp
bmcgaXQgaXMgbm90IGFsbG93ZWQuCgoJCQkgICAgUHJlYW1ibGUKCiAgVGhlIGxpY2Vuc2VzIGZvciBt
b3N0IHNvZnR3YXJlIGFyZSBkZXNpZ25lZCB0byB0YWtlIGF3YXkgeW91cgpmcmVlZG9tIHRvIHNoYXJl
IGFuZCBjaGFuZ2UgaXQuICBCeSBjb250cmFzdCwgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYwpMaWNlbnNl
IGlzIGludGVuZGVkIHRvIGd1YXJhbnRlZSB5b3VyIGZyZWVkb20gdG8gc2hhcmUgYW5kIGNoYW5nZSBm
cmVlCnNvZnR3YXJlLS10byBtYWtlIHN1cmUgdGhlIHNvZnR3YXJlIGlzIGZyZWUgZm9yIGFsbCBpdHMg
dXNlcnMuICBUaGlzCkdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXBwbGllcyB0byBtb3N0IG9mIHRoZSBG
cmVlIFNvZnR3YXJlCkZvdW5kYXRpb24ncyBzb2Z0d2FyZSBhbmQgdG8gYW55IG90aGVyIHByb2dyYW0g
d2hvc2UgYXV0aG9ycyBjb21taXQgdG8KdXNpbmcgaXQuICAoU29tZSBvdGhlciBGcmVlIFNvZnR3YXJl
IEZvdW5kYXRpb24gc29mdHdhcmUgaXMgY292ZXJlZCBieQp0aGUgR05VIExpYnJhcnkgR2VuZXJhbCBQ
dWJsaWMgTGljZW5zZSBpbnN0ZWFkLikgIFlvdSBjYW4gYXBwbHkgaXQgdG8KeW91ciBwcm9ncmFtcywg
dG9vLgoKICBXaGVuIHdlIHNwZWFrIG9mIGZyZWUgc29mdHdhcmUsIHdlIGFyZSByZWZlcnJpbmcgdG8g
ZnJlZWRvbSwgbm90CnByaWNlLiAgT3VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VzIGFyZSBkZXNpZ25l
ZCB0byBtYWtlIHN1cmUgdGhhdCB5b3UKaGF2ZSB0aGUgZnJlZWRvbSB0byBkaXN0cmlidXRlIGNvcGll
cyBvZiBmcmVlIHNvZnR3YXJlIChhbmQgY2hhcmdlIGZvcgp0aGlzIHNlcnZpY2UgaWYgeW91IHdpc2gp
LCB0aGF0IHlvdSByZWNlaXZlIHNvdXJjZSBjb2RlIG9yIGNhbiBnZXQgaXQKaWYgeW91IHdhbnQgaXQs
IHRoYXQgeW91IGNhbiBjaGFuZ2UgdGhlIHNvZnR3YXJlIG9yIHVzZSBwaWVjZXMgb2YgaXQKaW4gbmV3
IGZyZWUgcHJvZ3JhbXM7IGFuZCB0aGF0IHlvdSBrbm93IHlvdSBjYW4gZG8gdGhlc2UgdGhpbmdzLgoK
ICBUbyBwcm90ZWN0IHlvdXIgcmlnaHRzLCB3ZSBuZWVkIHRvIG1ha2UgcmVzdHJpY3Rpb25zIHRoYXQg
Zm9yYmlkCmFueW9uZSB0byBkZW55IHlvdSB0aGVzZSByaWdodHMgb3IgdG8gYXNrIHlvdSB0byBzdXJy
ZW5kZXIgdGhlIHJpZ2h0cy4KVGhlc2UgcmVzdHJpY3Rpb25zIHRyYW5zbGF0ZSB0byBjZXJ0YWluIHJl
c3BvbnNpYmlsaXRpZXMgZm9yIHlvdSBpZiB5b3UKZGlzdHJpYnV0ZSBjb3BpZXMgb2YgdGhlIHNvZnR3
YXJlLCBvciBpZiB5b3UgbW9kaWZ5IGl0LgoKICBGb3IgZXhhbXBsZSwgaWYgeW91IGRpc3RyaWJ1dGUg
Y29waWVzIG9mIHN1Y2ggYSBwcm9ncmFtLCB3aGV0aGVyCmdyYXRpcyBvciBmb3IgYSBmZWUsIHlvdSBt
dXN0IGdpdmUgdGhlIHJlY2lwaWVudHMgYWxsIHRoZSByaWdodHMgdGhhdAp5b3UgaGF2ZS4gIFlvdSBt
dXN0IG1ha2Ugc3VyZSB0aGF0IHRoZXksIHRvbywgcmVjZWl2ZSBvciBjYW4gZ2V0IHRoZQpzb3VyY2Ug
Y29kZS4gIEFuZCB5b3UgbXVzdCBzaG93IHRoZW0gdGhlc2UgdGVybXMgc28gdGhleSBrbm93IHRoZWly
CnJpZ2h0cy4KCiAgV2UgcHJvdGVjdCB5b3VyIHJpZ2h0cyB3aXRoIHR3byBzdGVwczogKDEpIGNvcHly
aWdodCB0aGUgc29mdHdhcmUsIGFuZAooMikgb2ZmZXIgeW91IHRoaXMgbGljZW5zZSB3aGljaCBnaXZl
cyB5b3UgbGVnYWwgcGVybWlzc2lvbiB0byBjb3B5LApkaXN0cmlidXRlIGFuZC9vciBtb2RpZnkgdGhl
IHNvZnR3YXJlLgoKICBBbHNvLCBmb3IgZWFjaCBhdXRob3IncyBwcm90ZWN0aW9uIGFuZCBvdXJzLCB3
ZSB3YW50IHRvIG1ha2UgY2VydGFpbgp0aGF0IGV2ZXJ5b25lIHVuZGVyc3RhbmRzIHRoYXQgdGhlcmUg
aXMgbm8gd2FycmFudHkgZm9yIHRoaXMgZnJlZQpzb2Z0d2FyZS4gIElmIHRoZSBzb2Z0d2FyZSBpcyBt
b2RpZmllZCBieSBzb21lb25lIGVsc2UgYW5kIHBhc3NlZCBvbiwgd2UKd2FudCBpdHMgcmVjaXBpZW50
cyB0byBrbm93IHRoYXQgd2hhdCB0aGV5IGhhdmUgaXMgbm90IHRoZSBvcmlnaW5hbCwgc28KdGhhdCBh
bnkgcHJvYmxlbXMgaW50cm9kdWNlZCBieSBvdGhlcnMgd2lsbCBub3QgcmVmbGVjdCBvbiB0aGUgb3Jp
Z2luYWwKYXV0aG9ycycgcmVwdXRhdGlvbnMuCgogIEZpbmFsbHksIGFueSBmcmVlIHByb2dyYW0gaXMg
dGhyZWF0ZW5lZCBjb25zdGFudGx5IGJ5IHNvZnR3YXJlCnBhdGVudHMuICBXZSB3aXNoIHRvIGF2b2lk
IHRoZSBkYW5nZXIgdGhhdCByZWRpc3RyaWJ1dG9ycyBvZiBhIGZyZWUKcHJvZ3JhbSB3aWxsIGluZGl2
aWR1YWxseSBvYnRhaW4gcGF0ZW50IGxpY2Vuc2VzLCBpbiBlZmZlY3QgbWFraW5nIHRoZQpwcm9ncmFt
IHByb3ByaWV0YXJ5LiAgVG8gcHJldmVudCB0aGlzLCB3ZSBoYXZlIG1hZGUgaXQgY2xlYXIgdGhhdCBh
bnkKcGF0ZW50IG11c3QgYmUgbGljZW5zZWQgZm9yIGV2ZXJ5b25lJ3MgZnJlZSB1c2Ugb3Igbm90IGxp
Y2Vuc2VkIGF0IGFsbC4KCiAgVGhlIHByZWNpc2UgdGVybXMgYW5kIGNvbmRpdGlvbnMgZm9yIGNvcHlp
bmcsIGRpc3RyaWJ1dGlvbiBhbmQKbW9kaWZpY2F0aW9uIGZvbGxvdy4KDAoJCSAgICBHTlUgR0VORVJB
TCBQVUJMSUMgTElDRU5TRQogICBURVJNUyBBTkQgQ09ORElUSU9OUyBGT1IgQ09QWUlORywgRElTVFJJ
QlVUSU9OIEFORCBNT0RJRklDQVRJT04KCiAgMC4gVGhpcyBMaWNlbnNlIGFwcGxpZXMgdG8gYW55IHBy
b2dyYW0gb3Igb3RoZXIgd29yayB3aGljaCBjb250YWlucwphIG5vdGljZSBwbGFjZWQgYnkgdGhlIGNv
cHlyaWdodCBob2xkZXIgc2F5aW5nIGl0IG1heSBiZSBkaXN0cmlidXRlZAp1bmRlciB0aGUgdGVybXMg
b2YgdGhpcyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlLiAgVGhlICJQcm9ncmFtIiwgYmVsb3csCnJlZmVy
cyB0byBhbnkgc3VjaCBwcm9ncmFtIG9yIHdvcmssIGFuZCBhICJ3b3JrIGJhc2VkIG9uIHRoZSBQcm9n
cmFtIgptZWFucyBlaXRoZXIgdGhlIFByb2dyYW0gb3IgYW55IGRlcml2YXRpdmUgd29yayB1bmRlciBj
b3B5cmlnaHQgbGF3Ogp0aGF0IGlzIHRvIHNheSwgYSB3b3JrIGNvbnRhaW5pbmcgdGhlIFByb2dyYW0g
b3IgYSBwb3J0aW9uIG9mIGl0LAplaXRoZXIgdmVyYmF0aW0gb3Igd2l0aCBtb2RpZmljYXRpb25zIGFu
ZC9vciB0cmFuc2xhdGVkIGludG8gYW5vdGhlcgpsYW5ndWFnZS4gIChIZXJlaW5hZnRlciwgdHJhbnNs
YXRpb24gaXMgaW5jbHVkZWQgd2l0aG91dCBsaW1pdGF0aW9uIGluCnRoZSB0ZXJtICJtb2RpZmljYXRp
b24iLikgIEVhY2ggbGljZW5zZWUgaXMgYWRkcmVzc2VkIGFzICJ5b3UiLgoKQWN0aXZpdGllcyBvdGhl
ciB0aGFuIGNvcHlpbmcsIGRpc3RyaWJ1dGlvbiBhbmQgbW9kaWZpY2F0aW9uIGFyZSBub3QKY292ZXJl
ZCBieSB0aGlzIExpY2Vuc2U7IHRoZXkgYXJlIG91dHNpZGUgaXRzIHNjb3BlLiAgVGhlIGFjdCBvZgpy
dW5uaW5nIHRoZSBQcm9ncmFtIGlzIG5vdCByZXN0cmljdGVkLCBhbmQgdGhlIG91dHB1dCBmcm9tIHRo
ZSBQcm9ncmFtCmlzIGNvdmVyZWQgb25seSBpZiBpdHMgY29udGVudHMgY29uc3RpdHV0ZSBhIHdvcmsg
YmFzZWQgb24gdGhlClByb2dyYW0gKGluZGVwZW5kZW50IG9mIGhhdmluZyBiZWVuIG1hZGUgYnkgcnVu
bmluZyB0aGUgUHJvZ3JhbSkuCldoZXRoZXIgdGhhdCBpcyB0cnVlIGRlcGVuZHMgb24gd2hhdCB0aGUg
UHJvZ3JhbSBkb2VzLgoKICAxLiBZb3UgbWF5IGNvcHkgYW5kIGRpc3RyaWJ1dGUgdmVyYmF0aW0gY29w
aWVzIG9mIHRoZSBQcm9ncmFtJ3MKc291cmNlIGNvZGUgYXMgeW91IHJlY2VpdmUgaXQsIGluIGFueSBt
ZWRpdW0sIHByb3ZpZGVkIHRoYXQgeW91CmNvbnNwaWN1b3VzbHkgYW5kIGFwcHJvcHJpYXRlbHkgcHVi
bGlzaCBvbiBlYWNoIGNvcHkgYW4gYXBwcm9wcmlhdGUKY29weXJpZ2h0IG5vdGljZSBhbmQgZGlzY2xh
aW1lciBvZiB3YXJyYW50eTsga2VlcCBpbnRhY3QgYWxsIHRoZQpub3RpY2VzIHRoYXQgcmVmZXIgdG8g
dGhpcyBMaWNlbnNlIGFuZCB0byB0aGUgYWJzZW5jZSBvZiBhbnkgd2FycmFudHk7CmFuZCBnaXZlIGFu
eSBvdGhlciByZWNpcGllbnRzIG9mIHRoZSBQcm9ncmFtIGEgY29weSBvZiB0aGlzIExpY2Vuc2UKYWxv
bmcgd2l0aCB0aGUgUHJvZ3JhbS4KCllvdSBtYXkgY2hhcmdlIGEgZmVlIGZvciB0aGUgcGh5c2ljYWwg
YWN0IG9mIHRyYW5zZmVycmluZyBhIGNvcHksIGFuZAp5b3UgbWF5IGF0IHlvdXIgb3B0aW9uIG9mZmVy
IHdhcnJhbnR5IHByb3RlY3Rpb24gaW4gZXhjaGFuZ2UgZm9yIGEgZmVlLgoKICAyLiBZb3UgbWF5IG1v
ZGlmeSB5b3VyIGNvcHkgb3IgY29waWVzIG9mIHRoZSBQcm9ncmFtIG9yIGFueSBwb3J0aW9uCm9mIGl0
LCB0aHVzIGZvcm1pbmcgYSB3b3JrIGJhc2VkIG9uIHRoZSBQcm9ncmFtLCBhbmQgY29weSBhbmQKZGlz
dHJpYnV0ZSBzdWNoIG1vZGlmaWNhdGlvbnMgb3Igd29yayB1bmRlciB0aGUgdGVybXMgb2YgU2VjdGlv
biAxCmFib3ZlLCBwcm92aWRlZCB0aGF0IHlvdSBhbHNvIG1lZXQgYWxsIG9mIHRoZXNlIGNvbmRpdGlv
bnM6CgogICAgYSkgWW91IG11c3QgY2F1c2UgdGhlIG1vZGlmaWVkIGZpbGVzIHRvIGNhcnJ5IHByb21p
bmVudCBub3RpY2VzCiAgICBzdGF0aW5nIHRoYXQgeW91IGNoYW5nZWQgdGhlIGZpbGVzIGFuZCB0aGUg
ZGF0ZSBvZiBhbnkgY2hhbmdlLgoKICAgIGIpIFlvdSBtdXN0IGNhdXNlIGFueSB3b3JrIHRoYXQgeW91
IGRpc3RyaWJ1dGUgb3IgcHVibGlzaCwgdGhhdCBpbgogICAgd2hvbGUgb3IgaW4gcGFydCBjb250YWlu
cyBvciBpcyBkZXJpdmVkIGZyb20gdGhlIFByb2dyYW0gb3IgYW55CiAgICBwYXJ0IHRoZXJlb2YsIHRv
IGJlIGxpY2Vuc2VkIGFzIGEgd2hvbGUgYXQgbm8gY2hhcmdlIHRvIGFsbCB0aGlyZAogICAgcGFydGll
cyB1bmRlciB0aGUgdGVybXMgb2YgdGhpcyBMaWNlbnNlLgoKICAgIGMpIElmIHRoZSBtb2RpZmllZCBw
cm9ncmFtIG5vcm1hbGx5IHJlYWRzIGNvbW1hbmRzIGludGVyYWN0aXZlbHkKICAgIHdoZW4gcnVuLCB5
b3UgbXVzdCBjYXVzZSBpdCwgd2hlbiBzdGFydGVkIHJ1bm5pbmcgZm9yIHN1Y2gKICAgIGludGVyYWN0
aXZlIHVzZSBpbiB0aGUgbW9zdCBvcmRpbmFyeSB3YXksIHRvIHByaW50IG9yIGRpc3BsYXkgYW4KICAg
IGFubm91bmNlbWVudCBpbmNsdWRpbmcgYW4gYXBwcm9wcmlhdGUgY29weXJpZ2h0IG5vdGljZSBhbmQg
YQogICAgbm90aWNlIHRoYXQgdGhlcmUgaXMgbm8gd2FycmFudHkgKG9yIGVsc2UsIHNheWluZyB0aGF0
IHlvdSBwcm92aWRlCiAgICBhIHdhcnJhbnR5KSBhbmQgdGhhdCB1c2VycyBtYXkgcmVkaXN0cmlidXRl
IHRoZSBwcm9ncmFtIHVuZGVyCiAgICB0aGVzZSBjb25kaXRpb25zLCBhbmQgdGVsbGluZyB0aGUgdXNl
ciBob3cgdG8gdmlldyBhIGNvcHkgb2YgdGhpcwogICAgTGljZW5zZS4gIChFeGNlcHRpb246IGlmIHRo
ZSBQcm9ncmFtIGl0c2VsZiBpcyBpbnRlcmFjdGl2ZSBidXQKICAgIGRvZXMgbm90IG5vcm1hbGx5IHBy
aW50IHN1Y2ggYW4gYW5ub3VuY2VtZW50LCB5b3VyIHdvcmsgYmFzZWQgb24KICAgIHRoZSBQcm9ncmFt
IGlzIG5vdCByZXF1aXJlZCB0byBwcmludCBhbiBhbm5vdW5jZW1lbnQuKQoMClRoZXNlIHJlcXVpcmVt
ZW50cyBhcHBseSB0byB0aGUgbW9kaWZpZWQgd29yayBhcyBhIHdob2xlLiAgSWYKaWRlbnRpZmlhYmxl
IHNlY3Rpb25zIG9mIHRoYXQgd29yayBhcmUgbm90IGRlcml2ZWQgZnJvbSB0aGUgUHJvZ3JhbSwKYW5k
IGNhbiBiZSByZWFzb25hYmx5IGNvbnNpZGVyZWQgaW5kZXBlbmRlbnQgYW5kIHNlcGFyYXRlIHdvcmtz
IGluCnRoZW1zZWx2ZXMsIHRoZW4gdGhpcyBMaWNlbnNlLCBhbmQgaXRzIHRlcm1zLCBkbyBub3QgYXBw
bHkgdG8gdGhvc2UKc2VjdGlvbnMgd2hlbiB5b3UgZGlzdHJpYnV0ZSB0aGVtIGFzIHNlcGFyYXRlIHdv
cmtzLiAgQnV0IHdoZW4geW91CmRpc3RyaWJ1dGUgdGhlIHNhbWUgc2VjdGlvbnMgYXMgcGFydCBvZiBh
IHdob2xlIHdoaWNoIGlzIGEgd29yayBiYXNlZApvbiB0aGUgUHJvZ3JhbSwgdGhlIGRpc3RyaWJ1dGlv
biBvZiB0aGUgd2hvbGUgbXVzdCBiZSBvbiB0aGUgdGVybXMgb2YKdGhpcyBMaWNlbnNlLCB3aG9zZSBw
ZXJtaXNzaW9ucyBmb3Igb3RoZXIgbGljZW5zZWVzIGV4dGVuZCB0byB0aGUKZW50aXJlIHdob2xlLCBh
bmQgdGh1cyB0byBlYWNoIGFuZCBldmVyeSBwYXJ0IHJlZ2FyZGxlc3Mgb2Ygd2hvIHdyb3RlIGl0LgoK
VGh1cywgaXQgaXMgbm90IHRoZSBpbnRlbnQgb2YgdGhpcyBzZWN0aW9uIHRvIGNsYWltIHJpZ2h0cyBv
ciBjb250ZXN0CnlvdXIgcmlnaHRzIHRvIHdvcmsgd3JpdHRlbiBlbnRpcmVseSBieSB5b3U7IHJhdGhl
ciwgdGhlIGludGVudCBpcyB0bwpleGVyY2lzZSB0aGUgcmlnaHQgdG8gY29udHJvbCB0aGUgZGlzdHJp
YnV0aW9uIG9mIGRlcml2YXRpdmUgb3IKY29sbGVjdGl2ZSB3b3JrcyBiYXNlZCBvbiB0aGUgUHJvZ3Jh
bS4KCkluIGFkZGl0aW9uLCBtZXJlIGFnZ3JlZ2F0aW9uIG9mIGFub3RoZXIgd29yayBub3QgYmFzZWQg
b24gdGhlIFByb2dyYW0Kd2l0aCB0aGUgUHJvZ3JhbSAob3Igd2l0aCBhIHdvcmsgYmFzZWQgb24gdGhl
IFByb2dyYW0pIG9uIGEgdm9sdW1lIG9mCmEgc3RvcmFnZSBvciBkaXN0cmlidXRpb24gbWVkaXVtIGRv
ZXMgbm90IGJyaW5nIHRoZSBvdGhlciB3b3JrIHVuZGVyCnRoZSBzY29wZSBvZiB0aGlzIExpY2Vuc2Uu
CgogIDMuIFlvdSBtYXkgY29weSBhbmQgZGlzdHJpYnV0ZSB0aGUgUHJvZ3JhbSAob3IgYSB3b3JrIGJh
c2VkIG9uIGl0LAp1bmRlciBTZWN0aW9uIDIpIGluIG9iamVjdCBjb2RlIG9yIGV4ZWN1dGFibGUgZm9y
bSB1bmRlciB0aGUgdGVybXMgb2YKU2VjdGlvbnMgMSBhbmQgMiBhYm92ZSBwcm92aWRlZCB0aGF0IHlv
dSBhbHNvIGRvIG9uZSBvZiB0aGUgZm9sbG93aW5nOgoKICAgIGEpIEFjY29tcGFueSBpdCB3aXRoIHRo
ZSBjb21wbGV0ZSBjb3JyZXNwb25kaW5nIG1hY2hpbmUtcmVhZGFibGUKICAgIHNvdXJjZSBjb2RlLCB3
aGljaCBtdXN0IGJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtcyBvZiBTZWN0aW9ucwogICAgMSBh
bmQgMiBhYm92ZSBvbiBhIG1lZGl1bSBjdXN0b21hcmlseSB1c2VkIGZvciBzb2Z0d2FyZSBpbnRlcmNo
YW5nZTsgb3IsCgogICAgYikgQWNjb21wYW55IGl0IHdpdGggYSB3cml0dGVuIG9mZmVyLCB2YWxpZCBm
b3IgYXQgbGVhc3QgdGhyZWUKICAgIHllYXJzLCB0byBnaXZlIGFueSB0aGlyZCBwYXJ0eSwgZm9yIGEg
Y2hhcmdlIG5vIG1vcmUgdGhhbiB5b3VyCiAgICBjb3N0IG9mIHBoeXNpY2FsbHkgcGVyZm9ybWluZyBz
b3VyY2UgZGlzdHJpYnV0aW9uLCBhIGNvbXBsZXRlCiAgICBtYWNoaW5lLXJlYWRhYmxlIGNvcHkgb2Yg
dGhlIGNvcnJlc3BvbmRpbmcgc291cmNlIGNvZGUsIHRvIGJlCiAgICBkaXN0cmlidXRlZCB1bmRlciB0
aGUgdGVybXMgb2YgU2VjdGlvbnMgMSBhbmQgMiBhYm92ZSBvbiBhIG1lZGl1bQogICAgY3VzdG9tYXJp
bHkgdXNlZCBmb3Igc29mdHdhcmUgaW50ZXJjaGFuZ2U7IG9yLAoKICAgIGMpIEFjY29tcGFueSBpdCB3
aXRoIHRoZSBpbmZvcm1hdGlvbiB5b3UgcmVjZWl2ZWQgYXMgdG8gdGhlIG9mZmVyCiAgICB0byBkaXN0
cmlidXRlIGNvcnJlc3BvbmRpbmcgc291cmNlIGNvZGUuICAoVGhpcyBhbHRlcm5hdGl2ZSBpcwogICAg
YWxsb3dlZCBvbmx5IGZvciBub25jb21tZXJjaWFsIGRpc3RyaWJ1dGlvbiBhbmQgb25seSBpZiB5b3UK
ICAgIHJlY2VpdmVkIHRoZSBwcm9ncmFtIGluIG9iamVjdCBjb2RlIG9yIGV4ZWN1dGFibGUgZm9ybSB3
aXRoIHN1Y2gKICAgIGFuIG9mZmVyLCBpbiBhY2NvcmQgd2l0aCBTdWJzZWN0aW9uIGIgYWJvdmUuKQoK
VGhlIHNvdXJjZSBjb2RlIGZvciBhIHdvcmsgbWVhbnMgdGhlIHByZWZlcnJlZCBmb3JtIG9mIHRoZSB3
b3JrIGZvcgptYWtpbmcgbW9kaWZpY2F0aW9ucyB0byBpdC4gIEZvciBhbiBleGVjdXRhYmxlIHdvcmss
IGNvbXBsZXRlIHNvdXJjZQpjb2RlIG1lYW5zIGFsbCB0aGUgc291cmNlIGNvZGUgZm9yIGFsbCBtb2R1
bGVzIGl0IGNvbnRhaW5zLCBwbHVzIGFueQphc3NvY2lhdGVkIGludGVyZmFjZSBkZWZpbml0aW9uIGZp
bGVzLCBwbHVzIHRoZSBzY3JpcHRzIHVzZWQgdG8KY29udHJvbCBjb21waWxhdGlvbiBhbmQgaW5zdGFs
bGF0aW9uIG9mIHRoZSBleGVjdXRhYmxlLiAgSG93ZXZlciwgYXMgYQpzcGVjaWFsIGV4Y2VwdGlvbiwg
dGhlIHNvdXJjZSBjb2RlIGRpc3RyaWJ1dGVkIG5lZWQgbm90IGluY2x1ZGUKYW55dGhpbmcgdGhhdCBp
cyBub3JtYWxseSBkaXN0cmlidXRlZCAoaW4gZWl0aGVyIHNvdXJjZSBvciBiaW5hcnkKZm9ybSkgd2l0
aCB0aGUgbWFqb3IgY29tcG9uZW50cyAoY29tcGlsZXIsIGtlcm5lbCwgYW5kIHNvIG9uKSBvZiB0aGUK
b3BlcmF0aW5nIHN5c3RlbSBvbiB3aGljaCB0aGUgZXhlY3V0YWJsZSBydW5zLCB1bmxlc3MgdGhhdCBj
b21wb25lbnQKaXRzZWxmIGFjY29tcGFuaWVzIHRoZSBleGVjdXRhYmxlLgoKSWYgZGlzdHJpYnV0aW9u
IG9mIGV4ZWN1dGFibGUgb3Igb2JqZWN0IGNvZGUgaXMgbWFkZSBieSBvZmZlcmluZwphY2Nlc3MgdG8g
Y29weSBmcm9tIGEgZGVzaWduYXRlZCBwbGFjZSwgdGhlbiBvZmZlcmluZyBlcXVpdmFsZW50CmFjY2Vz
cyB0byBjb3B5IHRoZSBzb3VyY2UgY29kZSBmcm9tIHRoZSBzYW1lIHBsYWNlIGNvdW50cyBhcwpkaXN0
cmlidXRpb24gb2YgdGhlIHNvdXJjZSBjb2RlLCBldmVuIHRob3VnaCB0aGlyZCBwYXJ0aWVzIGFyZSBu
b3QKY29tcGVsbGVkIHRvIGNvcHkgdGhlIHNvdXJjZSBhbG9uZyB3aXRoIHRoZSBvYmplY3QgY29kZS4K
DAogIDQuIFlvdSBtYXkgbm90IGNvcHksIG1vZGlmeSwgc3VibGljZW5zZSwgb3IgZGlzdHJpYnV0ZSB0
aGUgUHJvZ3JhbQpleGNlcHQgYXMgZXhwcmVzc2x5IHByb3ZpZGVkIHVuZGVyIHRoaXMgTGljZW5zZS4g
IEFueSBhdHRlbXB0Cm90aGVyd2lzZSB0byBjb3B5LCBtb2RpZnksIHN1YmxpY2Vuc2Ugb3IgZGlzdHJp
YnV0ZSB0aGUgUHJvZ3JhbSBpcwp2b2lkLCBhbmQgd2lsbCBhdXRvbWF0aWNhbGx5IHRlcm1pbmF0ZSB5
b3VyIHJpZ2h0cyB1bmRlciB0aGlzIExpY2Vuc2UuCkhvd2V2ZXIsIHBhcnRpZXMgd2hvIGhhdmUgcmVj
ZWl2ZWQgY29waWVzLCBvciByaWdodHMsIGZyb20geW91IHVuZGVyCnRoaXMgTGljZW5zZSB3aWxsIG5v
dCBoYXZlIHRoZWlyIGxpY2Vuc2VzIHRlcm1pbmF0ZWQgc28gbG9uZyBhcyBzdWNoCnBhcnRpZXMgcmVt
YWluIGluIGZ1bGwgY29tcGxpYW5jZS4KCiAgNS4gWW91IGFyZSBub3QgcmVxdWlyZWQgdG8gYWNjZXB0
IHRoaXMgTGljZW5zZSwgc2luY2UgeW91IGhhdmUgbm90CnNpZ25lZCBpdC4gIEhvd2V2ZXIsIG5vdGhp
bmcgZWxzZSBncmFudHMgeW91IHBlcm1pc3Npb24gdG8gbW9kaWZ5IG9yCmRpc3RyaWJ1dGUgdGhlIFBy
b2dyYW0gb3IgaXRzIGRlcml2YXRpdmUgd29ya3MuICBUaGVzZSBhY3Rpb25zIGFyZQpwcm9oaWJpdGVk
IGJ5IGxhdyBpZiB5b3UgZG8gbm90IGFjY2VwdCB0aGlzIExpY2Vuc2UuICBUaGVyZWZvcmUsIGJ5Cm1v
ZGlmeWluZyBvciBkaXN0cmlidXRpbmcgdGhlIFByb2dyYW0gKG9yIGFueSB3b3JrIGJhc2VkIG9uIHRo
ZQpQcm9ncmFtKSwgeW91IGluZGljYXRlIHlvdXIgYWNjZXB0YW5jZSBvZiB0aGlzIExpY2Vuc2UgdG8g
ZG8gc28sIGFuZAphbGwgaXRzIHRlcm1zIGFuZCBjb25kaXRpb25zIGZvciBjb3B5aW5nLCBkaXN0cmli
dXRpbmcgb3IgbW9kaWZ5aW5nCnRoZSBQcm9ncmFtIG9yIHdvcmtzIGJhc2VkIG9uIGl0LgoKICA2LiBF
YWNoIHRpbWUgeW91IHJlZGlzdHJpYnV0ZSB0aGUgUHJvZ3JhbSAob3IgYW55IHdvcmsgYmFzZWQgb24g
dGhlClByb2dyYW0pLCB0aGUgcmVjaXBpZW50IGF1dG9tYXRpY2FsbHkgcmVjZWl2ZXMgYSBsaWNlbnNl
IGZyb20gdGhlCm9yaWdpbmFsIGxpY2Vuc29yIHRvIGNvcHksIGRpc3RyaWJ1dGUgb3IgbW9kaWZ5IHRo
ZSBQcm9ncmFtIHN1YmplY3QgdG8KdGhlc2UgdGVybXMgYW5kIGNvbmRpdGlvbnMuICBZb3UgbWF5IG5v
dCBpbXBvc2UgYW55IGZ1cnRoZXIKcmVzdHJpY3Rpb25zIG9uIHRoZSByZWNpcGllbnRzJyBleGVyY2lz
ZSBvZiB0aGUgcmlnaHRzIGdyYW50ZWQgaGVyZWluLgpZb3UgYXJlIG5vdCByZXNwb25zaWJsZSBmb3Ig
ZW5mb3JjaW5nIGNvbXBsaWFuY2UgYnkgdGhpcmQgcGFydGllcyB0bwp0aGlzIExpY2Vuc2UuCgogIDcu
IElmLCBhcyBhIGNvbnNlcXVlbmNlIG9mIGEgY291cnQganVkZ21lbnQgb3IgYWxsZWdhdGlvbiBvZiBw
YXRlbnQKaW5mcmluZ2VtZW50IG9yIGZvciBhbnkgb3RoZXIgcmVhc29uIChub3QgbGltaXRlZCB0byBw
YXRlbnQgaXNzdWVzKSwKY29uZGl0aW9ucyBhcmUgaW1wb3NlZCBvbiB5b3UgKHdoZXRoZXIgYnkgY291
cnQgb3JkZXIsIGFncmVlbWVudCBvcgpvdGhlcndpc2UpIHRoYXQgY29udHJhZGljdCB0aGUgY29uZGl0
aW9ucyBvZiB0aGlzIExpY2Vuc2UsIHRoZXkgZG8gbm90CmV4Y3VzZSB5b3UgZnJvbSB0aGUgY29uZGl0
aW9ucyBvZiB0aGlzIExpY2Vuc2UuICBJZiB5b3UgY2Fubm90CmRpc3RyaWJ1dGUgc28gYXMgdG8gc2F0
aXNmeSBzaW11bHRhbmVvdXNseSB5b3VyIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMKTGljZW5zZSBhbmQg
YW55IG90aGVyIHBlcnRpbmVudCBvYmxpZ2F0aW9ucywgdGhlbiBhcyBhIGNvbnNlcXVlbmNlIHlvdQpt
YXkgbm90IGRpc3RyaWJ1dGUgdGhlIFByb2dyYW0gYXQgYWxsLiAgRm9yIGV4YW1wbGUsIGlmIGEgcGF0
ZW50CmxpY2Vuc2Ugd291bGQgbm90IHBlcm1pdCByb3lhbHR5LWZyZWUgcmVkaXN0cmlidXRpb24gb2Yg
dGhlIFByb2dyYW0gYnkKYWxsIHRob3NlIHdobyByZWNlaXZlIGNvcGllcyBkaXJlY3RseSBvciBpbmRp
cmVjdGx5IHRocm91Z2ggeW91LCB0aGVuCnRoZSBvbmx5IHdheSB5b3UgY291bGQgc2F0aXNmeSBib3Ro
IGl0IGFuZCB0aGlzIExpY2Vuc2Ugd291bGQgYmUgdG8KcmVmcmFpbiBlbnRpcmVseSBmcm9tIGRpc3Ry
aWJ1dGlvbiBvZiB0aGUgUHJvZ3JhbS4KCklmIGFueSBwb3J0aW9uIG9mIHRoaXMgc2VjdGlvbiBpcyBo
ZWxkIGludmFsaWQgb3IgdW5lbmZvcmNlYWJsZSB1bmRlcgphbnkgcGFydGljdWxhciBjaXJjdW1zdGFu
Y2UsIHRoZSBiYWxhbmNlIG9mIHRoZSBzZWN0aW9uIGlzIGludGVuZGVkIHRvCmFwcGx5IGFuZCB0aGUg
c2VjdGlvbiBhcyBhIHdob2xlIGlzIGludGVuZGVkIHRvIGFwcGx5IGluIG90aGVyCmNpcmN1bXN0YW5j
ZXMuCgpJdCBpcyBub3QgdGhlIHB1cnBvc2Ugb2YgdGhpcyBzZWN0aW9uIHRvIGluZHVjZSB5b3UgdG8g
aW5mcmluZ2UgYW55CnBhdGVudHMgb3Igb3RoZXIgcHJvcGVydHkgcmlnaHQgY2xhaW1zIG9yIHRvIGNv
bnRlc3QgdmFsaWRpdHkgb2YgYW55CnN1Y2ggY2xhaW1zOyB0aGlzIHNlY3Rpb24gaGFzIHRoZSBzb2xl
IHB1cnBvc2Ugb2YgcHJvdGVjdGluZyB0aGUKaW50ZWdyaXR5IG9mIHRoZSBmcmVlIHNvZnR3YXJlIGRp
c3RyaWJ1dGlvbiBzeXN0ZW0sIHdoaWNoIGlzCmltcGxlbWVudGVkIGJ5IHB1YmxpYyBsaWNlbnNlIHBy
YWN0aWNlcy4gIE1hbnkgcGVvcGxlIGhhdmUgbWFkZQpnZW5lcm91cyBjb250cmlidXRpb25zIHRvIHRo
ZSB3aWRlIHJhbmdlIG9mIHNvZnR3YXJlIGRpc3RyaWJ1dGVkCnRocm91Z2ggdGhhdCBzeXN0ZW0gaW4g
cmVsaWFuY2Ugb24gY29uc2lzdGVudCBhcHBsaWNhdGlvbiBvZiB0aGF0CnN5c3RlbTsgaXQgaXMgdXAg
dG8gdGhlIGF1dGhvci9kb25vciB0byBkZWNpZGUgaWYgaGUgb3Igc2hlIGlzIHdpbGxpbmcKdG8gZGlz
dHJpYnV0ZSBzb2Z0d2FyZSB0aHJvdWdoIGFueSBvdGhlciBzeXN0ZW0gYW5kIGEgbGljZW5zZWUgY2Fu
bm90CmltcG9zZSB0aGF0IGNob2ljZS4KClRoaXMgc2VjdGlvbiBpcyBpbnRlbmRlZCB0byBtYWtlIHRo
b3JvdWdobHkgY2xlYXIgd2hhdCBpcyBiZWxpZXZlZCB0bwpiZSBhIGNvbnNlcXVlbmNlIG9mIHRoZSBy
ZXN0IG9mIHRoaXMgTGljZW5zZS4KDAogIDguIElmIHRoZSBkaXN0cmlidXRpb24gYW5kL29yIHVzZSBv
ZiB0aGUgUHJvZ3JhbSBpcyByZXN0cmljdGVkIGluCmNlcnRhaW4gY291bnRyaWVzIGVpdGhlciBieSBw
YXRlbnRzIG9yIGJ5IGNvcHlyaWdodGVkIGludGVyZmFjZXMsIHRoZQpvcmlnaW5hbCBjb3B5cmlnaHQg
aG9sZGVyIHdobyBwbGFjZXMgdGhlIFByb2dyYW0gdW5kZXIgdGhpcyBMaWNlbnNlCm1heSBhZGQgYW4g
ZXhwbGljaXQgZ2VvZ3JhcGhpY2FsIGRpc3RyaWJ1dGlvbiBsaW1pdGF0aW9uIGV4Y2x1ZGluZwp0aG9z
ZSBjb3VudHJpZXMsIHNvIHRoYXQgZGlzdHJpYnV0aW9uIGlzIHBlcm1pdHRlZCBvbmx5IGluIG9yIGFt
b25nCmNvdW50cmllcyBub3QgdGh1cyBleGNsdWRlZC4gIEluIHN1Y2ggY2FzZSwgdGhpcyBMaWNlbnNl
IGluY29ycG9yYXRlcwp0aGUgbGltaXRhdGlvbiBhcyBpZiB3cml0dGVuIGluIHRoZSBib2R5IG9mIHRo
aXMgTGljZW5zZS4KCiAgOS4gVGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiBtYXkgcHVibGlzaCBy
ZXZpc2VkIGFuZC9vciBuZXcgdmVyc2lvbnMKb2YgdGhlIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZnJv
bSB0aW1lIHRvIHRpbWUuICBTdWNoIG5ldyB2ZXJzaW9ucyB3aWxsCmJlIHNpbWlsYXIgaW4gc3Bpcml0
IHRvIHRoZSBwcmVzZW50IHZlcnNpb24sIGJ1dCBtYXkgZGlmZmVyIGluIGRldGFpbCB0bwphZGRyZXNz
IG5ldyBwcm9ibGVtcyBvciBjb25jZXJucy4KCkVhY2ggdmVyc2lvbiBpcyBnaXZlbiBhIGRpc3Rpbmd1
aXNoaW5nIHZlcnNpb24gbnVtYmVyLiAgSWYgdGhlIFByb2dyYW0Kc3BlY2lmaWVzIGEgdmVyc2lvbiBu
dW1iZXIgb2YgdGhpcyBMaWNlbnNlIHdoaWNoIGFwcGxpZXMgdG8gaXQgYW5kICJhbnkKbGF0ZXIgdmVy
c2lvbiIsIHlvdSBoYXZlIHRoZSBvcHRpb24gb2YgZm9sbG93aW5nIHRoZSB0ZXJtcyBhbmQgY29uZGl0
aW9ucwplaXRoZXIgb2YgdGhhdCB2ZXJzaW9uIG9yIG9mIGFueSBsYXRlciB2ZXJzaW9uIHB1Ymxpc2hl
ZCBieSB0aGUgRnJlZQpTb2Z0d2FyZSBGb3VuZGF0aW9uLiAgSWYgdGhlIFByb2dyYW0gZG9lcyBub3Qg
c3BlY2lmeSBhIHZlcnNpb24gbnVtYmVyIG9mCnRoaXMgTGljZW5zZSwgeW91IG1heSBjaG9vc2UgYW55
IHZlcnNpb24gZXZlciBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUKRm91bmRhdGlvbi4KCiAg
MTAuIElmIHlvdSB3aXNoIHRvIGluY29ycG9yYXRlIHBhcnRzIG9mIHRoZSBQcm9ncmFtIGludG8gb3Ro
ZXIgZnJlZQpwcm9ncmFtcyB3aG9zZSBkaXN0cmlidXRpb24gY29uZGl0aW9ucyBhcmUgZGlmZmVyZW50
LCB3cml0ZSB0byB0aGUgYXV0aG9yCnRvIGFzayBmb3IgcGVybWlzc2lvbi4gIEZvciBzb2Z0d2FyZSB3
aGljaCBpcyBjb3B5cmlnaHRlZCBieSB0aGUgRnJlZQpTb2Z0d2FyZSBGb3VuZGF0aW9uLCB3cml0ZSB0
byB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyB3ZSBzb21ldGltZXMKbWFrZSBleGNlcHRpb25z
IGZvciB0aGlzLiAgT3VyIGRlY2lzaW9uIHdpbGwgYmUgZ3VpZGVkIGJ5IHRoZSB0d28gZ29hbHMKb2Yg
cHJlc2VydmluZyB0aGUgZnJlZSBzdGF0dXMgb2YgYWxsIGRlcml2YXRpdmVzIG9mIG91ciBmcmVlIHNv
ZnR3YXJlIGFuZApvZiBwcm9tb3RpbmcgdGhlIHNoYXJpbmcgYW5kIHJldXNlIG9mIHNvZnR3YXJlIGdl
bmVyYWxseS4KCgkJCSAgICBOTyBXQVJSQU5UWQoKICAxMS4gQkVDQVVTRSBUSEUgUFJPR1JBTSBJUyBM
SUNFTlNFRCBGUkVFIE9GIENIQVJHRSwgVEhFUkUgSVMgTk8gV0FSUkFOVFkKRk9SIFRIRSBQUk9HUkFN
LCBUTyBUSEUgRVhURU5UIFBFUk1JVFRFRCBCWSBBUFBMSUNBQkxFIExBVy4gIEVYQ0VQVCBXSEVOCk9U
SEVSV0lTRSBTVEFURUQgSU4gV1JJVElORyBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EL09SIE9USEVS
IFBBUlRJRVMKUFJPVklERSBUSEUgUFJPR1JBTSAiQVMgSVMiIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5Z
IEtJTkQsIEVJVEhFUiBFWFBSRVNTRUQKT1IgSU1QTElFRCwgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlU
RUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0YKTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNT
IEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRIRSBFTlRJUkUgUklTSyBBUwpUTyBUSEUgUVVBTElU
WSBBTkQgUEVSRk9STUFOQ0UgT0YgVEhFIFBST0dSQU0gSVMgV0lUSCBZT1UuICBTSE9VTEQgVEhFClBS
T0dSQU0gUFJPVkUgREVGRUNUSVZFLCBZT1UgQVNTVU1FIFRIRSBDT1NUIE9GIEFMTCBORUNFU1NBUlkg
U0VSVklDSU5HLApSRVBBSVIgT1IgQ09SUkVDVElPTi4KCiAgMTIuIElOIE5PIEVWRU5UIFVOTEVTUyBS
RVFVSVJFRCBCWSBBUFBMSUNBQkxFIExBVyBPUiBBR1JFRUQgVE8gSU4gV1JJVElORwpXSUxMIEFOWSBD
T1BZUklHSFQgSE9MREVSLCBPUiBBTlkgT1RIRVIgUEFSVFkgV0hPIE1BWSBNT0RJRlkgQU5EL09SClJF
RElTVFJJQlVURSBUSEUgUFJPR1JBTSBBUyBQRVJNSVRURUQgQUJPVkUsIEJFIExJQUJMRSBUTyBZT1Ug
Rk9SIERBTUFHRVMsCklOQ0xVRElORyBBTlkgR0VORVJBTCwgU1BFQ0lBTCwgSU5DSURFTlRBTCBPUiBD
T05TRVFVRU5USUFMIERBTUFHRVMgQVJJU0lORwpPVVQgT0YgVEhFIFVTRSBPUiBJTkFCSUxJVFkgVE8g
VVNFIFRIRSBQUk9HUkFNIChJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEClRPIExPU1MgT0YgREFUQSBP
UiBEQVRBIEJFSU5HIFJFTkRFUkVEIElOQUNDVVJBVEUgT1IgTE9TU0VTIFNVU1RBSU5FRCBCWQpZT1Ug
T1IgVEhJUkQgUEFSVElFUyBPUiBBIEZBSUxVUkUgT0YgVEhFIFBST0dSQU0gVE8gT1BFUkFURSBXSVRI
IEFOWSBPVEhFUgpQUk9HUkFNUyksIEVWRU4gSUYgU1VDSCBIT0xERVIgT1IgT1RIRVIgUEFSVFkgSEFT
IEJFRU4gQURWSVNFRCBPRiBUSEUKUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0VTLgoKCQkgICAgIEVO
RCBPRiBURVJNUyBBTkQgQ09ORElUSU9OUwoMCgkgICAgSG93IHRvIEFwcGx5IFRoZXNlIFRlcm1zIHRv
IFlvdXIgTmV3IFByb2dyYW1zCgogIElmIHlvdSBkZXZlbG9wIGEgbmV3IHByb2dyYW0sIGFuZCB5b3Ug
d2FudCBpdCB0byBiZSBvZiB0aGUgZ3JlYXRlc3QKcG9zc2libGUgdXNlIHRvIHRoZSBwdWJsaWMsIHRo
ZSBiZXN0IHdheSB0byBhY2hpZXZlIHRoaXMgaXMgdG8gbWFrZSBpdApmcmVlIHNvZnR3YXJlIHdoaWNo
IGV2ZXJ5b25lIGNhbiByZWRpc3RyaWJ1dGUgYW5kIGNoYW5nZSB1bmRlciB0aGVzZSB0ZXJtcy4KCiAg
VG8gZG8gc28sIGF0dGFjaCB0aGUgZm9sbG93aW5nIG5vdGljZXMgdG8gdGhlIHByb2dyYW0uICBJdCBp
cyBzYWZlc3QKdG8gYXR0YWNoIHRoZW0gdG8gdGhlIHN0YXJ0IG9mIGVhY2ggc291cmNlIGZpbGUgdG8g
bW9zdCBlZmZlY3RpdmVseQpjb252ZXkgdGhlIGV4Y2x1c2lvbiBvZiB3YXJyYW50eTsgYW5kIGVhY2gg
ZmlsZSBzaG91bGQgaGF2ZSBhdCBsZWFzdAp0aGUgImNvcHlyaWdodCIgbGluZSBhbmQgYSBwb2ludGVy
IHRvIHdoZXJlIHRoZSBmdWxsIG5vdGljZSBpcyBmb3VuZC4KCiAgICA8b25lIGxpbmUgdG8gZ2l2ZSB0
aGUgcHJvZ3JhbSdzIG5hbWUgYW5kIGEgYnJpZWYgaWRlYSBvZiB3aGF0IGl0IGRvZXMuPgogICAgQ29w
eXJpZ2h0IChDKSA8eWVhcj4gIDxuYW1lIG9mIGF1dGhvcj4KCiAgICBUaGlzIHByb2dyYW0gaXMgZnJl
ZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQogICAgaXQgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQg
YnkKICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDIgb2YgdGhl
IExpY2Vuc2UsIG9yCiAgICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgoKICAgIFRo
aXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVs
LAogICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2Fy
cmFudHkgb2YKICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVS
UE9TRS4gIFNlZSB0aGUKICAgIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFp
bHMuCgogICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UKICAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtOyBpZiBub3QsIHdyaXRlIHRv
IHRoZSBGcmVlIFNvZnR3YXJlCiAgICBGb3VuZGF0aW9uLCBJbmMuLCA1MSBGcmFua2xpbiBTdCwgRmlm
dGggRmxvb3IsIEJvc3RvbiwgTUEgIDAyMTEwLTEzMDEgIFVTQQoKCkFsc28gYWRkIGluZm9ybWF0aW9u
IG9uIGhvdyB0byBjb250YWN0IHlvdSBieSBlbGVjdHJvbmljIGFuZCBwYXBlciBtYWlsLgoKSWYgdGhl
IHByb2dyYW0gaXMgaW50ZXJhY3RpdmUsIG1ha2UgaXQgb3V0cHV0IGEgc2hvcnQgbm90aWNlIGxpa2Ug
dGhpcwp3aGVuIGl0IHN0YXJ0cyBpbiBhbiBpbnRlcmFjdGl2ZSBtb2RlOgoKICAgIEdub21vdmlzaW9u
IHZlcnNpb24gNjksIENvcHlyaWdodCAoQykgeWVhciBuYW1lIG9mIGF1dGhvcgogICAgR25vbW92aXNp
b24gY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZOyBmb3IgZGV0YWlscyB0eXBlIGBzaG93
IHcnLgogICAgVGhpcyBpcyBmcmVlIHNvZnR3YXJlLCBhbmQgeW91IGFyZSB3ZWxjb21lIHRvIHJlZGlz
dHJpYnV0ZSBpdAogICAgdW5kZXIgY2VydGFpbiBjb25kaXRpb25zOyB0eXBlIGBzaG93IGMnIGZvciBk
ZXRhaWxzLgoKVGhlIGh5cG90aGV0aWNhbCBjb21tYW5kcyBgc2hvdyB3JyBhbmQgYHNob3cgYycgc2hv
dWxkIHNob3cgdGhlIGFwcHJvcHJpYXRlCnBhcnRzIG9mIHRoZSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNl
LiAgT2YgY291cnNlLCB0aGUgY29tbWFuZHMgeW91IHVzZSBtYXkKYmUgY2FsbGVkIHNvbWV0aGluZyBv
dGhlciB0aGFuIGBzaG93IHcnIGFuZCBgc2hvdyBjJzsgdGhleSBjb3VsZCBldmVuIGJlCm1vdXNlLWNs
aWNrcyBvciBtZW51IGl0ZW1zLS13aGF0ZXZlciBzdWl0cyB5b3VyIHByb2dyYW0uCgpZb3Ugc2hvdWxk
IGFsc28gZ2V0IHlvdXIgZW1wbG95ZXIgKGlmIHlvdSB3b3JrIGFzIGEgcHJvZ3JhbW1lcikgb3IgeW91
cgpzY2hvb2wsIGlmIGFueSwgdG8gc2lnbiBhICJjb3B5cmlnaHQgZGlzY2xhaW1lciIgZm9yIHRoZSBw
cm9ncmFtLCBpZgpuZWNlc3NhcnkuICBIZXJlIGlzIGEgc2FtcGxlOyBhbHRlciB0aGUgbmFtZXM6Cgog
IFlveW9keW5lLCBJbmMuLCBoZXJlYnkgZGlzY2xhaW1zIGFsbCBjb3B5cmlnaHQgaW50ZXJlc3QgaW4g
dGhlIHByb2dyYW0KICBgR25vbW92aXNpb24nICh3aGljaCBtYWtlcyBwYXNzZXMgYXQgY29tcGlsZXJz
KSB3cml0dGVuIGJ5IEphbWVzIEhhY2tlci4KCiAgPHNpZ25hdHVyZSBvZiBUeSBDb29uPiwgMSBBcHJp
bCAxOTg5CiAgVHkgQ29vbiwgUHJlc2lkZW50IG9mIFZpY2UKClRoaXMgR2VuZXJhbCBQdWJsaWMgTGlj
ZW5zZSBkb2VzIG5vdCBwZXJtaXQgaW5jb3Jwb3JhdGluZyB5b3VyIHByb2dyYW0gaW50bwpwcm9wcmll
dGFyeSBwcm9ncmFtcy4gIElmIHlvdXIgcHJvZ3JhbSBpcyBhIHN1YnJvdXRpbmUgbGlicmFyeSwgeW91
IG1heQpjb25zaWRlciBpdCBtb3JlIHVzZWZ1bCB0byBwZXJtaXQgbGlua2luZyBwcm9wcmlldGFyeSBh
cHBsaWNhdGlvbnMgd2l0aCB0aGUKbGlicmFyeS4gIElmIHRoaXMgaXMgd2hhdCB5b3Ugd2FudCB0byBk
bywgdXNlIHRoZSBHTlUgTGlicmFyeSBHZW5lcmFsClB1YmxpYyBMaWNlbnNlIGluc3RlYWQgb2YgdGhp
cyBMaWNlbnNlLgo</bytes>
														</object>
														<dictionary key="NSAttributes" id="109248550">
															<object class="NSFont" key="NSFont">
																<string key="NSName">LucidaGrande</string>
																<double key="NSSize">10</double>
																<int key="NSfFlags">2843</int>
															</object>
															<object class="NSParagraphStyle" key="NSParagraphStyle">
																<int key="NSAlignment">3</int>
																<array key="NSTabStops">
																	<object class="NSTextTab" id="997967202">
																		<double key="NSLocation">0.0</double>
																	</object>
																	<object class="NSTextTab" id="900938709">
																		<double key="NSLocation">56</double>
																	</object>
																	<object class="NSTextTab" id="517132939">
																		<double key="NSLocation">112</double>
																	</object>
																	<object class="NSTextTab" id="268687256">
																		<double key="NSLocation">168</double>
																	</object>
																	<object class="NSTextTab" id="289737216">
																		<double key="NSLocation">224</double>
																	</object>
																	<object class="NSTextTab" id="638330243">
																		<double key="NSLocation">280</double>
																	</object>
																	<object class="NSTextTab" id="946106464">
																		<double key="NSLocation">336</double>
																	</object>
																	<object class="NSTextTab" id="19218256">
																		<double key="NSLocation">392</double>
																	</object>
																	<object class="NSTextTab" id="552359444">
																		<double key="NSLocation">448</double>
																	</object>
																	<object class="NSTextTab" id="28299400">
																		<double key="NSLocation">504</double>
																	</object>
																	<object class="NSTextTab" id="99151341">
																		<double key="NSLocation">560</double>
																	</object>
																	<object class="NSTextTab" id="73258591">
																		<double key="NSLocation">616</double>
																	</object>
																	<object class="NSTextTab" id="272834983">
																		<double key="NSLocation">672</double>
																	</object>
																	<object class="NSTextTab" id="305717618">
																		<double key="NSLocation">728</double>
																	</object>
																	<object class="NSTextTab" id="546173877">
																		<double key="NSLocation">784</double>
																	</object>
																	<object class="NSTextTab" id="824095121">
																		<double key="NSLocation">840</double>
																	</object>
																	<object class="NSTextTab" id="25141650">
																		<double key="NSLocation">896</double>
																	</object>
																	<object class="NSTextTab" id="689360852">
																		<double key="NSLocation">952</double>
																	</object>
																	<object class="NSTextTab" id="704629462">
																		<double key="NSLocation">1008</double>
																	</object>
																	<object class="NSTextTab" id="671760979">
																		<double key="NSLocation">1064</double>
																	</object>
																	<object class="NSTextTab" id="480002569">
																		<double key="NSLocation">1120</double>
																	</object>
																	<object class="NSTextTab" id="460278262">
																		<double key="NSLocation">1176</double>
																	</object>
																	<object class="NSTextTab" id="74722665">
																		<double key="NSLocation">1232</double>
																	</object>
																	<object class="NSTextTab" id="505553294">
																		<double key="NSLocation">1288</double>
																	</object>
																	<object class="NSTextTab" id="208505024">
																		<double key="NSLocation">1344</double>
																	</object>
																	<object class="NSTextTab" id="840571675">
																		<double key="NSLocation">1400</double>
																	</object>
																	<object class="NSTextTab" id="433101838">
																		<double key="NSLocation">1456</double>
																	</object>
																	<object class="NSTextTab" id="664696086">
																		<double key="NSLocation">1512</double>
																	</object>
																	<object class="NSTextTab" id="291671683">
																		<double key="NSLocation">1568</double>
																	</object>
																	<object class="NSTextTab" id="419541375">
																		<double key="NSLocation">1624</double>
																	</object>
																	<object class="NSTextTab" id="773943636">
																		<double key="NSLocation">1680</double>
																	</object>
																	<object class="NSTextTab" id="215895062">
																		<double key="NSLocation">1736</double>
																	</object>
																</array>
															</object>
														</dictionary>
														<nil key="NSDelegate"/>
													</object>
													<array class="NSMutableArray" key="NSTextContainers">
														<reference ref="864385540"/>
													</array>
													<int key="NSLMFlags">6</int>
													<nil key="NSDelegate"/>
												</object>
												<reference key="NSTextView" ref="829392622"/>
												<double key="NSWidth">418</double>
												<int key="NSTCFlags">1</int>
											</object>
											<object class="NSTextViewSharedData" key="NSSharedData">
												<int key="NSFlags">11237</int>
												<int key="NSTextCheckingTypes">0</int>
												<nil key="NSMarkedAttributes"/>
												<object class="NSColor" key="NSBackgroundColor" id="25551725">
													<int key="NSColorSpace">3</int>
													<bytes key="NSWhite">MQA</bytes>
												</object>
												<dictionary key="NSSelectedAttributes">
													<object class="NSColor" key="NSBackgroundColor" id="536470479">
														<int key="NSColorSpace">6</int>
														<string key="NSCatalogName">System</string>
														<string key="NSColorName">selectedTextBackgroundColor</string>
														<object class="NSColor" key="NSColor">
															<int key="NSColorSpace">3</int>
															<bytes key="NSWhite">MC42NjY2NjY2NjY3AA</bytes>
														</object>
													</object>
													<object class="NSColor" key="NSColor" id="855663993">
														<int key="NSColorSpace">6</int>
														<string key="NSCatalogName">System</string>
														<string key="NSColorName">selectedTextColor</string>
														<object class="NSColor" key="NSColor" id="476705509">
															<int key="NSColorSpace">3</int>
															<bytes key="NSWhite">MAA</bytes>
														</object>
													</object>
												</dictionary>
												<reference key="NSInsertionColor" ref="476705509"/>
												<dictionary key="NSLinkAttributes">
													<object class="NSColor" key="NSColor" id="356941961">
														<int key="NSColorSpace">1</int>
														<bytes key="NSRGB">MCAwIDEAA</bytes>
													</object>
													<integer value="1" key="NSUnderline"/>
												</dictionary>
												<nil key="NSDefaultParagraphStyle"/>
											</object>
											<int key="NSTVFlags">6</int>
											<string key="NSMaxSize">{853, 1e+07}</string>
											<string key="NSMinize">{223, 91}</string>
											<nil key="NSDelegate"/>
										</object>
									</array>
									<string key="NSFrame">{{1, 1}, {418, 378}}</string>
									<reference key="NSSuperview" ref="954278164"/>
									<reference key="NSNextKeyView" ref="829392622"/>
									<reference key="NSDocView" ref="829392622"/>
									<reference key="NSBGColor" ref="25551725"/>
									<object class="NSCursor" key="NSCursor" id="555687736">
										<string key="NSHotSpot">{4, -5}</string>
										<int key="NSCursorType">1</int>
									</object>
									<int key="NScvFlags">4</int>
								</object>
								<object class="NSScroller" id="821970585">
									<reference key="NSNextResponder" ref="954278164"/>
									<int key="NSvFlags">256</int>
									<string key="NSFrame">{{419, 1}, {15, 378}}</string>
									<reference key="NSSuperview" ref="954278164"/>
									<bool key="NSEnabled">YES</bool>
									<reference key="NSTarget" ref="954278164"/>
									<string key="NSAction">_doScroller:</string>
									<double key="NSPercent">0.088235294117647065</double>
								</object>
								<object class="NSScroller" id="765850010">
									<reference key="NSNextResponder" ref="954278164"/>
									<int key="NSvFlags">-2147483392</int>
									<string key="NSFrame">{{-100, -100}, {87, 18}}</string>
									<reference key="NSSuperview" ref="954278164"/>
									<int key="NSsFlags">1</int>
									<reference key="NSTarget" ref="954278164"/>
									<string key="NSAction">_doScroller:</string>
									<double key="NSCurValue">1</double>
									<double key="NSPercent">0.94565218687057495</double>
								</object>
							</array>
							<string key="NSFrame">{{20, 20}, {435, 380}}</string>
							<reference key="NSSuperview" ref="143187975"/>
							<reference key="NSNextKeyView" ref="646620328"/>
							<int key="NSsFlags">82</int>
							<reference key="NSVScroller" ref="821970585"/>
							<reference key="NSHScroller" ref="765850010"/>
							<reference key="NSContentView" ref="646620328"/>
						</object>
					</array>
					<string key="NSFrameSize">{475, 420}</string>
				</object>
				<string key="NSScreenRect">{{0, 0}, {1440, 878}}</string>
				<string key="NSMaxSize">{1.79769e+308, 1.79769e+308}</string>
			</object>
			<object class="NSWindowTemplate" id="260034545">
				<int key="NSWindowStyleMask">7</int>
				<int key="NSWindowBacking">2</int>
				<string key="NSWindowRect">{{489, 227}, {497, 448}}</string>
				<int key="NSWTFlags">1685586944</int>
				<string key="NSWindowTitle">Changelog</string>
				<string key="NSWindowClass">NSWindow</string>
				<nil key="NSViewClass"/>
				<string key="NSWindowContentMaxSize">{1.79769e+308, 1.79769e+308}</string>
				<object class="NSView" key="NSWindowView" id="456192061">
					<reference key="NSNextResponder"/>
					<int key="NSvFlags">256</int>
					<array class="NSMutableArray" key="NSSubviews">
						<object class="NSScrollView" id="524841832">
							<reference key="NSNextResponder" ref="456192061"/>
							<int key="NSvFlags">256</int>
							<array class="NSMutableArray" key="NSSubviews">
								<object class="NSClipView" id="1060181361">
									<reference key="NSNextResponder" ref="524841832"/>
									<int key="NSvFlags">2304</int>
									<array class="NSMutableArray" key="NSSubviews">
										<object class="NSTextView" id="484579320">
											<reference key="NSNextResponder" ref="1060181361"/>
											<int key="NSvFlags">2322</int>
											<string key="NSFrameSize">{440, 15793}</string>
											<reference key="NSSuperview" ref="1060181361"/>
											<object class="NSTextContainer" key="NSTextContainer" id="217334750">
												<object class="NSLayoutManager" key="NSLayoutManager">
													<object class="NSTextStorage" key="NSTextStorage">
														<object class="NSMutableString" key="NSString">
															<bytes key="NS.bytes">VGhpcyBpcyBtZWFudCB0byBiZSBhIGNvbmNpc2UgbGlzdCBvZiBwbGF5ZXItdmlzaWJsZSBjaGFuZ2Vz
ICh2ZXJ5IG1pbm9yCmNoYW5nZXMgbWF5IGJlIG9taXR0ZWQpLiBGb3IgYSBjb21wbGV0ZSBsaXN0IG9m
IGNoYW5nZXMsIHNlZSB0aGUgbWFpbgpjaGFuZ2Vsb2c6IGh0dHA6Ly9zdm4uZ25hLm9yZy92aWV3Y3Zz
LypjaGVja291dCovd2Vzbm90aC90cnVuay9jaGFuZ2Vsb2cKClZlcnNpb24gMS45LjI6CiAqIENhbXBh
aWduczoKICAgKiBEZXNjZW50IGludG8gRGFya25lc3M6CiAgICAgKiBNYWRlICdBbG9uZSBhdCBMYXN0
JyBlYXNpZXIuCiAgICogTGVnZW5kIG9mIFdlc21lcmU6CiAgICAgKiBNYXAgdXBkYXRlcy4KICAgICAq
IEltcGxlbWVudGVkIGdvbGQgY2FycnlvdmVyIGJldHdlZW4gdGhlIG11bHRpcGxheWVyIGNoYXB0ZXJz
LgogICAgICogQWRkZWQgZXh0cmEga2VlcHMgdG8ga2VlcCB1cCB3aXRoIHRoZSBncm93aW5nIG51bWJl
ciBvZiBsZWFkZXJzLgogICAqIEhlaXIgdG8gdGhlIFRocm9uZToKICAgICAqIEZpeGVkIGEgYnVnIGNh
dXNpbmcgV2FydmVuIGluICdDbGlmZnMgb2YgVGhvcmlhJyBub3QgYWJsZSB0byBtb3ZlIHRocm91Z2gK
ICAgICAgIG1vdW50YWlucy4KICAgKiBMaWJlcnR5OgogICAgICogTmV3IHNldCBvZiBwb3J0cmFpdHMu
CiAgICAgKiBDaGFuZ2VkIFJlbG5hbidzIGNoYXJhY3RlciB0byBhIHdvbWFuLgogICAgICogTmV3ICh1
bmFuaW1hdGVkKSBzcHJpdGVzIGZvciB0aGUgUm9ndWUgTWFnZSB1bml0IGxpbmUuCiAgICAgKiBWYXJp
b3VzIGJhbGFuY2luZyBjaGFuZ2VzIHRvIHRoZSBSb2d1ZSBNYWdlIHVuaXQgbGluZS4KICAgKiBOb3J0
aGVybiBSZWJpcnRoOgogICAgICogTWFrZSBpdCBwb3NzaWJsZSB0byBjaG9vc2Ugd2hldGhlciBhIHVu
aXQgc2hvdWxkIHBpY2sgdXAgdGhlCiAgICAgICBSb2Qgb2YgSnVzdGljZSBvciBub3QuCiAgICogVGhl
IFJpc2Ugb2YgV2Vzbm90aDoKICAgICAqIE5ldyBzZXQgb2YgcG9ydHJhaXRzLCBleGNlcHQgZm9yIEpl
dnlhbiBhbmQgUml0aHJhbmRpbC4KICAgICAqIEdhdmUgSmV2eWFuJ3MgZmFtaWxpYXIgYSBjdXN0b20g
dW5pdCB0eXBlLgogICAqIFNjZXB0cmUgb2YgRmlyZToKICAgICAqIFRodXJzYWdhbiBjYW4gbm93IGFk
dmFuY2UgdG8gRHdhcnZpc2ggQXJjYW5pc3Rlci4KICAgICAqIE5ldyAodW5hbmltYXRlZCkgc3ByaXRl
cyBmb3IgdGhlIER3YXJ2aXNoIE1pbmVyLgogICAqIFNvbiBvZiB0aGUgQmxhY2sgRXllOgogICAgICog
Q2hhbmdlcyB0byB0aGUgb2JqZWN0aXZlcyBhbmQgZ2FtZXBsYXkgb2YgJ0NsYXNoIG9mIEFybWllcycu
CiAgICogVGhlIFNvdXRoIEd1YXJkOgogICAgICogTmV3IHBvcnRyYWl0IGZvciBNYWwgTSdCcmluLgoK
ICogR3JhcGhpY3M6CiAgICogVGVycmFpbjoKICAgICAqIEFueSBDYXN0bGUgb3IgS2VlcCBleGNlcHQg
RHdhcnZpc2ggY2FuIG5vdyBiZSBjb21iaW5lZCB3aXRob3V0IGxhcmdlIGdhcHMKICAgICAgIG9yIGV4
dHJhIHdhbGxzLgogICAgICogTmV3IGdyYXBoaWNzIGZvciB3b29kZW4gYnJpZGdlcy4KICAgICAqIEFk
ZGVkIHZhcmlhbnQgb2YgY2hhc20gYnJpZGdlIGZvciBvdmVyIHdhdGVyLgogICAgICogTmV3IHRyYW5z
aXRpb25zIGZyb20gYWxsIEhpbGxzIGFuZCBNb3VudGFpbnMgdG8gV2F0ZXIuCiAgICAgKiBBIG5ldyBk
ZXNhdHVyYXRlZCBjb2xvciBvZiBvY2VhbiBhbmQgc2hhbGxvdyB3YXRlci4KICAgICAqIE11Y2ggaW1w
cm92ZWQgbGF2YSB0cmFuc2l0aW9ucy4KICAgICAqIE5ldyBXYXRlcmZhbGwgYXV0b21hdGljYWxseSBw
bGFjZWQgYmV0d2VlbiBjaGFzbSBhbmQgd2F0ZXIgb3Igc3dhbXAuCiAgICAgKiBBZGRlZCBSdWluZWQg
SHVtYW4gQ2l0eSB0ZXJyYWluLgogICAqIEFuaW1hdGlvbnM6CiAgICAgKiBTdGFuZGluZyBhbmltczog
RmVuY2VyLCBTcGVhcm1hbiwgRHdhcmYgR3VhcmQuCiAgICAgKiBJZGxlIGFuaW1zOiAyIGZvciB0aGUg
U3BlYXJtYW4uCiAgICAgKiBGaXhlZCBkcmFrZXMgZmx5aW5nIG9yIG5vdCBmbHlpbmcgb3ZlciBhbGwg
dGhlIGNvcnJlY3QgdGVycmFpbnMuCiAgICogUG9ydHJhaXRzOiBEcmFrZSBCbGFkZW1hc3RlciwgSHVy
cmljYW5lIERyYWtlLCBEcmFrZSBGbGFtZWhlYXJ0LCBhbHRlcm5hdGUKICAgICBTd29yZHNtYW4uCiAg
ICogVW5pdHM6IE5ldyBiYXNlIGZyYW1lIGFuZCBhbmltYXRpb25zIGZvciBNdWRjcmF3bGVyLgoKICog
TGFuZ3VhZ2UgYW5kIGkxOG46CiAgICogVXBkYXRlZCB0cmFuc2xhdGlvbnM6IENoaW5lc2UgKFRyYWRp
dGlvbmFsKSwgQ3plY2gsIER1dGNoLCBHYWxpY2lhbiwKICAgICBHZXJtYW4sIEluZG9uZXNpYW4sIEl0
YWxpYW4sIEphcGFuZXNlLCBLb3JlYW4sIExpdGh1YW5pYW4sCiAgICAgUG9ydHVndWVzZSAoQnJhemls
KSwgUnVzc2lhbiwgU2hhdmlhbiwgU2xvdmFrLCBTbG92ZW5pYW4sIFZpZXRuYW1lc2UuCgogKiBVbml0
IGNoYW5nZXMgYW5kIGJhbGFuY2luZzoKICAgKiBEZWNyZWFzZWQgdGhlIHBoeXNpY2FsIHJlc2lzdGFu
Y2VzIG9mIHRoZSBEd2FydmlzaCBTY291dCBhbmQgRHdhcnZpc2gKICAgICBQYXRoZmluZGVyIHRvIDEw
JSBhbmQgdGhvc2Ugb2YgdGhlIER3YXJ2aXNoIEV4cGxvcmVyIHRvIDIwJS4KICAgKiBEZWNyZWFzZWQg
dGhlIHZpbGxhZ2UgZGVmZW5zZSBvZiBDaG9jb2JvbmUgZnJvbSA2MCUgdG8gNDAlLgogICAqIEZpeGVk
IHZpbGxhZ2VzIG9uIHNub3cgYW5kIHNhbmQgaGlsbHMgcHJvdmlkaW5nIHdvcnN0IGluc3RlYWQgb2Yg
YmVzdAogICAgIG1vdmVtZW50LgoKICogVXNlciBpbnRlcmZhY2U6CiAgICogSW1wcm92ZWQgdGhlIGxh
eW91dCBvZiB0aGUgdGl0bGUgc2NyZWVuIGFuZCBmaXhlZCBzZXZlcmFsIGJ1Z3MgaW4gaXQuCiAgICog
V2hpdGVib2FyZCBwbGFubmluZyBzeXN0ZW06CiAgICAgKiBGaXhlZCBhIGNyYXNoIHdoZW4gY3JlYXRp
bmcgYSBwbGFubmVkIG1vdmUgd2hlbiBwbGF5aW5nIFdlc25vdGggb24KICAgICAgIFdpbmRvd3MuCiAg
ICAgKiBOZXcgIkV4ZWN1dGUgYWxsIGFjdGlvbnMiIGNvbW1hbmQgYm91bmQgdG8gQ1RSTCt5LgoKVmVy
c2lvbiAxLjkuMToKICogQ2FtcGFpZ25zOgogICAqIEEgVGFsZSBvZiBUd28gQnJvdGhlcnM6CiAgICAg
KiBOZXcgcG9ydHJhaXRzIGZvciBBcm5lIGFuZCBCamFybi4KICAgKiBEZWFkIFdhdGVyOgogICAgICog
Rml4ZWQgdGhlIGxhc3Qgc2NlbmFyaW8gbm90IHdvcmtpbmcgZHVlIHRvIGFuICd1bmtub3duIHNjZW5h
cmlvJyBlcnJvci4KICAgKiBEZXNjZW50IGludG8gRGFya25lc3M6CiAgICAgKiBGaXhlZCB0aGUgJ0Eg
U21hbGwgRmF2b3InIHNjZW5hcmlvcyBiZWluZyB1bmJlYXRhYmxlLgogICAqIEVhc3Rlcm4gSW52YXNp
b246CiAgICAgKiBJbmNyZWFzZWQgT3dhZWMncyBoaXRwb2ludHMgYW5kIGF0dGFjayBzdGF0cywgYW5k
IGFkZGVkIGEgbmV3IHdlYXBvbgogICAgICAgc3BlY2lhbCB0byBoaXMgbW9ybmluZ3N0YXIgb24gbGV2
ZWxzIDIgYW5kIDMuCiAgICogVGhlIFJpc2Ugb2YgV2Vzbm90aDoKICAgICAqIE1hZGUgc3VycHJpc2Ug
ZW5lbXkgc3Bhd25zIGFwcGVhciBpbiBhIGxlc3MgaW1tZWRpYXRlbHkgZGFuZ2Vyb3VzIHdheSBpbgog
ICAgICAgJ1RoZSBNaWRsYW5kcycsICdUaGUgU3dhbXAgb2YgRXN0ZW4nLCAnUGVvcGxlcyBpbiBEZWNs
aW5lJywKICAgICAgICdBIFJvdWdoIExhbmRpbmcnLCAnVGhlIFZhbmd1YXJkJywgJ1JldHVybiBvZiB0
aGUgRmxlZXQnIGFuZAogICAgICAgJ1Jpc2Ugb2YgV2Vzbm90aCcuCiAgICAgKiBDbGFyaWZpZWQgdGhl
IGVhcmx5IGZpbmlzaCBib251cyBjb25kaXRpb25zIGluICdGYWxsZW4gTGljaCBQb2ludCcgYW5kCiAg
ICAgICAnU2V3ZXIgb2YgU291dGhiYXknLgogICAgICogQWxsb3dlZCBNZXJtYW4gSHVudGVycyB0byBi
ZSByZWNydWl0ZWQgYWxvbmdzaWRlIE1lcm1hbiBGaWdodGVycy4KICAgKiBUaGUgU291dGggR3VhcmQ6
CiAgICAgKiBGaXhlZCBhIGJ1ZyBjYXVzaW5nIGEgZnJlZXplIGF0IHRoZSBiZWdpbm5pbmcgb2YgJ1Ro
ZSBMb25nIE1hcmNoJy4KCiAqIEdyYXBoaWNzOgogICAqIE5ldyBhbmltYXRpb25zOiBNZXJtYW4gSHVu
dGVyIHJhbmdlZCBhbmltYXRpb24gYW5kIGRlZmVuY2UsIFdhcnJpb3Igc2UKICAgICBhdHRhY2sgYW5k
IGRlZmVuY2UsIERyYWtlIEZsYXJlIGFuZCBGbGFtZWhlYXJ0IGxlYWRlcnNoaXAuCiAgICogTmV3IHBv
cnRyYWl0czogSW5mZXJubyBEcmFrZSwgTWVybWFpZCBJbml0aWF0ZSBhbHRlcm5hdGUsIEdvYmxpbiBz
cGVhcm1hbgogICAgIGFsdGVybmF0ZQogICAqIE5ldyBUZXJyYWluOiBUcm9waWNhbCBPY2VhbiwgU25v
d3kgSHVtYW4gQ2l0eSBWaWxsYWdlLCBNdWRkeSBRdWFnbWlyZQogICAqIEltcHJvdmVkIFRlcnJhaW46
IERlc2VydCBNb3VudGFpbnMsIGFsbCAzIERpcnRzLCBhbGwgMyBjb2JibGVkIHJvYWRzLgoKICogTGFu
Z3VhZ2UgYW5kIGkxOG46CiAgICogVXBkYXRlZCB0cmFuc2xhdGlvbnM6IENoaW5lc2UgKFNpbXBsaWZp
ZWQpLCBDaGluZXNlIChUcmFkaXRpb25hbCksIEZyZW5jaCwKICAgICBHZXJtYW4sIEh1bmdhcmlhbiwg
SW5kb25lc2lhbiwgSmFwYW5lc2UsIExpdGh1YW5pYW4sIFBvbGlzaCwgUnVzc2lhbiwKICAgICBTbG92
YWssIFZpZXRuYW1lc2UuCgogKiBNdWx0aXBsYXllcjoKICAgKiBVcGRhdGVkIG1hcHM6IDRwIEhhbWxl
dHMuCiAgICogVXBkYXRlZCBtb3N0IG9mIHRoZSBtYXBzIHRha2luZyBhZHZhbnRhZ2Ugb2YgdGhlIG5l
dyB0ZXJyYWlucy4KCiAqIFVuaXQgY2hhbmdlcyBhbmQgYmFsYW5jaW5nOgogICAqIERlY3JlYXNlZCB0
aGUgbWVsZWUgYW5kIHJhbmdlZCBhdHRhY2sgb2YgdGhlIEZvb3RwYWQgZnJvbSA1LTIgdG8gNC0yLgog
ICAqIEFkZGVkIHRoZSBHaGFzdCB1bml0IGZyb20gRGlEIHRvIGNvcmUgd2l0aCBuZXcgYmFzZSBmcmFt
ZSBhbmQgYW5pbWF0aW9ucy4KICAgKiBBbGwgYmF0cyBhcmUgbm93IGdpdmVuIGEgJ2ZlcmFsJyB0cmFp
dCB3aGljaCBjYXBzIHRoZWlyIGRlZmVuc2Ugb24gdmlsbGFnZXMKICAgICB0byA0MCUgYW5kIGFsc28g
bWFraW5nIHRoZW0gcmVjZWl2ZSBvbmx5IG9uZSByYW5kb20gdHJhaXQuCiAgICogQWxsIHZpbGxhZ2Vz
IGV4Y2VwdCBmb3Igd2F0ZXIgYW5kIHN3YW1wIHZpbGxhZ2VzIGFyZSBub3cgYWxpYXNlZCB0byBib3Ro
CiAgICAgdmlsbGFnZSBhbmQgdGhlIHRlcnJhaW4gdGhleSdyZSBwbGFjZWQgb24sIGdpdmluZyBiZXN0
IG1vdmVtZW50IGFuZCBkZWZlbnNlCiAgICAgb2YgYm90aC4KCiAqIFVzZXIgaW50ZXJmYWNlOgogICAq
IFVzZSByZWQvZ3JlZW4gY29sb3IgZm9yIGRhbWFnZSBpbiBzaWRlYmFyIHdoZW4gbW9kaWZpZWQgYnkg
Ym9udXMvbWFsdXMuCiAgICogRGFtYWdlIHR5cGUgdG9vbHRpcCBub3cgYWxzbyBzaG93cyBkYW1hZ2Ug
YWZ0ZXIgcmVzaXN0YW5jZSBjYWxjdWxhdGlvbi4KICAgKiBQbGFjaW5nIGEgd2F5cG9pbnQgb24gYSBj
YXB0dXJhYmxlIHZpbGxhZ2Ugd2lsbCBub3cgbWFrZSB0aGUgdW5pdCBwYXVzZQogICAgIHRoZXJlIHRv
IGNhcHR1cmUgaXQgKEZSIzE2NjAzKS4KCiAqIE1pc2NlbGxhbmVvdXM6CiAgICogUmVtb3ZlZDogc3Rh
dGlzdGljcyB1cGxvYWQgY29kZS4KICAgKiBPcHRpbWl6ZSBjYWNoZSBjcmVhdGlvbiBhbmQgbG9hZGlu
Zy4KICAgKiBWYXJpb3VzIGZyYW1lcmF0ZSBvcHRpbWl6YXRpb25zLgoKVmVyc2lvbiAxLjkuMDoKICog
Q2FtcGFpZ25zOgogICAqIEFuIE9yY2lzaCBJbmN1cnNpb246CiAgICAgKiBNYWRlICdWYWxsZXkgb2Yg
VHJvbGxzJyBlYXNpZXIgb24gdGhlIGVhc2llc3QgZGlmZmljdWx0aWVzLgogICAqIERlYWQgV2F0ZXI6
CiAgICAgKiBOZXcgY2FtcGFpZ24gYWRkZWQgdG8gbWFpbmxpbmUgKEludGVybWVkaWF0ZSBsZXZlbCwg
MTMgc2NlbmFyaW9zKS4KICAgKiBEZXNjZW50IGludG8gRGFya25lc3M6CiAgICAgKiAnQSBTbWFsbCBG
YXZvcicgKHBhcnQgMSkgbm93IGdpdmVzIGFuIGVhcmx5IGZpbmlzaCBib251cy4KICAgICAqIERlbGEg
aXMgbm8gbG9uZ2VyIGludnVsbmVyYWJsZSBpbiAnQWxvbmUgYXQgTGFzdCcgYnV0IGNhbm5vdCBiZSBz
YWZlbHkKICAgICAgIGFzc2Fzc2luYXRlZC4KICAgKiBFYXN0ZXJuIEludmFzaW9uOgogICAgICogTmV3
ICh1bmFuaW1hdGVkKSBzcHJpdGVzIGZvciBPd2FlYy4KICAgICAqIE1hZGUgaXQgc2xpZ2h0bHkgZWFz
aWVyIHRvIHJlc2N1ZSB0aGUga25pZ2h0cyBpbiAnTWFsLVJhdmFuYWwncyBDYXBpdGFsJy4KICAgKiBI
ZWlyIHRvIHRoZSBUaHJvbmU6CiAgICAgKiBNYWRlICdDbGlmZnMgb2YgVGhvcmlhJyBtdWNoIGVhc2ll
ci4KICAgKiBMaWJlcnR5OgogICAgICogSW5jcmVhc2VkIHRoZSBkaWZmaWN1bHR5IG9mICdVbmxhd2Z1
bCBPcmRlcnMnLCAnVGhlIEdyZXkgV29vZHMnIGFuZCAnVGhlCiAgICAgICBIdW50ZXJzJyBhbmQgJ0ds
b3J5Jy4KICAgKiBOb3J0aGVybiBSZWJpcnRoOgogICAgICogSW4gU2hvd2Rvd24sIHlvdSByZWNvdmVy
IGZ1bGwgZ29sZCBvbmx5IGlmIFNpc2FsIHN1cnZpdmVkIHRoZSBwcmV2aW91cwogICAgICAgc2NlbmFy
aW8uCiAgICogU2NlcHRyZSBvZiBGaXJlOgogICAgICogRml4ZWQgYnVnICMxNjQwNjogRml4ZWQgYnJv
a2VuIEFJIGluIGZpcnN0IHNjZW5hcmlvLgogICAqIFRoZSBTb3V0aCBHdWFyZDoKICAgICAqIEEgbmV3
IHNldCBvZiBzdG9yeSBhcnQgYnkgU2NhdmVuZ2VyLgogICAgICogSW4gJ1ZlbmdlYW5jZScsIHRoZSBm
aW5hbCBvYmplY3RpdmUgaXMgbm93IHJldmVhbGVkIGF0IHRoZSBiZWdpbm5pbmcgb2YKICAgICAgIHRo
ZSBzY2VuYXJpby4KICAgICAqIE5ldyBpbWFnZXMgZm9yIHRoZSBJbmZhbnRyeSBMaWV1dGVuYW50IGFu
ZCBDb21tYW5kZXIgYnkgUmh5Z2luZzUKICAgKiBTY2VuYXJpb3MgaW4gRWFzdGVybiBJbnZhc2lvbiwg
TGliZXJ0eSwgTm9ydGhlcm4gUmViaXJ0aCwgU29uIG9mIHRoZQogICAgIEJsYWNrLUV5ZSBhbmQgVGhl
IFJpc2Ugb2YgV2Vzbm90aCB3aGljaCBmZWF0dXJlIGNvbXB1dGVyLWNvbnRyb2xsZWQgYWxsaWVzCiAg
ICAgbm93IGFsbG93IHlvdSB0byBhZmZlY3QgdGhlaXIgYmVoYXZpb3IgdmlhIHRoZSByaWdodC1jbGlj
ayBtZW51LgoKICogR3JhcGhpY3M6CiAgICogTmV3IFRlcnJhaW5zOiBzdG9uZS13YWxsLWxpdCwgc25v
d3kgY2FzdGxlLCBzbm93eSBmb3J0LCBkZXNlcnQgY2FzdGxlLAogICAgIHRyb3BpY2FsIHdhdGVyLCBk
ZWFkIGdyYXNzLCBkYXJrIGRpcnQsIG1pbmUgcmFpbCB0cmFja3MsIGRyeSBoaWxscywKICAgICBldGhl
cmlhbCBhYnlzcywgY2xlYW4gY29iYmxlZCByb2FkLCBkYXJrIGZsYWdzdG9uZXMgbWFpbmxpbmVkIGZy
b20gVXRCUywKICAgICB3b29kIGZsb29yLCBtdXNocm9vbSBmYXJtLCB2b2xjYW5vLCBzbm93eSBlbmNh
bXBtZW50LCBlYXJ0aHkgY2hhc20sCiAgICAgaGV3biBjYXZlIHdhbGwsIGVhcnRoeSBjYXZlIGZsb29y
LCBlYXJ0aHkgY2F2ZSB3YWxsLAogICAgIGFuZCBlYXJ0aHkgaGV3biBjYXZlIHdhbGwuCiAgICogSW1w
cm92ZWQgVGVycmFpbnM6IGFuaW1hdGVkIHdhdGVyIGFuZCBzd2FtcCwgZ3Jhc3MsIHNhdmFubmEsIGRl
c2VydCByb2FkLCBjb2JibGVkCiAgICAgcm9hZCwgaHVtYW4gY2l0eSB2aWxsYWdlLCBvdmVyZ3Jvd24g
cGF0aCwgYW5kIGNoYXNtLgogICAqIE5ldyBQb3J0cmFpdHM6IE9yYyBBcmNoZXIsIENyb3NzYm93bWFu
LCBTbHVyYm93LCBTbGF5ZXIsIE9yYyBHcnVudCBsaW5lCiAgICAgYWx0ZXJuYXRlcyAjNCwgIzUgYW5k
ICM2LCBEcmF1ZyBhbmQgYWx0ZXJuYXRlLCBHaG91bCwgU2tlbGV0b24gQXJjaGVyIGxpbmUKICAgICBH
aWFudCBNdWRjcmF3bGVyLCBPcmMgTGVhZGVyL1J1bGVyLCBhbiBhbHRlcm5hdGUgTGVhZGVyIGFuZCBT
b3ZlcmVpZ24sCiAgICAgTG95YWxpc3QgU3dvcmRzbWFuIGFsdGVybmF0ZSwgRHJha2UgRmlnaHRlciwg
QnVybmVyLgogICAqIE5ldyBBbmltYXRpb25zOiBEcmFrZSBGbGFyZSBhbmQgRmxhbWVoZWFydCAobGVh
ZGluZyBhbmltYXRpb24gc3RpbGwKICAgICBtaXNzaW5nKSwgRHdhcmYgTG9yZCByYW5nZWQgYXR0YWNr
LCBEd2FyZiBHdWFyZCBtZWxlZSBhdHRhY2ssIER3YXJmCiAgICAgUGF0aGZpbmRlciBpZGxlLCBSdWZm
aWFuIGF0dGFjayBhbmQgZGVmZW5kLCBTcGVhcm1hbiBzIGFuZCBzZSBhdHRhY2suCiAgICogTmV3IGJh
c2UgZnJhbWUgYW5kIGFuaW1hdGlvbnMgZm9yIEFybWFnZWRkb24gRHJha2UuCiAgICogVHdvIG5ldyBm
bGFnIHN0eWxlcy4KICAgKiBBbmltYXRlIHRlcnJhaW4gaW4gZWRpdG9yCgogKiBMYW5ndWFnZSBhbmQg
aTE4bjoKICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQnJpdGlzaCBFbmdsaXNoLCBDYXRhbGFuLCBD
aGluZXNlIChTaW1wbGlmaWVkKSwKICAgICBDaGluZXNlIChUcmFkaXRpb25hbCksIEN6ZWNoLCBEdXRj
aCwgRXN0b25pYW4sIEZpbm5pc2gsIEZyZW5jaCwgR2FsaWNpYW4sCiAgICAgR2VybWFuLCBIdW5nYXJp
YW4sIEluZG9uZXNpYW4sIEl0YWxpYW4sIEphcGFuZXNlLCBMYXRpbiwgTGF0dmlhbiwKICAgICBMaXRo
dWFuaWFuLCBQb2xpc2gsIFJ1c3NpYW4sIFNlcmJpYW4sIFNwYW5pc2gsIFNsb3ZhaywgVmlldG5hbWVz
ZS4KCiAqIE11bHRpcGxheWVyOgogICAqIFVwZGF0ZWQgbWFwOiBSdWlucyBvZiBUZXJyYS1Ed2VsdmUu
CiAgICogRml4ZWQgYnVnICMxNTg2NTogbWlzc2luZyBXTUwgQ2hpbGQgZXJyb3IuCiAgICogQWRkZWQg
dGhlIHdpbm5lciBvZiB0aGUgZmlyc3QgV2Vzbm90aCBtYXAgY29tcGV0aXRpb24sIHRoZSAyIHBsYXll
ciBtYXAKICAgICAiRWxlbnNlZmFyIENvdXJ0eWFyZCIgYnkga3JvdG9wLgoKICogTXVzaWMgYW5kIHNv
dW5kIGVmZmVjdHM6CiAgICogTmV3IHZlcnNpb24gb2YgIk5vcnRoZXJuZXJzIiBieSBTdGVwaGVuIFJv
emFuYyAoVHJlaXplQ291bGV1cnMpLgogICAqIE5ldyBzb3VuZHMgZm9yIHdvbHZlcyBhbmQgd29sZiBy
aWRlcnMuCiAgICogTmV3IHRyYWNrICJTaWx2YW4gU2FuY3R1YXJ5IiBieSBNYXR0aWFzIFdlc3RsdW5k
CgogKiBVbml0czoKICAgKiBHaWFudCBSYXQgbW92ZWQgZnJvbSBEaUQgdG8gY29yZS4KCiAqIFVzZXIg
aW50ZXJmYWNlOgogICAqIEFkZGVkIGRpYWxvZyBmb3IgaW5zdGFsbGF0aW9uIG9mIGFkZC1vbiBkZXBl
bmRlbmNpZXMKICAgKiBTaG93IGpvaW4gYW5kIG9ic2VydmUgYnV0dG9ucyBwZXIgcm93IGluIHRoZSBs
b2JieS4KICAgKiBGaXhlZCBidWcgIzE1NzE2OiBMb2JieSBjcmFzaCB3aGVuIHJlZnJlc2hpbmcgd2l0
aCBmaWx0ZXJlZCBvdXQgZ2FtZXMuCiAgICogRml4ZWQgYnVnICMxNDczMDogVGFiIGNvbXBsZXRpb24g
bm90IHdvcmtpbmcgaW4gdGhlIG5ldyBsb2JieS4KICAgKiBEYW1hZ2UgaW4gc2lkZWJhciBub3cgYWxz
byB0YWtlIGFjY291bnQgb2YgdGltZSBvZiBkYXkgYW5kIGxlYWRlcnNoaXAuCiAgICogVG9vbHRpcHMg
b2Ygc2lkZWJhciBzaG93IG1vcmUgaW5mb3MuCiAgICogQ2xpY2tpbmcgb24gc29tZSBlbGVtZW50cyBv
ZiBzaWRlYmFyIG5vdyBvcGVuIHRoZSByZWxhdGVkIGhlbHAgcGFnZS4KICAgKiBEaXNwbGF5IHdlYXBv
biBzdGF0cyBpbiByZWNydWl0L3JlY2FsbCBkaWFsb2cgdGhlIHNhbWUgd2F5IGFzIGluIHNpZGViYXIu
CiAgICogUmVtZW1iZXIgcmVjYWxsIGxpc3Qgc29ydGluZyBvcmRlci4KICAgKiBOZXcgbW91c2VvdmVy
IGltYWdlIGluc3RlYWQgb2Ygc2ltcGx5IGhpZ2hsaWdodGluZyB0aGUgaGV4CiAgICogQWxsb3cgY2hl
Y2tpbmcgb3V0IHRlcnJhaW4gZGVmZW5zZSBmb3IgdW5pdHMgd2hlbiBpdCdzIG5vdCB5b3VyIHR1cm4u
CiAgICogVGFiIGNvbXBsZXRpb24gZm9yIDpjb21tYW5kcyBhbmQgdW5pdHMgc2VhcmNoIGZ1bmN0aW9u
CiAgICogSW1wcm92ZWQgb2JqZWN0aXZlcyBkaWFsb2dzIGFuZCBtYWRlIHRoZW0gZGlzcGxheSBtb3Jl
IGluZm9ybWF0aW9uIG9mIHR1cm4KICAgICBsaW1pdHMgYW5kIGdvbGQgY2FycnlvdmVyIGluIG1haW5s
aW5lIGNhbXBhaWducy4KCiAqIE1pc2NlbGxhbmVvdXMgYW5kIGJ1ZyBmaXhlczoKICAgKiBBbGwgdmls
bGFnZXMgZXhjZXB0IHdhdGVyIGFuZCBzd2FtcCB2aWxsYWdlcyBjYW4gbm93IGJlIHBsYWNlZCBvbiBh
bnkgYmFzZQogICAgIHRlcnJhaW4uCiAgICogSW50cm9kdWNlZCBhIG5ldyBhbGlnbm1lbnQgY2FsbGVk
ICJMaW1pbmFsIi4gVGhvc2UgdW5pdHMgZmlnaHQgYmVzdCBkdXJpbmcgdGhlIHR3aWxpZ2h0IHRpbWVz
IG9mIGRheS4KClZlcnNpb24gMS44LjA6CiAqIENhbXBhaWduczoKICAgKiBEZXNjZW50IGludG8gRGFy
a25lc3MKICAgICAqIEFkZGVkIG5ldyBHaWFudCBSYXQgYmFzZSBmcmFtZSBhbmQgYW5pbWF0aW9ucy4K
ICAgKiBMZWdlbmQgb2YgV2VzbWVyZToKICAgICAqIEZpeGVkIGJ1ZyAjMTU2MzE6IFNjZW5hcmlvIDM6
IGFycml2YWwgb2YgS2FsZW56IGZhaWxlZC4KICAgICAqIEZpeGVkIGJ1ZyAjMTU2Nzk6IFNjZW5hcmlv
IDE3OiBsZWFkZXIgb2Ygc2lkZSAyIGlzIG1pc3NpbmcuCiAgICAgKiBGaXhlZCBidWcgIzE1NjgwOiBT
Y2VuYXJpbyAxODogd3JvbmcgcmVjcnVpdG1lbnQgb3B0aW9ucy4KICAgKiBVbmRlciB0aGUgQnVybmlu
ZyBTdW5zCiAgICAgKiBTY2VuYXJpbyAyOiBzcGVlZCB1cCBBSSB0dXJuLgoKICogR3JhcGhpY3M6CiAg
ICogTmV3IENhdmUgU3BpZGVyIGFuZCBDdXR0bGUgRmlzaCBncmFwaGljcy4KCiAqIExhbmd1YWdlIGFu
ZCBpMThuOgogICAqIE5ldyB0cmFuc2xhdGlvbnM6IFNlcmJpYW4gSWpla2F2aWFuLCBTZXJiaWFuIElq
ZWthdmlhbiBMYXRpbi4KICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ3plY2gsIEZpbm5pc2gsIEZy
ZW5jaCwgR2VybWFuLCBIdW5nYXJpYW4sIEphcGFuZXNlLAogICAgIExhdHZpYW4sIExpdGh1YW5pYW4s
IFJ1c3NpYW4sIFNlcmJpYW4sIFNwYW5pc2gsIFNsb3Zhay4KCiAqIE11bHRpcGxheWVyOgogICAqIFVw
ZGF0ZWQgbWFwczogQ3luc2F1biBCYXR0bGVmaWVsZC4KCiAqIE11c2ljIGFuZCBzb3VuZCBlZmZlY3Rz
OgogICAqIEZpeGVkIGJ1ZyAjMTU2Njg6IFRoZSBsb2JieSB3aWxsIHBsYXkgYSByYW5kb20gbXVzaWMg
cGxheWxpc3QsIGNvbmZpZ3VyZWQKICAgICBieSBbbG9iYnlfbXVzaWNdLCBpbnN0ZWFkIG9mIGxvb3Bp
bmcgdGhlIG1haW4gbWVudSBzb25nLgogICAqIEZpeGVkIGJ1ZyAjMTU2Njk6IFRoZSB0aXRsZXNjcmVl
biB3aWxsIHBsYXkgYSByYW5kb20gbXVzaWMgcGxheWxpc3QsCiAgICAgY29uZmlndXJlZCBieSBbdGl0
bGVzY3JlZW5fbXVzaWNdLCBpbnN0ZWFkIG9mIGxvb3BpbmcgdGhlIG1haW4gbWVudSBzb25nLgogICAg
IFRoZSBmaXJzdCBzb25nIHBsYXllZCB3aWxsIHN0aWxsIGFsd2F5cyBiZSB0aGUgbWFpbl9tZW51IHRo
ZW1lLgoKICogTWlzY2VsbGFuZW91cyBhbmQgYnVnIGZpeGVzOgogICAqIEZpeGVkIGJ1ZyAjMTM4ODI6
IE1hcCB3aGljaCBpcyBpbnZhbGlkIGFib3J0cyBtYXAgc2VsZWN0aW9uLgogICAqIEZpeGVkIGJ1ZyAj
MTU1NDU6IFJlY2FsbCBsaXN0IGdvbmUgYWZ0ZXIgbG9hZGluZyBzYXZlZ2FtZSBjcmVhdGVkIGluCiAg
ICAgbGluZ2VyIG1vZGUuCiAgICogRml4ZWQgYnVnICMxNTU5ODogQ2FuJ3QgbW92ZSB1bml0cyBhZnRl
ciByZWxvYWRpbmcgZ2FtZS4KICAgKiBGaXhlZCBidWcgIzE1NjU2OiBPdXRPZlN5bmMgZXJyb3JzIGlu
IExlZ2VuZCBvZiBXZXNtZXJlIGR1ZSB0byBkaWZmZXJpbmcKICAgICBzdGFydGluZyBnb2xkLgoKVmVy
c2lvbiAxLjcuMTUtMS44cmMxOgogKiBBSToKICAgKiBTZXQgUkNBIEFJIHRvIGJlIHRoZSBkZWZhdWx0
IEFJIGZvciBzaW5nbGUtcGxheWVyIGNhbXBhaWducy4KICogTGFuZ3VhZ2UgYW5kIGkxOG46CiAgICog
VXBkYXRlZCB0cmFuc2xhdGlvbnM6IENoaW5lc2UgKFRyYWRpdGlvbmFsKSwgQ3plY2gsIEdlcm1hbiwg
SHVuZ2FyaWFuLAogICAgIEphcGFuZXNlLCBTZXJiaWFuLgogKiBNdWx0aXBsYXllcjoKICAgKiBGaXgg
YnVnICMxNTU0MTogZml4IE9PUyBvbiBbdW5pdF0gdGFnIGdlbmVyYXRpbmcgZGlmZmVyZW50CiAgICAg
dHJhaXRzIGJlY2F1c2Ugb2YgdXNhZ2Ugb2YgbG9jYWwgUk5HIGluc3RlYWQgb2YgTVAgUk5HLgogICAq
IEZpeCBidWcgIzE1NTYwIGZvciBEYXJrIEZvcmVjYXN0OiBmaXggT09TIGluIERhcmsgRm9yZWNhc3Qg
Y2F1c2VkIGJ5CiAgICAgdW5pdCBhZHZhbmNlbWVudCBub3QgcHJvcGVybHkgc3luY2VkIGFjcm9zcyB0
aGUgbmV0d29yay4KICogTXVzaWMgYW5kIHNvdW5kIGVmZmVjdHM6CiAgICogQWRkZWQgbmV3IG11c2lj
IHRyYWNrLCAiV2VpZ2h0IG9mIFJldmVuZ2UiIGJ5IERvdWcgS2F1Zm1hbgogKiBVc2VyIGludGVyZmFj
ZToKICAgKiBBdm9pZCB0aGUgc2Nyb2xsYmFyIG9uIHRoZSBlbnRpcmUgTVAgbG9iYnkgd2hlbiBwb3Nz
aWJsZS4KClZlcnNpb24gMS43LjE0LTEuOGJldGE3OgogKiBMYW5ndWFnZSBhbmQgaTE4bjoKICAgKiBV
cGRhdGVkIHRyYW5zbGF0aW9uczogQ2F0YWxhbiwgQ2hpbmVzZSAoVHJhZGl0aW9uYWwpLCBDemVjaCwg
RXN0b25pYW4sCiAgICAgRmlubmlzaCwgR2VybWFuLCBHcmVlaywgSXRhbGlhbiwgSmFwYW5lc2UsIExp
dGh1YW5pYW4sIFBvbGlzaCwgU2VyYmlhbi4KCiAqIE11bHRpcGxheWVyOgogICAqIEZpeGVkIEEgTmV3
IExhbmQgbm90IHdvcmtpbmcgd2hlbiB0aGVyZSBhcmUgZW1wdHkgc2lkZXMuCgogKiBVc2VyIGludGVy
ZmFjZToKICAgKiBUaGUgZW1wdHkgc3BvdHMgaW4gdGhlIGdhbWUgbGlzdCBpbiB0aGUgbG9iYnkgYXJl
IGdvbmUuCgogKiBNaXNjZWxsYW5lb3VzIGFuZCBidWdmaXhlczoKICAgKiBGaXggV01MLWdlbmVyYXRl
ZCB1bml0cyBhbmQgTVAgbGVhZGVycyByZWNlaXZpbmcgb25seSB0aGUgTmV1dHJhbCAKICAgICBhbGln
bm1lbnQuCgpWZXJzaW9uIDEuNy4xMy0xLjhiZXRhNjoKICogQ2FtcGFpZ25zOgogICAqIEZpeGVkIGEg
YnVnIGluIHNldmVyYWwgc2NlbmFyaW9zIGNhdXNpbmcgc29tZSBlbmVteSB1bml0cyB0byBkaXNhcHBl
YXIgd2hlbgogICAgIGxvYWRpbmcgYSBzYXZlLgoKICogR3JhcGhpY3M6CiAgICogQWRkIGFuZCB3aXJl
IHR3byBuZXcgRHJha2UgYXR0YWNrIGljb25zLgoKICogTGFuZ3VhZ2UgYW5kIGkxOG46CiAgICogVXBk
YXRlZCB0cmFuc2xhdGlvbnM6IEN6ZWNoLCBGaW5uaXNoLCBGcmVuY2gsIEdlcm1hbiwgSHVuZ2FyaWFu
LCBJdGFsaWFuLAogICAgIExpdGh1YW5pYW4sIFBvbGlzaCwgUG9ydHVndWVzZSAoQnJhemlsKSwgUnVz
c2lhbiwgU2VyYmlhbi4KCiAqIE11bHRpcGxheWVyOgogICAqIEFuIGVhcmx5IHRlc3QgdmVyc2lvbiBv
ZiB0aGUgbXVsdGlwbGF5ZXIgcG9ydCBvZiAiTGVnZW5kIG9mIFdlc21lcmUiIAogICAgIGlzIGF2YWls
YWJsZSB3aGVuIHN0YXJ0aW5nIHdlc25vdGggd2l0aCB0aGUgY29tbWFuZGxpbmUgYXJndW1lbnQgIi0t
ZGVidWciLgoKICogVXNlciBpbnRlcmZhY2U6CiAgICogRm9sZCBzZXJ2ZXJhbCBwbGF5ZXIgZ3JvdXBz
IGJ5IGRlZmF1bHQgaW4gdGhlIGxvYmJ5LgoKVmVyc2lvbiAxLjcuMTItMS44YmV0YTU6CiAqIENhbXBh
aWduczoKICAgKiBGaXhlZCBhIGJ1ZyBpbiBzZXZlcmFsIHNjZW5hcmlvcyBjYXVzaW5nIHNvbWUgZW5l
bXkgdW5pdHMgdG8gZGlzYXBwZWFyIHdoZW4KICAgICBsb2FkaW5nIGEgc2F2ZS4KCiAqIEdyYXBoaWNz
OgogICAqIEltcHJvdmVkIHRoZSBiYWNrZ3JvdW5kIGZvciB0aGUgbmV3IGRpYWxvZ3MuCiAgICogSW1w
cm92ZWQgdGhlIHNwZWVkIG9mIHRoZSBNUCBsb2JieS4KCiAqIExhbmd1YWdlIGFuZCBpMThuOgogICAq
IFVwZGF0ZWQgdHJhbnNsYXRpb25zOiBDemVjaCwgRmlubmlzaCwgRnJlbmNoLCBHZXJtYW4sIEhlYnJl
dywgSXRhbGlhbiwKICAgICBMYXRpbiwgUnVzc2lhbiwgU2hhdmlhbiwgU2xvdmFrLCBTcGFuaXNoLgoK
ICogTXVsdGlwbGF5ZXI6CiAgICogRHVtbXkgc2lkZXMgbm8gbG9uZ2VyIGdldCBhIHR1cm4sIGUuZy4g
dGhlIHN0YXR1cyBpbiBDYXZlcyBvZiB0aGUgQmFzaWxpc2sKCiAqIE11c2ljIGFuZCBzb3VuZCBlZmZl
Y3RzOgogICAqIE5ldyB2ZXJzaW9uIG9mIHNhZC5vZ2cgKFNhZCBtdXNpYykgYnkgVHlsZXIgSm9obnNv
bi4KCiAqIE1pc2NlbGxhbmVvdXM6CiAgICogRml4IGVycm9ycyBpbiB0dXRvcmlhbCB3aGVuIHRoZSBw
bGF5ZXIgdW5leHBlY3RlZGx5IGtpbGxzIGNlcnRhaW4KICAgICBlbmVteSB1bml0cywgaW4gc2NlbmFy
aW8gMi4KICAgKiBPcmNzIGNhbiBubyBsb25nZXIgcGxheSB0d2ljZSBldmVyeSB0dXJuIGluIHR1dG9y
aWFsIHNjZW5hcmlvIDIuCgpWZXJzaW9uIDEuNy4xMS0xLjhiZXRhNDoKICogTGFuZ3VhZ2UgYW5kIHRy
YW5zbGF0aW9uczoKICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ2hpbmVzZSAoU2ltcGxpZmllZCks
IEVzdG9uaWFuLCBGcmVuY2gsIExhdHZpYW4sCiAgICAgTGl0aHVhbmlhbiwgUG9ydHVndWVzZSAoQnJh
emlsKSwgUnVzc2lhbiwgU2VyYmlhbiwgU2xvdmFrLCBTcGFuaXNoLgoKICogVXNlciBpbnRlcmZhY2U6
CiAgICogU2Nyb2xsYmFyIGJ1dHRvbnMgbm93IGtlZXAgc2Nyb2xsaW5nIHdoZW4ga2VwdCBwcmVzc2Vk
IGRvd24uCgogKiBHcmFwaGljczoKICAgKiBNYWlubGluZSBub3cgY29uc2lzdGVudGx5IHVzZXMgdGhl
IGxveWFsdHkgb3ZlcmxheSBmcm9tIERlYWQgV2F0ZXIuCiAgICogUG9ydHJhaXRzIGZvciB0aGUgRm91
ciBPY2FsZXMgaW4gRE0uCgpWZXJzaW9uIDEuNy4xMC0xLjhiZXRhMzoKICogQ2FtcGFpZ25zOgogICAq
IFVuZGVyIHRoZSBCdXJuaW5nIFN1bnM6CiAgICAgKiBGaXggbG9jYXRpb25zIG9mIHNvbWUgaXRlbXMg
aW4gIkluIHRoZSBkb21haW4gb2YgdGhlIGR3YXJ2ZXMiLgogKiBHcmFwaGljczoKICAgKiBBZGRlZCBh
dHRhY2sgaWNvbiBmb3IgRHJha2UgUmFtIGF0dGFjaywgYW5kIGZvciBVdEJTJ3MgR2lhbnQgQW50LgoK
ICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9uczoKICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogRnJl
bmNoLCBHZXJtYW4sIEh1bmdhcmlhbiwgSXRhbGlhbiwgTGF0dmlhbiwKICAgICBMaXRodWFuaWFuLCBQ
b2xpc2gsIFBvcnR1Z3Vlc2UgKEJyYXppbCksIFJ1c3NpYW4sIFNlcmJpYW4sIFNsb3Zhay4KCiAqIFVz
ZXIgaW50ZXJmYWNlOgogICAqIEN0cmwtZiBmb3IgZnVsbHNjcmVlbiB3b3JrcyBhZ2FpbiBpbiB0aGUg
TVAgbG9iYnkuCiAgICogRG9uJ3QgcmVzZXJ2ZSBzcGFjZSBmb3Igc2Nyb2xsYmFycyBpbiBtZXNzYWdl
IGRpYWxvZ3MuCiAgICogUmVzaXppbmcgdGhlIE1QIGxvYmJ5IG5vIGxvbmdlciBjcmFzaGVzIHJhbmRv
bWx5CiAKICogVW5pdHMKICAgKiBDaGFuZ2UgRHJha2UgRmxhcmUgYW5kIEZsYW1laGVhcnQgd2VhcG9u
IG5hbWVzIHRvIG1hdGNoIG5ldyB3ZWFwb25zLgogICAqIERlY3JlYXNlZCB0aGUgc3BlZWQgb2YgdGhl
IGR3YXJ2aXNoIHNjb3V0IGxpbmUgYnkgb25lLgogICAqIFJlZHVjZWQgdGhlIG1vdmVjb3N0cyBvdmVy
IGZyb3plbiB0ZXJyYWluIGZvciB0aGUgZHdhcnZpc2ggc2NvdXQgbGluZS4KClZlcnNpb24gMS43Ljkt
MS44YmV0YTI6CiAqIENhbXBhaWduczoKICAgKiBUaGUgUmlzZSBvZiBXZXNub3RoOgogICAgICogUmVt
b3ZlZCB0aGUgVW5kZWFkIHRyYWl0IGZyb20gc2V2ZXJhbCBjdXN0b20gYmF0IHVuaXRzLgoKICogR3Jh
cGhpY3M6CiAgICogTmV3IGFuaW1hdGlvbnMgZm9yIHRoZSBDaG9jb2JvbmUuCiAgICogQ2hhbmdlIHdo
aWNoIE9yYyBHcnVudCBwb3J0cmFpdCBhcHBlYXJzIGlzIHRoZSBkZWZhdWx0LgogICAqIE5ldyBwb3J0
cmFpdCBmb3IgT3JjIFdhcnJpb3IKICAgKiBOZXcgcG9ydHJhaXQgZm9yIEhhbWVsICh0SG9UKQoKICog
TGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9uczoKICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ3plY2gs
IEZyZW5jaCwgR2VybWFuLCBJdGFsaWFuLCBMYXRpbiwgTGl0aHVhbmlhbiwKICAgICBQb2xpc2gsIFBv
cnR1Z3Vlc2UgKEJyYXppbCksIFJ1c3NpYW4sIFNlcmJpYW4sIFNsb3Zhay4KCiAqIE11bHRpcGxheWVy
OgogICAqIFVwZGF0ZWQgbWFwczogQ2F2ZXMgb2YgdGhlIEJhc2lsaXNrLCBIb3Juc2hhcmsgSXNsYW5k
LCBIb3dsaW5nIEdob3N0CiAgICAgQmFkbGFuZHMsIFNhYmxlc3RvbmUgRGVsdGEuCgogKiBVc2VyIGlu
dGVyZmFjZToKICAgKiBJbmNyZWFzaW5nIHRoZSBzaXplIG9mIHRoZSBNUCBsb2JieSB3b3JrcyBwcm9w
ZXJseS4KICAgKiBGaXggd2F5cG9pbnRzIGlnbm9yZWQgZm9yIG11bHRpLXR1cm5zIG1vdmVzLgogICAq
IFRvZ2dsZSB3YXlwb2ludCBub3cgd29ya3MgZm9yIGVhY2ggb25lLCBub3QganVzdCB0aGUgbGFzdC4K
ICAgKiBSZWNsaWNrIG9uIHRoZSBzZWxlY3RlZCB1bml0IG5vdyBjbGVhciBhbGwgd2F5cG9pbnRzLgoK
VmVyc2lvbiAxLjcuOC1iZXRhMToKICogQ2FtcGFpZ25zOgogICAqIFVuZGVyIHRoZSBCdXJuaW5nIFN1
bnM6CiAgICAgKiBEbyBub3QgYWxsb3cgcGxheWVyIHVuaXRzIHRvIGdldCBwYXNzIHRoZSBEd2FyZiBH
aG9zdAogICAgICAgd2l0aG91dCBjb21wbGV0aW5nIHRoZSBzaWRlIHF1ZXN0IGluIFR1bm5lbHMgb2Yg
dGhlIFRyb2xscy4KCiAqIEdyYXBoaWNzOgogICAqIE5ldyBiYXNlIGZyYW1lcyBmb3IgRHJha2UgRmxh
cmUsIEZsYW1laGVhcnQuCiAgICogTmV3IHBvcnRyYWl0cyBmb3IgR3JhbmQgS25pZ2h0IChhbHQpLCBM
YW5jZXIsIE9yYyBHcnVudCAodHdvIGFsdHMpLgoKICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9uczoK
ICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ3plY2gsIER1dGNoLCBGaW5uaXNoLCBHZXJtYW4sIEh1
bmdhcmlhbiwgSXRhbGlhbiwKICAgICBMYXRpbiwgTGl0aHVhbmlhbiwgUG9ydHVndWVzZSAoQnJhemls
KSwgUnVzc2lhbi4KCiogVXNlciBpbnRlcmZhY2U6CiAgICogRml4ZWQgc3RvcnlzY3JlZW4gYnV0dG9u
cyBvY2Nhc2lvbmFsbHkgZGlzYXBwZWFyaW5nLgogICAqIEltcHJvdmVkIGRpc3BsYXkgb3JkZXIgb2Yg
dW5pdCBoZWFsaW5nLiAocGF0Y2ggIzEzNDMpCiAgICogU3dpdGNoZWQgdG8gdGhlIG5ldyBNUCBsb2Ji
eS4KCipNaXNjZWxsYW5lb3VzCiAgICogQWRkIHJlY3J1aXRtZW50IGFuaW1zIGZvciB0aGUgU2t5IGFu
ZCBIdXJyaWNhbmUgRHJha2VzLgoKVmVyc2lvbiAxLjcuNzoKICogQUk6CiAgICogRml4IGEgc2VyaW91
cyBlbm91Z2ggYnVnIGluIGFpIHRhcmdldGluZy4gVGhlIGJ1ZyBjYXVzZWQgdGhlIEFJLCBpbgogICAg
IGNlcnRhaW4gc2l0dWF0aW9ucywgdG8gbWFrZSB3ZWlyZCBzaHVmZmxlLWRvaW5nLW5vdGhpbmcgbW92
ZXMgYW5kIG5vdCBzZWVrCiAgICAgZW5lbWllcyBvciB0aGVpciB2aWxsYWdlcy4KCiAqIExhbmd1YWdl
IGFuZCB0cmFuc2xhdGlvbnM6CiAgICogTmV3IHRyYW5zbGF0aW9uczogU2hhdmlhbi4KICAgKiBVcGRh
dGVkIHRyYW5zbGF0aW9uczogQ3plY2gsIER1dGNoLCBFc3RvbmlhbiwgRmlubmlzaCwgR2VybWFuLCBI
dW5nYXJpYW4sCiAgICAgTGl0aHVhbmlhbiwgUnVzc2lhbiwgU2VyYmlhbiwgU2xvdmFrLCBTcGFuaXNo
LgoJIAogKiBNdWx0aXBsYXllcjoKICAgKiBVcGRhdGVkIG1hcDogVGhlIE1hbnppdmFuIFRyYXBzCgkg
CiAqIFVuaXRzOgogICAqIFJlbW92ZWQgRWxkZXIgV29zZSBhbmQgU2hvY2sgVHJvb3BlciBmcm9tIHJh
bmRvbV9sZWFkZXIgb2YgdGhlIGRlZmF1bHQgZXJhLgogICAqIFJlbW92ZWQgQW5jaWVudCBXb3NlIGFu
ZCBJcm9uIE1hdWxlciBmcm9tIHJhbmRvbV9sZWFkZXIgb2YgdGhlIEFvSCBlcmEuCiAgICogTmV3IGFu
aW1hdGlvbiBXTUwgYW5kIG1hY3JvcyBmb3IgdGhlIERyYWtlcy4KICAgKiBJbmNyZWFzZWQgdGhlIFhQ
IHJlcXVpcmVkIHRvIGFkdmFuY2UgZm9yIHRoZSBPcmNpc2ggQXNzYXNzaW4gZnJvbSAzMCB0byAzNC4K
ICAgKiBDaGFuZ2VkIHRoZSBjb2xkIHJlc2lzdGFuY2Ugb2YgdGhlIG5hZ2EgbGluZSBmcm9tIC0yMCUg
dG8gMCUuCiAgIAogKiBVc2VyIGludGVyZmFjZToKICAgKiBBZGQtb25zIGRlc2NyaXB0aW9ucyBhcmUg
ZGlzcGxheWVkIGFjY29yZGluZyB0byBmaWx0ZXJpbmcgaW4KICAgICB0aGUgZG93bmxvYWQgbGlzdC4K
ICAgKiBJbiByZWNhbGwgZGlhbG9nLCB1c2UgZGlmZmVyZW50IGNvbG9yIGFuZCBicmlnaHRuZXNzIGZv
ciBYUCBhbmQgbGV2ZWwuCgogKiBNaXNjZWxsYW5lb3VzIGFuZCBidWdmaXhlczoKICAgKiBGaXhlZCBi
cm9rZW4gYW1idXNoL2ludmlzaWJpbGl0eSBhdCBmaXJzdCB0dXJuLgoKVmVyc2lvbiAxLjcuNjoKICog
QUk6CiAgICogSW4gc29tZSBjYW1wYWlnbnMsIHN1Y2ggYXMgaW4gTGVnZW5kIG9mIFdlc21lcmUsIGFs
bGllZCBBSSBzaWRlcyBjYW4gbm93CiAgICAgcmVjYWxsIHRoZWlyIHZldGVyYW5zIGZyb20gZWFybGll
ciBzY2VuYXJpb3MuCiAgICogQUkgd2lsbCBub3cgcmVjcnVpdCBzb21ld2hhdCBtb3JlIGludGVsbGln
ZW50bHkuCiAgICogSW4gc29tZSBjYW1wYWlnbnMsIHN1Y2ggYXMgaW4gTGVnZW5kIG9mIFdlc21lcmUs
IGFsbGllZCBBSSBzaWRlcyBjYW4gbm93CiAgICAgYmUgZ2l2ZW4gaGludHMgYWJvdXQgd2hlcmUgdGhl
aXIgbGVhZGVyIHNob3VsZCByZWxvY2F0ZS4KCiAqIEdyYXBoaWNzOgogICAqIE5ldyBwb3J0cmFpdHMg
Zm9yIE1lcm1hbiBTcGVhcm1hbiwgQmF0LCBNZXJtYW4gTmV0Y2FzdGVyLCBOaWdodGdhdW50LAogICAg
IFNwZWN0cmUsIFNoYWRvdwogICAqIFdoZW4gYSB1bml0IHJlYWNoIGEgbmV3IGxldmVsLCBhIGZsb2F0
aW5nIGxhYmVsIGluZGljYXRlcyBpdC4KCiAqIExhbmd1YWdlIGFuZCB0cmFuc2xhdGlvbnM6CiAgICog
VXBkYXRlZCB0cmFuc2xhdGlvbnM6IEN6ZWNoLCBEdXRjaCwgRXN0b25pYW4sIEZpbm5pc2gsIEZyZW5j
aCwgR2VybWFuLAogICAgIEl0YWxpYW4sIExpdGh1YW5pYW4sIFJ1c3NpYW4sIFNlcmJpYW4sIFNwYW5p
c2guCiAgICogTmV3IHRyYW5zbGF0aW9uczogVmlldG5hbWVzZS4KCiAqIE11bHRpcGxheWVyOgogICAq
IE5ldyBtYXA6IDRwIFJ1aW5zIG9mIFRlcnJhLUR3ZWx2ZS4KCiAqIFVuaXRzOgogICAqIE1hZGUgdW5p
dHMgd2l0aCB0aGUgJ2hlYWx0aHknIHRyYWl0IGFsd2F5cyByZXN0IGhlYWwgYnV0IHRha2Ugbm9ybWFs
CiAgICAgZGFtYWdlIGZyb20gcG9pc29uLgogICAqIENoYW5nZWQgdGhlIERyYWtlIEdsaWRlcidzIG1v
dmV0eXBlIHRvIGdpdmUgNDAlIGRlZmVuc2UgYWxtb3N0IGV2ZXJ5d2hlcmUuCiAgICogR2F2ZSB0aGUg
RmlyZSBEcmFnb24gMTAwJSBmaXJlIHJlc2lzdGFuY2UuCiAgICogVXBkYXRlZCB0aGUgZGVzY3JpcHRp
b25zIGZvciB0aGUgRHJha2UgRmlnaHRlciwgR2xpZGVyIGFuZCBCdXJuZXIgbGluZXMuCgogKiBVc2Vy
IGludGVyZmFjZToKICAgKiBBdXRvbWF0aWNhbGx5IHRyeSB0byByZXNvbHZlIGJsb2NrZWQgbXVsdGkt
dHVybiBtb3Zlcy4KICAgKiBCZXR0ZXIgdmlzdWFsbHkgZGlmZmVyZW50aWF0ZSBuYW1lLCB0eXBlIGFu
ZCByYWNlIGluIHNpZGViYXIuCiAgICogQWRkIGNvbG9yaXplZCB0ZXJyYWluIGRlZmVuc2UgaW5mbyBp
biBzaWRlYmFyLgogICAqIEluIGF0dGFjayBkaWFsb2csIHNwbGl0IGRhbWFnZXMgYW5kIGNoYW5jZSB0
byBoaXQgYW5kIGNvbG9yIHRoZSBsYXRlci4KICAgKiBEaXNhYmxlIHRoZSBSZW1vdmUgYW5kIFVwZGF0
ZSBhZGQtb25zIGJ1dHRvbnMgd2hlbiB0aGVyZSBhcmUgbm8gYWRkLW9ucwogICAgIGluc3RhbGxlZC4K
ICAgKiBBZGQgYSBEZXNjcmlwdGlvbiBidXR0b24gdG8gdGhlIGFkZC1vbnMgZG93bmxvYWQgZGlhbG9n
CiAgICogRm9yIG1vdmUrYXR0YWNrIG1vdXNlIGNsaWNrLCBub3cgc2hvdyB0aGUgYXR0YWNrIGRpYWxv
ZyBiZWZvcmUgdGhlIG1vdmUuCiAgICogSW4gc2lkZWJhciwgYWRkIGN1cnJlbnQgYm9udXMvbWFsdXMg
aW5mbyBmcm9tIGFsaWduZW1lbnQuCgpWZXJzaW9uIDEuNy41OgogKiBHcmFwaGljczoKICAgKiBOZXcg
YmFzZSBmcmFtZSBhbmQgYW5pbWF0aW9ucyBmb3IgdGhlIERyYWtlIEJsYWRlbWFzdGVyLgoKICogTGFu
Z3VhZ2UgYW5kIHRyYW5zbGF0aW9uczoKICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ2hpbmVzZSAo
VHJhZGl0aW9uYWwpLCBMaXRodWFuaWFuLCBTZXJiaWFuLgoKICogVW5pdHM6CiAgICogRml4ZWQgcHJv
YmxlbXMgd2l0aCB0aGUgRHJha2VzIGludHJvZHVjZWQgaW4gMS43LjQgKHdyb25nIHJlc2lzdGFuY2Vz
IGFuZAogICAgIGEgcG9zc2libGUgY3Jhc2ggd2hlbiBhZHZhbmNpbmcgdG8gdGhlIEluZmVybm8gRHJh
a2UpLgoKVmVyc2lvbiAxLjcuNDoKICogQUk6CiAgICogRml4ZWQgY3Jhc2hlcyBhbmQgaW5maW5pdGUg
bG9vcHMgb24gQUkgdHVybi4KCiAqIENhbXBhaWducwogICAqIExlZ2VuZCBvZiBXZXNtZXJlCiAgICAg
KiBTY2VuYXJpbyAzIHdhcyBjb21wbGV0ZWx5IHJlZGVzaWduZWQuCiAgICAgKiBGaXhlZCB3cm9uZyBv
ciB1bmNsZWFyIHNjZW5hcmlvIG9iamVjdGl2ZXMuCiAgICAgKiBTY2VuYXJpbyAxNjogUmVkdWNlZCB0
aGUgbnVtYmVyIG9mIHdvbGYgcmlkZXJzLgoKICogR3JhcGhpY3M6CiAgICogTmV3IHBvcnRyYWl0cyBm
b3IgQW5jaWVudCBXb3NlLCBSdWZmaWFuLCBNYXN0ZXItYXQtYXJtcywgTmFnYQogICAgIFdhcnJpb3Iv
TXlybWlkb24sIEdyYW5kIEtuaWdodCwgTWVybWFuIEh1bnRlci4KICAgKiBVcGRhdGVzIHRvIFBlYXNh
bnQsIFNwZWFybWFuIGFuZCBTd29yZHNtYW4gcG9ydHJhaXRzLgogICAqIE5ldyBtZWxlZSBhbmltYXRp
b24gZm9yIFRodW5kZXJndWFyZCwgRHJhZ29uZ3VhcmQuCiAgICogTmV3IGJhc2UgZnJhbWUgYW5kIGFu
aW1hdGlvbnMgZm9yIEluZmVybm8gRHJha2UsIEZpcmUgRHJha2UuCgogKiBNdXNpYyBhbmQgc291bmQK
ICAgKiBBZGRlZCAiSm91cm5leSdzIEVuZCIgZnJvbSBNYXR0aWFzIFdlc3RsdW5kLgogICAqIEFkZGVk
ICJPdmVyIHRoZSBOb3J0aGVybiBNb3VudGFpbnMiIGZyb20gTWF0dGlhcyBXZXN0bHVuZC4KICAgKiBB
ZGRlZCBIb3JuIHNpZ25hbCBzb3VuZCBlZmZlY3RzLgoKICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9u
czoKICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ2hpbmVzZSAoVHJhZGl0aW9uYWwpLCBHZXJtYW4s
IExpdGh1YW5pYW4sIFJ1c3NpYW4sCiAgICAgU2VyYmlhbi4KCiAqIFVuaXRzCiAgICogTmV3IHdlYXBv
biBuYW1lcyBmb3IgYSBudW1iZXIgb2YgZHJha2UgYXR0YWNrcyB0byBhY2NvdW50IGZvciBjaGFuZ2Vz
IHRvCiAgICAgdGhlIHNwcml0ZXMuCgogKiBVc2VyIGludGVyZmFjZToKICAgKiBSZW1vdmVkIHRoZSBo
b3RrZXkgdG8gZW5hYmxlL2Rpc2FibGUgbW91c2Ugc2Nyb2xsaW5nCgpWZXJzaW9uIDEuNy4zOgogKiBD
YW1wYWlnbnM6CiAgICogVHdvIEJyb3RoZXJzCiAgICAgKiBSZXBsYWNlZCBjYW1wYWlnbiBzcGVjaWZp
YyBwb3J0cmFpdHMgd2l0aCBtYWlubGluZSBwb3J0cmFpdHMuCiAgICogVW5kZXIgdGhlIEJ1cm5pbmcg
U3VucwogICAgICogRml4ZWQgYnVnICMxMzk3ODogVXRCUzogInN0dW4iIGFiaWxpdHkgZG9lc24ndCBt
b2RpZnkgZW5lbXkgWm9DLgogICAqIExlZ2VuZCBvZiBXZXNtZXJlCiAgICAgKiBTdG9yeSBvbmx5IHNj
ZW5hcmlvcyBub3cgZGlzcGxheSB0aGUgc3BlYWtlcidzIG5hbWUgaW4gdGhlIHRpdGxlLgogICAgICog
QW1iaWVudCBzb3VuZCBlZmZlY3RzLgogICAgICogUmVkb25lIHRoZSBjYW1wYWlnbidzIG9iamVjdGl2
ZXMuCiAgICAgKiBBZGRlZCB0aGUgIkR3YXJ2aXNoIFNjb3V0IiB0byB0aGUgcGxheWVyJ3MgcmVjcnVp
dCBsaXN0LgogICAgICogU2NlbmFyaW8gMTkgbm93IHJlcXVpcmVzIHRoZSBwbGF5ZXIgdG8gZGVzdHJv
eSBTYXVyZ3JhdGguCiAgICAgKiBTY2VuYXJpbyAxNCByZWRlc2lnbmVkLgogICAgICogU2NlbmFyaW8g
MjMgaW1wbGVtZW50ZWQgU2FudGkncyBwbGFuIHRvIGxldCBoYWxmIHRoZSBhcm15IGRlZmVjdC4KICAg
ICAqIE1hcCB1cGRhdGVzIChtb3N0bHkgbmV3IGFsaWFzIHRlcnJhaW5zIGFkZGVkKS4KICAgICAqIFJl
cGxhY2VkIHRoZSBjYW1wYWlnbiBpbWFnZSB3aXRoIGEgdHJhbnNwYXJlbnQgb25lIChUaGFua3MgdG8g
S2l0dHkpLgoKVmVyc2lvbiAxLjcuMjoKICAqIENhbXBhaWducwogICAgKiBTb24gb2YgdGhlIEJsYWNr
IEV5ZQogICAgICAqIENoYW5nZWQgT3JjaXNoIFNoYW1hbiBtb3ZldHlwZSBmcm9tIHNtYWxsZm9vdCB0
byBvcmNpc2hmb290LgoKICAqIEdyYXBoaWNzCiAgICAqIE5ldyBwb3J0cmFpdCBmb3IgbWFsZSBhbmQg
ZmVtYWxlIEZvb3RwYWQsIG1hbGUgYW5kIGZlbWFsZSBPdXRsYXcsCiAgICAgIEhvcnNlbWFuLCBEcmFr
ZSBDbGFzaGVyLCBHb2JsaW4gV29sZiBSaWRlciwgR29ibGluIFBpbGxhZ2VyLCBEd2FyZiAKICAgICAg
RXhwbG9yZXIsIER3YXJmIFNjb3V0LCBDYXZhbHJ5bWFuLCBTa2VsZXRvbi4KICAgICogTmV3IHVuaXQg
Z3JhcGhpY3MgYW5kIGFuaW1hdGlvbnMgZm9yIHRoZSBEd2FydmlzaCBTY291dCwgUGF0aGZpbmRlciwK
ICAgICAgYW5kIEV4cGxvcmVyOyBEcmFrZSBDbGFzaGVyLCBTbGFzaGVyLCBXYXJkZW4sIEdsYWRpYXRv
ciwgRW5mb3JjZXIuCgogICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9ucwogICAgKiBVcGRhdGVkIHRy
YW5zbGF0aW9uczogQ3plY2gsIER1dGNoLCBFc3RvbmlhbiwgRmlubmlzaCwgRnJlbmNoLCBHZXJtYW4s
CiAgICAgIEl0YWxpYW4sIExpdGh1YW5pYW4sIFBvbGlzaCwgUnVzc2lhbiwgU2VyYmlhbiwgU2xvdmFr
LgogICAgICAKICAqIFRlcnJhaW5zCiAgICAqIE5ldyB0ZXJyYWluOiBkcmFrZSB2aWxsYWdlLgoKICAq
IFVzZXIgaW50ZXJmYWNlCiAgICAqIENvbXBsZXRlZCBjYW1wYWlnbnMgYXJlIGRlY29yYXRlZCB3aXRo
IGEgbGF1cmVsIGljb24uCiAgICAqIEZpeGVkIGJ1ZyAjMTM4MzE6IEJ1ZyB3aXRoIHRlYW0gbGFiZWxz
LgogICAgKiBGaXhlZCBidWcgIzEzNjI2OiBCdWcgYWJvdXQgbm8gb3B0aW9uIHRvIHR1cm4gb24vb2Zm
IHNhdmUgZGVsZXRlCiAgICAgIGNvbmZpbWF0aW9uLgoKVmVyc2lvbiAxLjcuMToKICAqIENhbXBhaWdu
cwogICAgKiBEZWxmYWRvcidzIE1lbW9pcnM6IG5ldyBwb3J0cmFpdCBmb3IgTGlvbmVsLgogICAgKiBU
aGUgSGFtbWVyIG9mIFRodXJzYWdhbjogbmV3IHBvcnRyYWl0cyBmb3IgQW5nYXJ0aGluZywgUmF0aGVs
bi4KCiAgKiBHcmFwaGljcwogICAgKiBOZXcgcG9ydHJhaXQgZm9yIEtuaWdodCwgR2hvc3QuCgogICog
TGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9ucwogICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ2hpbmVz
ZSAoVHJhZGl0aW9uYWwpLCBDemVjaCwgRmlubmlzaCwgRnJlbmNoLAogICAgICBHZXJtYW4sIEdyZWVr
LCBIdW5nYXJpYW4sIEljZWxhbmRpYywgTGl0aHVhbmlhbiwgUG9saXNoLCBSdXNzaWFuLAogICAgICBT
ZXJiaWFuLCBUdXJraXNoLgoKICAqIFVuaXRzOgogICAgKiBNb3N0IER3YXJ2aXNoIHNpZGVzIGNhbiBu
b3cgcmVjcnVpdCBhIFNjb3V0IHVuaXQgd2l0aCBiZXR0ZXIgbW9iaWxpdHkKICAgICAgdGhhbiB0aGUg
bGluZSBmaWdodGVyIGJ1dCBsaWdodGVyIGFybW9yIGFuZCBsZXNzIGVmZmVjdGl2ZSB3ZWFwb25zLgoK
ICAqIFVzZXIgaW50ZXJmYWNlCiAgICAqIEltcHJvdmVkIHRoZSBsYXlvdXQgdG8gdGFrZSBsZXNzIHNw
YWNlIGluIGNlcnRhaW4gY2FzZXMuCiAgICAqIEluY3JlYXNlIHRoZSBsaW5laGVpZ2h0IGluIHRoZSBu
ZXcgZGlhbG9ncy4KICAgICogVGhlIGNhbXBhaWduIGRpYWxvZyBpcyByZWRlc2lnbmVkLgogICAgKiBB
IGNsaWNrIG9uIGEgc2xpZGVyIG5vdyBwcm9wZXJseSBzZXRzIHRoZSBwb3NpdGlvbi4KICAgICogQWRk
ZWQgYSBob3RrZXkgdG8gdG9nZ2xlIHRlYW0gZWxsaXBzZXMgKGN0cmwrZSBieSBkZWZhdWx0KS4KCiAg
KiBNaXNjZWxsYW5lb3VzIGFuZCBidWdmaXhlcwogICAgKiBGaXhlZCBhIGNyYXNoIGluIHNvbWUgc3Rv
cnlzY3JlZW5zLgoKVmVyc2lvbiAxLjcuMDoKICAqIENhbXBhaWducwogICAgKiBEZWxmYWRvcidzIE1l
bW9pcnM6IG5ldyBjYW1wYWlnbiBhZGRlZCB0byBtYWlubGluZSAoTm92aWNlIGxldmVsLAogICAgICAy
NCBzY2VuYXJpb3MpLgogICAgKiBFYXN0ZXJuIEludmFzaW9uCiAgICAgICogRml4ZWQgdGhlIGxpY2hl
cyBub3QgYmVpbmcgcmV2ZWFsZWQgcHJvcGVybHkgaW4gJ1dlbGR5biBCZXNpZWdlZCcuCiAgICAqIEhl
aXIgdG8gdGhlIFRocm9uZQogICAgICAqIE1hZGUgc25vdyBmYWxsIGdyYWR1YWxseSBldmVyeSB0dXJu
IGluICdOb3J0aGVybiBXaW50ZXInLgogICAgICAqIEVuZm9yY2UgYSA3LWhleCBzdGFydGluZyBjYXN0
bGUgdG8gcHJldmVudCB1bml0cyBmcm9tIGFwcGVhcmluZyBpbnNpZGUKICAgICAgICBhIHdhbGwgaW4g
J1RoZSBTY2VwdGVyIG9mIEZpcmUnIChidWcgIzEzMzc3KS4KICAgICAgKiBNYWRlIHRoZSBudW1iZXIg
b2YgZW5lbWllcyB0byBkZWZlYXQgZGVwZW5kIG9uIHRoZSBkaWZmaWN1bHR5IGluCiAgICAgICAgJ1Rl
c3Qgb2YgdGhlIENsYW4nLgogICAgKiBUaGUgUmlzZSBvZiBXZXNub3RoCiAgICAgICogSW4gVFJPVywg
dGhlIExhZHkgSmVzc2ljYSBpcyBub3cgdGhlIExhZHkgSmVzc2VuZS4gVGhpcyB3YXMgdGhlIGxhc3QK
ICAgICAgICBtYWpvciBjaGFyYWN0ZXIgaW4gbWFpbmxpbmUgKGFuZCBwcm9iYWJseSB0aGUgbGFzdCBu
YW1lZCB1bml0IG9mIGFueQogICAgICAgIGtpbmQpIHRvIGhhdmUgYW4gZWFydGgtaHVtYW4gbmFtZS4K
ICAgICogVW5kZXIgdGhlIEJ1cm5pbmcgU3VucwogICAgICAqIEthbGVoIGFkdmFuY2VtZW50OgogICAg
ICAgICogR2F2ZSB0aGUgSGVybyB2YXJpYXRpb24gbW9yZSBIUC4KICAgICAgICAqIFJlZHVjZWQgWFAg
cmVxdWlyZW1lbnRzIGZvciB0aGUgQ2FwdGFpbiB2YXJpYXRpb24uCiAgICAgICAgKiBEaXNhYmxlZCB0
aGUgc3dvcmQyIChhbmQgdGh1cyBhcm1vcikgQU1MQSBmb3IgdGhlIENhcHRhaW4gdmFyaWF0aW9uLgog
ICAgICAgICogRW5hYmxlZCB0aGUgYm9sYXMgQU1MQSBmb3IgYWxsIHZhcmlhdGlvbnMuCiAgICAgICAg
KiBBZGRlZCB0aGUgY2Ftb3VmbGFnZSBBTUxBIGJhY2suCgogICogR3JhcGhpY3MKICAgICogTmV3IHBv
cnRyYWl0IGZvciBEd2FyZiBGaWdodGVyIChhbHRlcm5hdGl2ZSksIEdvYmxpbiBTcGVhcm1hbiwgSHVu
dHNtYW4sCiAgICAgIE9ncmUvWW91bmcgT2dyZSwgT3JjIEdydW50LCBSYW5nZXIsIFRyYXBwZXIuCgog
ICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9ucwogICAgKiBUaGUgdGVybSAnc3RvbmVkJyBoYXMgYmVl
biByZXBsYWNlZCB3aXRoICdwZXRyaWZpZWQnOyBhbHNvIHRoZQogICAgICByZWxhdGVkIHZlcmIuCiAg
ICAqIE5ldyB0cmFuc2xhdGlvbnM6IEljZWxhbmRpYy4KICAgICogVXBkYXRlZCB0cmFuc2xhdGlvbnM6
IEJyaXRpc2ggRW5nbGlzaCwgQ2F0YWxhbiwgQ2hpbmVzZSAoU2ltcGxpZmllZCksCiAgICAgIENoaW5l
c2UgKFRyYWRpdGlvbmFsKSwgQ3plY2gsIER1dGNoLCBHZXJtYW4sIEZpbm5pc2gsIEZyZW5jaCwgSGVi
cmV3LAogICAgICBIdW5nYXJpYW4sIEluZG9uZXNpYW4sIEl0YWxpYW4sIExpdGh1YW5pYW4sIE5vcndl
Z2lhbiwgUG9saXNoLCBSdXNzaWFuLAogICAgICBTZXJiaWFuLCBTbG92YWssIFN3ZWRpc2gsIFR1cmtp
c2guCgogICogTXVsdGlwbGF5ZXIKICAgICogSW1wbGVtZW50ZWQgYXV0b21hdGljIHNhdmluZyBvZiBn
YW1lIHJlcGxheXMuCiAgICAqIEltcGxlbWVudGVkIHRoZSBhZG1pbm1zZyBjb21tYW5kIHRvIGFsbG93
IHBsYXllcnMgdG8gc2VuZCBtZXNzYWdlcyB0bwogICAgICBjdXJyZW50bHkgYXZhaWxhYmxlIGFkbWlu
cy4gKEZSICM5MjE4KQogICAgKiBGaXhlZCBidWcgIzc1NDc6IEFkZCBwb3NzaWJpbGl0eSB0byB1bmJh
bi91bm11dGUgaW4gYSBtdWx0aXBsYXllciBnYW1lCgogICogVGVycmFpbnMKICAgICogTmV3IHRlcnJh
aW5zOiBvcmNpc2ggZm9ydCBhbmQgb3JjaXNoIHZpbGxhZ2UuCgogICogVW5pdHMKICAgICogQWRkZWQg
dGhlIFdhdGVyIFNlcnBlbnQuCiAgICAqIFRoZSBEd2FydmlzaCBTY291dCBsaW5lIGZyb20gVXRCUyBp
cyBub3cgbWFpbmxpbmU7IFRIT1QgdXNlcyBpdC4KCiAgKiBVc2VyIGludGVyZmFjZQogICAgKiBGaXgg
bWlzc2luZyBmYWN0aW9uIGNvbHVtbiB3aGVuIHdhaXRpbmcgdGhhdCB0aGUgaG9zdCBzdGFydCB0aGUg
Z2FtZS4KICAgICogTWFraW5nIHRoZSBnYW1lIHJldHVybiB0byB0aGUgYWRkLW9uIGluc3RhbGwgZGlh
bG9nIGp1c3QgYmVmb3JlCiAgICAgIGluc3RhbGxpbmcgb25lLCBhbmQgd2l0aCBpdHMgZW50cnkgc2Vs
ZWN0ZWQuCiAgICAqIEltcHJvdmVkIHRoZSBzb3J0aW5nIG9mIHRoZSBYUCBhbmQgdHJhaXRzIGNvbHVt
bnMgaW4gdGhlIHVuaXQgbGlzdCBkaWFsb2cKICAgICAgKHBhcnQgb2YgYnVnICMxMzM2MCkuCiAgICAq
IEZpeGVkIHRoZSBNUCBwYXNzd29yZCB0ZXh0Ym94IGhhbmRsaW5nIG9mIHNwZWNpYWwgY2hhcmFjdGVy
cy4KICAgICogQWRkIGEgIkZhY3Rpb25zIiBzZWN0aW9uIGluIGhlbHAuIE9ubHkgc2hvdyBjdXJyZW50
IGVyYSdzIGluZm9ybWF0aW9ucy4KCiAgKiBNaXNjZWxsYW5lb3VzIGFuZCBidWdmaXhlcwogICAgKiBG
aXhlZCBtaXNzaW5nIHVuaXQgZ3JhcGhpY3Mgd2hlbiBsb2FkaW5nIGEgc3RhcnQtb2Ytc2NlbmFyaW8g
c2F2ZWdhbWUuCiAgICAqIFRoZSBhZGQtb25zIGRpcmVjdG9yeSwgPHByZWZlcmVuY2VzPi9kYXRhL2Nh
bXBhaWducywgaGFzIGJlZW4gcmVuYW1lZAogICAgICBhbmQgaXQgaXMgbm93IDxwcmVmZXJlbmNlcz4v
ZGF0YS9hZGQtb25zLgoKVmVyc2lvbiAxLjY6CiAgKiBHcmFwaGljczoKICAgICogTmV3IG9yIHVwZGF0
ZWQgdW5pdCBncmFwaGljcyBmb3IgdGhlIE1lcm1haWQgUHJpZXN0ZXNzIGFuZCBFbmNoYW50cmVzcwog
ICAgICB1bml0IGxpbmVzLgoKICAqIExhbmd1YWdlIGFuZCB0cmFuc2xhdGlvbnMKICAgICogVXBkYXRl
ZCB0cmFuc2xhdGlvbnM6IEZpbm5pc2gsIEZyZW5jaCwgR2VybWFuLCBMaXRodWFuaWFuLCBQb2xpc2gs
CiAgICAgIFBvcnR1Z3Vlc2UgKEJyYXppbCksIFJ1c3NpYW4sIFNsb3ZhaywgU3BhbmlzaC4KCiAqIFVz
ZXIgaW50ZXJmYWNlOgogICAqIEdyZXkgZ2FtZSB0aXRsZXMgb3V0IHdoZW4gd2UncmUgbWlzc2luZyB0
aGUgZXJhLgoKVmVyc2lvbiAxLjUuMTQ6CiAgKiBDYW1wYWlnbnM6CiAgICAqIERlc2NlbnQgaW50byBE
YXJrbmVzczoKICAgICAgKiBJbmNyZWFzZWQgdGhlIGV4cGVyaWVuY2UgcmVxdWlyZW1lbnQgZm9yIHRo
ZSBBbmNpZW50IExpY2ggZnJvbSAxNTAgdG8KICAgICAgICAyNTAuCiAgICAqIFVuZGVyIHRoZSBCdXJu
aW5nIFN1bnM6CiAgICAgICogU2ltcGxpZmllZCBLYWxlaCdzIEFNTEFzIHRvIGhhdmUgY29uc2lzdGVu
dCByZXF1aXJlbWVudHMgYW5kIGVmZmVjdHMuCgogICogR3JhcGhpY3M6CiAgICAqIE5ldyBwb3J0cmFp
dCBmb3IgdGhlIG1hbGUgYW5kIGZlbWFsZSBBc3Nhc3NpbiwgR3J5cGhvbiBSaWRlciwgTG9uZ2Jvd21h
biwKICAgICAgTWFzdGVyIEJvd21hbiwgRHdhcmYgUnVuZW1hc3Rlci4KICAKICAqIExhbmd1YWdlIGFu
ZCB0cmFuc2xhdGlvbnMKICAgICogVXBkYXRlZCB0cmFuc2xhdGlvbnM6IENhdGFsYW4sIENoaW5lc2Ug
KFNpbXBsaWZpZWQpLCBDemVjaCwgRHV0Y2gsCiAgICAgIEZpbm5pc2gsIEdlcm1hbiwgSGVicmV3LCBI
dW5nYXJpYW4sIExpdGh1YW5pYW4sIE5vcndlZ2lhbiwgUG9saXNoLAogICAgICBSdXNzaWFuLCBTbG92
YWsuCiAgICAqIENoYW5nZWQgdGhlIGZvbnQgdXNlZCBmb3IgYWxsIEFzaWFuIHRyYW5zbGF0aW9ucyB0
byB0aGUgbGF0ZXN0IHJlbGVhc2Ugb2YKICAgICAgd3F5LXplbmhlaS4KCiAgKiBNdXNpYyBhbmQgc291
bmQgZWZmZWN0cwogICAgKiBBZGRlZCB0aGUgbmV3IG11c2ljIHRyYWNrICJTaWVnZSBvZiBMYXVyZWxt
b3IiIGJ5IERvdWcgS2F1Zm1hbi4KCiAgKiBVc2VyIGludGVyZmFjZQogICAgKiBEb3dubG9hZGVkIGFk
ZC1vbnMgZG8gbm93IGFwcGVhciBkaXJlY3RseSBhZnRlciBkb3dubG9hZCBpbiB0aGUgY2FtcGFpZ25z
CiAgICAgIGxpc3QuIEl0IGlzIG5vdCByZXF1aXJlZCBhbnltb3JlIHRvIHJlc3RhcnQgdGhlIGdhbWUu
IChidWcgIzEzMTIzKQoKVmVyc2lvbiAxLjUuMTM6CiAgKiBHcmFwaGljczoKICAgICogTmV3IHBvcnRy
YWl0IGZvciB0aGUgV29vZHNtYW4sIEJvd21hbiwgbWFsZSBUaGllZgogICogTGFuZ3VhZ2UgYW5kIHRy
YW5zbGF0aW9ucwogICAgKiBVcGRhdGVkIHRyYW5zbGF0aW9uczogQ2hpbmVzZSAoU2ltcGxpZmllZCks
IEN6ZWNoLCBGcmVuY2gsIEZpbm5pc2gsCiAgICAgIEh1bmdhcmlhbiwgUG9saXNoLCBSdXNzaWFuLCBT
bG92YWssIFR1cmtpc2guCgpWZXJzaW9uIDEuNS4xMjoKICAqIEdyYXBoaWNzCiAgICAqIE5ldyBwb3J0
cmFpdCBmb3IgdGhlIGZlbWFsZSBUaGllZi4KICAgICogTmV3IHRpbGVzIGZvciBzdW1tZXIgYW5kIGZh
bGwgZGVjaWR1b3VzIGFuZCBtaXhlZCBmb3Jlc3RzLgogICAgKiBEZWNpZHVvdXMgYW5kIG1peGVkIGZv
cmVzdHMgbm93IHVzZWQgaW4gc2V2ZXJhbCBjYW1wYWlnbnMgKG5vdCBhbGwsIHlldCkuCiAgICAqIE5l
dyB0aWxlcyBmb3IgZGlydC4KICAgIAogICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9ucwogICAgKiBV
cGRhdGVkIHRyYW5zbGF0aW9uczogQ2hpbmVzZSAoU2ltcGxpZmllZCksIEN6ZWNoLCBGcmVuY2gsIEdl
cm1hbiwKICAgICAgSXRhbGlhbiwgUG9saXNoLCBQb3J0dWd1ZXNlIChCcmF6aWwpLCBTcGFuaXNoLCBU
dXJraXNoLgogICAgICAKICAqIFVzZXIgaW50ZXJmYWNlCiAgICAqIExpc3Rib3ggY29sdW1ucyBoYXZl
IHRoZSBzYW1lIHdpZHRoIGFnYWluLgogICAgKiBOb3cgY2xlYXIgZm9nL3Nocm91ZCBiZWZvcmUgYW4g
YXR0YWNrIHdoZW4gZG9pbmcgYSBtb3ZlK2F0dGFjayBhY3Rpb24uCiAgICAqIENoYW5nZWQgdGhlIHdp
ZGdldHMgaW4gdGhlIGluIGdhbWUgbWVzc2FnZSBkaWFsb2cuCiAgICAqIFRoZSBtdWx0aXBsYXllciBk
aWFsb2cgc2hvd3MgdG9vbHRpcHMgYWdhaW4uCiAgICAqIFRoZSB0ZXh0Ym94IGhpc3Rvcnkgbm93IHVz
ZXMgQ1RSTCtUQUIgYW5kIENUUkwrU0hJRlQrVEFCLgoKVmVyc2lvbiAxLjUuMTE6CiAgKiBHcmFwaGlj
cwogICAgKiBOZXcgb3IgdXBkYXRlZCB1bml0IGdyYWhwaWNzOiBNZXJtYW4gRmlnaHRlciBsaW5lLCBN
ZXJtYW4gSHVudGVyIGxpbmUuCiAgICAqIE5ldyBpZGxlIGFuaW1hdGlvbnM6IEhlYXZ5IEluZmFudHJ5
bWFuLgogICAgKiBOZXcgcG9ydHJhaXQgZm9yIHRoZSBKYXZlbGluZWVyLCBHcnlwaG9uLCBFbHZpc2gg
U3lscGguCgogICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9ucwogICAgKiB1cGRhdGVkIHRyYW5zbGF0
aW9uczogQ3plY2gsIEZyZW5jaCwgR2VybWFuLCBIZWJyZXcsIExpdGh1YW5pYW4sIFBvbGlzaCwKICAg
ICAgUnVzc2lhbiwgU3BhbmlzaC4KCiAgKiBVc2VyIGludGVyZmFjZQogICAgKiBGaXhlZCBhIHRlcm1p
bmF0aW9uIHdoaWNoIGNvdWxkIGhhcHBlbiBpZiB5b3UgY2xpY2tlZCB0d2ljZSBvbiBhIGJ1dHRvbgog
ICAgICBpbiB0aGUgTVAgcGFzc3dvcmQgZGlhbG9nLgogICAgKiBGaXhlZCBnbGl0Y2hlcyB3aXRoIGxv
bmcgW29wdGlvbl0gbGlzdHMuCiAgICAqIEFkZGVkIFVJIHNvdW5kcyB0byB0aGUgbmV3IHdpZGdldHMu
CgpWZXJzaW9uIDEuNS4xMDoKICAqIENhbXBhaWducwogICAgKiBUaGUgU291dGggR3VhcmQKICAgICAg
KiBNYWRlICdJbnRvIHRoZSBEZXB0aHMnIGEgYml0IGVhc2llci4KICAgICogVW5kZXIgdGhlIEJ1cm5p
bmcgU3VucwogICAgICAqIEZpeGVkIGEgY3Jhc2ggZHVlIHRvIGRvdWJsZS1hZHZhbmNlbWVudCBvZiBk
ZWh5ZHJhdGVkIHVuaXRzCiAgICAgICAgaW4gc2NlbmFyaW8gMi4KICAgICAgKiBLYWxlaCdzIEFNTEFz
IGhhdmUgZWZmZWN0IGFnYWluIHBhc3QgbGV2ZWxpbmcgdG8gTDIuCiAgICAgICogTWFkZSBhbGwgaHVt
YW4tY29udHJvbGxlZCBtYWpvciBjaGFyYWN0ZXJzIHVucmVuYW1hYmxlLgoKICAqIEdyYXBoaWNzCiAg
ICAqIE5ldyBwb3J0cmFpdHM6IEhhbGJlcmRpZXIsIER3YXJmIFVsZnNlcmtlciBsaW5lLgogICAgKiBO
ZXcgb3IgdXBkYXRlZCB1bml0IGdyYXBoaWNzOiBFbHZpc2ggRW5jaGFudHJlc3MsIE9yY2lzaCBTbGF5
ZXIsCiAgICAgIE5hZ2EgRmlnaHRlciwgTmFnYSBNeXJtaWRvbi4KICAgICogTmV3IGlkbGUgYW5pbWF0
aW9uczogRHdhcnZpc2ggVGh1bmRlcmVyLCBOYWdhIEZpZ2h0ZXIuCiAgICAqIFJld3JvdGUgdGhlIHJl
bmRlcmluZyBlbmdpbmUgd2hpY2ggc2hvdWxkIGZpeCB0aGUgZHJhd2luZyBvcmRlci4KICAgICogTmV3
IGdyYXBoaWNhbCB2YXJpYXRpb25zIGZvciB0aGUgd2F0ZXIgdmlsbGFnZXMuCiAgICAKICAqIExhbmd1
YWdlIGFuZCB0cmFuc2xhdGlvbnMKICAgICogTmV3IHRyYW5zbGF0aW9uczogTWFyYXRoaS4KICAgICog
VXBkYXRlZCB0cmFuc2xhdGlvbnM6IEJyaXRpc2ggRW5nbGlzaCwgRHV0Y2gsIEZyZW5jaCwgR2VybWFu
LCBIdW5nYXJpYW4sCiAgICAgIEl0YWxpYW4sIFJ1c3NpYW4sIFNsb3ZlbmlhbiwgU3BhbmlzaCwgU3dl
ZGlzaC4KICAgIAogICogTXVsdGlwbGF5ZXIKICAgICogVXBkYXRlZCBtYXBzOiBDbGFzaCwgQ3luc2F1
biBCYXR0bGVmaWVsZCwgRGVuIG9mIE9uaXMsIFNpbHZlcmhlYWQKICAgICAgQ3Jvc3NpbmcsIEhvd2xp
bmcgR2hvc3QgQmFkbGFuZHMsIFRoZSBXaWxkZXJsYW5kcywgRm9yZXN0IG9mIEZlYXIuCiAgICAgIAog
ICogVGVycmFpbnMKICAgICogRW5hYmxlZCBtaXhlZCBkZWNpZHVvdXMtcGluZSBmb3Jlc3QgdGVycmFp
bnMuCiAgICAqIEZvcmVzdGVkIGhpbGxzIHZhcmlhdGlvbnMgbm93IGF2YWlsYWJsZSBmb3IgdGhlIGRl
Y2lkdW91cyBhbmQgbWl4ZWQKICAgICAgZm9yZXN0cy4KCiAgKiBVc2VyIGludGVyZmFjZQogICAgKiBS
ZW1vdmVkIHRoZSBnYW1tYSBjb3JyZWN0aW9uIG9wdGlvbi4KICAgICogRml4ZWQgdGhlIHByb2JsZW0g
dGhhdCBzb21lIGRpYWxvZ3MgdGVybWluYXRlZCBXZXNub3RoLgoKVmVyc2lvbiAxLjUuOToKICAqIENh
bXBhaWducwogICAgKiBUaGUgU291dGggR3VhcmQKICAgICAgKiBNYWRlICdUaWRlcyBvZiBXYXInIGEg
Yml0IGVhc2llci4KICAgICogU2NlcHRyZSBvZiBGaXJlCiAgICAgICogRml4IHRoZSBwbGF5ZXIncyBr
ZWVwIGRpc2FwcGVhcmluZyBpbiAnR2F0aGVyaW5nIE1hdGVyaWFscycuCiAgICAgICogTmV3IGdyYXBo
aWNzIGZvciB0aGUgRHdhcnZpc2ggTWluZXIuCiAgICAqIFVuZGVyIHRoZSBCdXJuaW5nIFN1bnM6CiAg
ICAgICogTmV3IGJhc2UgZnJhbWVzIGZvciB0aGUgRGVzZXJ0IFNlbnRpbmVsIGFuZCBQcm93bGVyLgoK
ICAqIEdyYXBoaWNzCiAgICAqIE5ldyBwb3J0cmFpdCBmb3IgRHdhcmYgVGh1bmRlcmVyLCBEd2FyZiBE
cmFnb25ndWFyZCwgSHVtYW4gUGlrZW1hbiwgRHdhcmYKICAgICAgRmlnaHRlciwgRHdhcmYgTG9yZCwg
RHdhcmYgR3VhcmQsIE1lcm1haWQgSW5pdGlhdGUsIER3YXJmIFNlbnRpbmVsLgogICAgKiBSZW1vdmVk
IHRoZSBibGFjayBiYWNrZ3JvdW5kIGZyb20gc29tZSByZW1haW5pbmcgb2xkIHBvcnRyYWl0cy4KCiAg
KiBMYW5ndWFnZSBhbmQgdHJhbnNsYXRpb25zCiAgICAqIHVwZGF0ZWQgdHJhbnNsYXRpb25zOiBDYXRh
bGFuLCBDaGluZXNlIChUcmFkaXRpb25hbCksIEN6ZWNoLCBEdXRjaCwKICAgICAgRnJlbmNoLCBHZXJt
YW4sIEh1bmdhcmlhbiwgSXRhbGlhbiwgUG9saXNoLCBTbG92YWssIFNwYW5pc2gsIFZhbGVuY2lhbi4K
CiAgKiBNdWx0aXBsYXllcgogICAgKiBNYWRlICJmb2cgb2Ygd2FyIiBhbmQgInJhbmRvbSBzdGFydCB0
aW1lIiBkZWZhdWx0IHRvIG9uLgogICAgKiBGaXhlZCB0aGUgRGVmYXVsdCBFcmEgcXVpY2sgbGVhZGVy
cyBub3QgZ2V0dGluZyB0aGUgLTUlIEhQIHJlZHVjdGlvbi4KICAgICogTWFkZSBsZWFkZXJzIHdpdGgg
NCBNUCByZWNlaXZlIHRoZSBxdWljayB0cmFpdCBhbHNvIGluIEFnZSBvZiBIZXJvZXMuCgogICogVGVy
cmFpbnMKICAgICogTmV3IHN1bW1lciwgZmFsbCBhbmQgd2ludGVyIGRlY2lkdW91cyBmb3Jlc3QgdGVy
cmFpbnMuCgogICogVXNlciBpbnRlcmZhY2UKICAgICogRGlzYWJsZSB0aGUgIk5ldHdvcmsgUGxheWVy
IiBvcHRpb24gd2hlbiBwbGF5aW5nIGEgbm9uLW5ldHdvcmtlZCBNUAogICAgICBnYW1lLgogICAgKiBB
bGwgaW5nYW1lIG1lc3NhZ2UgZGlhbG9ncyBub3cgdXNlIHRoZSBuZXcgZGlhbG9ncy4KClZlcnNpb24g
MS41Ljg6CiAgKiBDYW1wYWlnbnMKICAgICogQW4gT3JjaXNoIEluY3Vyc2lvbgogICAgICAqIENvbnZl
cnRlZCB0byB0aGUgbmV3IGdvbGQgY2FycnlvdmVyIHN5c3RlbS4KICAgICogRWFzdGVybiBJbnZhc2lv
bgogICAgICAqIEZpeGVkIHZpY3Rvcnkgbm90IHRyaWdnZXJpbmcgY29ycmVjdGx5IGluICdUaGUgQ3Jv
c3NpbmcnLgogICAgICAqIEZpeGVkIG1pc3NpbmcgdGltZSBvZiBkYXkgc2NoZWR1bGVzIGluIHNldmVy
YWwgc2NlbmFyaW9zLgogICAgICAqIEZpeGVkIHZhcmlvdXMgcHJvYmxlbXMgaW4gJ05vcnRoZXJuIE91
dHBvc3QnLgogICAgKiBUaGUgSGFtbWVyIG9mIFRodXJzYWdhbgogICAgICAqIENvbnZlcnRlZCB0byB0
aGUgbmV3IGdvbGQgY2FycnlvdmVyIHN5c3RlbS4KICAgICogVGhlIFJpc2Ugb2YgV2Vzbm90aAogICAg
ICAqIFJlbmFtZWQgIkxvcmQgRGlvbmxpIiB0byAiTGFkeSBEaW9ubGkiLgogICAgKiBTb24gb2YgdGhl
IEJsYWNrIEV5ZQogICAgICAqIE1hZGUgc2NlbmFyaW9zICdTaWxlbnQgRm9yZXN0JyBhbmQgJ1NoYW4g
VGF1bSB0aGUgU211ZycgaGFyZGVyLgogICAgKiBMZWdlbmQgb2YgV2VzbWVyZSAKICAgICAgKiBGaXhl
ZCB0aGUgYnVnIHdpdGggc2F2ZWdhbWVzIGluIHNjZW5hcmlvIDMuCgogICogR3JhcGhpY3MKICAgICog
TmV3IHBvcnRyYWl0cyBmb3IgUm95YWwgR3VhcmQsIEhlYXZ5IEluZmFudHJ5LCBJcm9uIE1hdWxlciwg
U2VyZ2VhbnQsCiAgICAgIExpZXV0ZW5hbnQsIEdlbmVyYWwsIEdyYW5kIE1hcnNoYWwgd2l0aCAxIGFs
dGVybmF0ZSwgU2F1cmlhbiBBdWd1ciBsaW5lLAogICAgICBTYXVyaWFuIFNraXJtaXNoZXIgbGluZSwg
VHJvbGwgV2hlbHAsIERlYXRoIEtuaWdodC4KCiAgKiBMYW5ndWFnZSBhbmQgdHJhbnNsYXRpb25zCiAg
ICAqIEZpeGVkIHRyYW5zbGF0aW9uIG9mICdBIE5ldyBMYW5kJyBub3QgYmVpbmcgc2hvd24uCiAgICAq
IFRyYW5zbGF0aW9ucyBvZiB1c2VyLW1hZGUgY29udGVudCB3b3JrIGFnYWluIHdoZW4gYXZhaWxhYmxl
LgogICAgKiB1cGRhdGVkIHRyYW5zbGF0aW9uczogQ2hpbmVzZSAoU2ltcGxpZmllZCksIEN6ZWNoLCBE
YW5pc2gsIEdlcm1hbiwKICAgICAgSHVuZ2FyaWFuLCBJdGFsaWFuLCBKYXBhbmVzZSwgTGl0aHVhbmlh
biwgUnVzc2lhbiwgU2xvdmFrLCBTcGFuaXNoLgoKICAqIE11bHRpcGxheWVyIHVzZXIgaW50ZXJmYWNl
CiAgICAqIEFkZGVkIGEgZ3VpIGZyb250LWVuZCB0byB2YXJpb3VzIGNvbW1hbmRzLCBicm91Z2h0IHVw
IGJ5IGRvdWJsZSBjbGlja2luZwogICAgICBhIHBsYXllciBuYW1lLCByZXBsYWNpbmcgdGhlIG9sZCB3
aGlzcGVyIGRpYWxvZy4KICAgICogQXV0b21hdGljYWxseSBzZWxlY3QgdGhlIGdhbWUgdGhlIHNlbGVj
dGVkIHBsYXllciBpcyBpbi4KICAgICogQWRkZWQgYW4gb3B0aW9uIHRvIHNhdmUgdGhlIHBhc3N3b3Jk
IHRvIHRoZSBwcmVmZXJlbmNlcwoKICAqIFVzZXIgaW50ZXJmYWNlCiAgICAqIEZpeGVkIGEgZ2xpdGNo
IHdoZXJlIGEgbmV3IGRpYWxvZyBkaWRuJ3Qgc2hvdyB1cCBhZnRlciBhbiBvbGQgZGlhbG9nLgogICAg
KiBGaXhlZCBzZXZlcmFsIGdsaXRjaGVzIGluIHdpdGggdGhlIGxpc3Rib3hlcyBhbmQgbmV3IHBvcnRy
YWl0IGRpYWxvZy4KICAgICogUHJlc3NpbmcgZXNjYXBlIGluIGEgbmV3IGRpYWxvZywgYmVoYXZlcyBs
aWtlIGluIHRoZSBvbGQgZGlhbG9ncyBhZ2Fpbi4KICAgICogU3BhY2ViYXIgY2xvc2VzIHRoZSBkaWFs
b2dzIHdpdGhvdXQgYSBzY3JvbGxiYXIgYWdhaW4uCiAgICAqIFRoZSBuZXcgcG9ydHJhaXQgZGlhbG9n
cyBjYW4gbm93IHNob3cgdGhlIG9sZCBpbWFnZXMgYXMgd2VsbCBhbmQgYWxzbyB0aGUKICAgICAgcmln
aHQgaGFuZCBzaWRlIGltYWdlcy4KCiAgKiBNaXNjZWxsYW5lb3VzIGFuZCBidWdmaXhlcwogICAgKiBG
aXhlZCBhIGNyYXNoIHdoZW4gbW9yZSB0aGFuIG9uZSBhZGQtb24gaXMgYmVpbmcgdXBkYXRlZC4KClZl
cnNpb24gMS41Ljc6CiAgKiBDYW1wYWlnbnMKICAgICogRWFzdGVybiBJbnZhc2lvbgogICAgICAqIENv
bnZlcnRlZCB0byB0aGUgbmV3IGdvbGQgY2FycnlvdmVyIHN5c3RlbS4KICAgICAgKiBHYXZlIHRoZSB1
bmRlYWQgZmxhZyB0byByZWxldmFudCBzaWRlcy4KICAgICAgKiBGaXhlZCBEYWN5biBhbmQgT3dhZWMg
bm90IGJlaW5nIGxveWFsLgogICAgICAqIEluICdNYWwtUmF2YW5hbCdzIENhcGl0YWwnLCByZXdvcmtl
ZCBob3cgdGhlIHByaXNvbmVyIGtuaWdodHMgd29yazogbm93CiAgICAgICAgdGhleSdyZSBwbGFjZWQg
b24gdGhlIG1hcCBpbiBjYWdlcyB3aXRoIGd1YXJkcyBuZXh0IHRvIHRoZW0sIGFuZCB0aGUKICAgICAg
ICBwbGF5ZXIgbXVzdCBraWxsIHRoZSBndWFyZCB0byByZWxlYXNlIHRoZSBwcmlzb25lci4KCiAgICAq
IEhlaXIgdG8gdGhlIFRocm9uZToKICAgICAgKiBBZGRlZCBhbiBpZGxlIGFuaW1hdGlvbiBmb3IgTDIg
UHJpbmNlc3MuCiAgICAgICogRml4ZWQgdGhlIGR3YXJ2ZXMgYXR0YWNraW5nIHRoZSBwbGF5ZXIgaW4g
J1RoZSBMb3N0IEdlbmVyYWwnLgogICAgICAqIEluICdCYXkgb2YgUGVhcmxzJywgdGhlIHBsYXllciBy
ZWNlaXZlcyByZWNydWl0bWVudCBvZiBhbGwgbHZsMSBtZXJtZW4KICAgICAgICB1bml0cyBpZiBib3Ro
IGVuZW15IGxlYWRlcnMgYXJlIGRlZmVhdGVkLCBhbmQgb25seSBNZXJtZW4gRmlnaHRlcnMgaWYKICAg
ICAgICBvbmx5IG9uZSBvZiB0aGVtIGlzLgogICAgICAqIEZpeGVkIG5vdCBiZWluZyBhYmxlIHRvIHJl
Y3J1aXQgbWVybWVuIGluICdJc2xlIG9mIHRoZSBEYW1uZWQnLgoKICAgICogTGliZXJ0eQogICAgICAq
IENvbnZlcnRlZCB0byB0aGUgbmV3IGdvbGQgY2FycnlvdmVyIHN5c3RlbS4KCiAgICAqIFRoZSBSaXNl
IG9mIFdlc25vdGg6CiAgICAgICogQ2hhbmdlZCBGYW1pbGlhcidzIHBvcnRyYWl0IHRvIG1hdGNoIGhp
cyBuZXcgdW5pdCB0eXBlLgogICAgICAqIEZpeGVkIG1hbnkgZnVubnkgaW5jb25zaXN0ZW5jaWVzIHJl
bGF0ZWQgdG8gRmFtaWxpYXIncyB1bml0CiAgICAgICAgdHlwZS4KICAgICAgKiBGaXhlZCBicm9rZW4g
ZGVhdGggZXZlbnRzLgogICAgICAqIExhZHkgT3V0bGF3IGRvZXMgbm90IGxvc2UgaGVyIGV4cGVyaWVu
Y2Ugb24gJ1JldHVybiB0byBPbGR3b29kJy4KICAgICAgKiBSZXN0b3JlZCBtaXNzaW5nIGxlYWRpbmcg
YW5pbWF0aW9ucyBmb3IgTm9ibGUgQ29tbWFuZGVyIGFuZAogICAgICAgIE5vYmxlIExvcmQsIGFuZCBn
YXZlIGxlYWRpbmcgYW5pbWF0aW9ucyB0byBXZXNmb2xrIE91dGNhc3QKICAgICAgICBsaW5lLgoKICAg
ICogU2NlcHRyZSBvZiBGaXJlCiAgICAgICogSW4gJ1NlYXJjaGluZyBmb3IgdGhlIFJ1bmVjcmFmdGVy
JywgdGhlIHR1cm4gbGltaXQgaXMgbm93IGluY3JlYXNlZCB3aGVuCiAgICAgICAgZmluZGluZyBUaHVy
c2FnYW4uCiAgICAgICogSW4gJ0dhdGhlcmluZyBNYXRlcmlhbHMnLCBhbGwgZW5lbXkgc2lkZXMgbm93
IGZpZ2h0IGVhY2ggb3RoZXIuCgogICAgKiBUaGUgU291dGggR3VhcmQKICAgICAgKiBNYWRlICdJbnRv
IHRoZSBEZXB0aHMnIGEgYml0IGVhc2llciBvbiB0aGUgZWFzaWVzdCBkaWZmaWN1bHRpZXMuCiAgICAg
IAogICAgKiBUd28gQnJvdGhlcnMKICAgICAgKiBDb252ZXJ0ZWQgdG8gdGhlIG5ldyBnb2xkIGNhcnJ5
b3ZlciBzeXN0ZW0uCgogICAgKiBVbmRlciB0aGUgQnVybmluZyBTdW5zOgogICAgICAqIENvbnZlcnRl
ZCB0byB0aGUgbmV3IGdvbGQgY2FycnlvdmVyIHN5c3RlbS4KICAgICAgKiBNYWRlIEVseXNzYSBMb3lh
bCBhbmQgUXVpY2sgaW5zdGVhZCBvZiBRdWljayBhbmQgSW50ZWxsaWdlbnQuCiAgICAgICogQWRkZWQg
dXBkYXRlZCBEZXNlcnQgSHVudGVyIHNwcml0ZXMuCgogICAgKiBMZWdlbmQgb2YgV2VzbWVyZQogICAg
ICAqIE1hcmtlZCB0aGUgZ3VhcmRzIGluIHNjZW5hcmlvIDA1IHRvIGJlIGtpbGxlZC4KICAgICAgKiBN
YW55IEJ1ZyBmaXhlcyhyZWNydWl0aW5nLCB2aWxsYWdlIG93bmVyc2hpcCkgCQogICAgICAqIE1hZGUg
T2x1cmYncyBzaWRlIHBlcnNpc3RlbnQuCiAgICAgICogTmV3IDQwMCo0MDAgcGl4ZWwgc2l6ZWQgcG9y
dHJhaXQgaW1hZ2VzLgogICAgICAqIEFsbCBwb3J0cmFpdHMgYXJlIG5vdyBkaXNwbGF5ZWQgd2l0aG91
dCBzY2FsZWluZy4KICAgICAgKiBVcGRhdGVkIG11c2ljIHBsYXlsaXN0cy4KICAgICAgKiBGbGlwcGVk
IHRoZSBLYSdsaWFuIG1hcCBob3Jpem9udGFseS4JCiAgICAgICogVXBkYXRlZCBvdmVydmlldyBtYXAg
dG8gTG9XJ3MgdGltZS4KICAgICAgKiBSZWRvbmUgam91cm5leSB0aGF0IGlzIGRpc3BsYXllZCBvbiB0
aGUgb3ZlcnZpZXcgbWFwLgkKCQogICogRWRpdG9yMgogICAgKiBUaGUgbWFwIGVkaXRvciBpcyBhdXRv
bWF0aWNhbGx5IHN0YXJ0ZWQgaWYgdGhlIGJpbmFyeSBmaWxlIHVzZWQKICAgICAgdG8gc3RhcnQgV2Vz
bm90aCBjb250YWlucyAiZWRpdG9yIiBzb21ld2hlcmUgaW4gaXRzIG5hbWUgKHVzZWZ1bAogICAgICBm
b3Igc3ltbGlua3MpLgoKICAqIEdyYXBoaWNzCiAgICAqIE5ldyBhdHRhY2sgaWNvbnM6IHNwaWtlZCBt
YWNlLgogICAgKiBOZXcgb3IgdXBkYXRlZCB1bml0IGdyYXBoaWNzOiBHcnlwaG9uIFJpZGVyLCBHcnlw
aG9uIE1hc3RlciwKICAgICAgUmV2ZW5hbnQsIE5hZ2EgV2Fycmlvci4KICAgICogTmV3IHRpbGUgdmFy
aWF0aW9ucyBmb3IgT2FzaXMuCiAgICAqIE5ldyBwb3J0cmFpdHMgZm9yIFBlYXNhbnQsIFN3b3Jkc21h
biwgU3BlYXJtYW4uCiAgICAqIFRoZSBnYW1lIG5vdyBzaG93cyBhbiB0cmFuc3BhcmVudCBpbWFnZSBp
biB0aGUgbmV3IGRpYWxvZyB3aGVuIGF2YWlsYWJsZS4KICAgICogUHJvcGVybHkgdXBkYXRlIGFuaW1h
dGVkIGhhbG9zLgoKICAqIExhbmd1YWdlIGFuZCB0cmFuc2xhdGlvbnMKICAgICogdXBkYXRlZCB0cmFu
c2xhdGlvbnM6IENoaW5lc2UgL1NpbXBsaWZpZWQpLCBDemVjaCwgRGFuaXNoLCBEdXRjaCwgRmlubmlz
aCwKICAgICAgRnJlbmNoLCBHYWxpY2lhbiwgR2VybWFuLCBIdW5nYXJpYW4sIEl0YWxpYW4sIExpdGh1
YW5pYW4sIFBvbGlzaCwgU2xvdmFrLAogICAgICBTcGFuaXNoLCBUdXJraXNoLgoKICAqIFVuaXQgY2hh
bmdlcyBhbmQgYmFsYW5jaW5nCiAgICAqIERlY3JlYXNlZCB0aGUgcmFuZ2UgYXR0YWNrIG9mIHRoZSBE
cmFrZSBGbGFyZSBmcm9tIDctNCB0byA2LTQuCiAgICAqIERlY3JlYXNlZCB0aGUgcmFuZ2UgYXR0YWNr
IG9mIHRoZSBEcmFrZSBGbGFtZWhhcnQgZnJvbSA5LTQgdG8gOC00LgogICAgKiBJbmNyZWFzZWQgdGhl
IGNvc3Qgb2YgdGhlIEdvYmxpbiBTcGVhcm1hbiBmcm9tIDggdG8gOS4KICAgICogRGVjcmVhc2VkIHRo
ZSBjb3N0IG9mIHRoZSBTZXJnZWFudCBmcm9tIDIwIHRvIDE5LgogICAgKiBEZWNyZWFzZWQgdGhlIEhQ
IG9mIHRoZSBTZXJnZWFudCBmcm9tIDM2IHRvIDMyLgogICAgKiBEZWNyZWFzZWQgdGhlIEhQIG9mIHRo
ZSBMaWV1dGVuYW50IGZyb20gNDggdG8gNDAuCiAgICAqIERlY3JlYXNlZCB0aGUgbWVsZWUgYXR0YWNr
IG9mIHRoZSBMaWV1dGVuYW50IGZyb20gOS0zIHRvIDgtMy4KICAgICogRGVjcmVhc2VkIHRoZSBIUCBv
ZiB0aGUgR2VuZXJhbCBmcm9tIDU4IHRvIDUwLgogICAgKiBEZWNyZWFzZWQgdGhlIEhQIG9mIHRoZSBH
cmFuZCBNYXJzaGFsIGZyb20gNjggdG8gNjAuCgogICogTWlzY2VsbGFuZW91cyBhbmQgYnVnZml4ZXMK
ICAgICogQ29tcHJlc3NlZCBzdGFydC1vZi1zY2VuYXJpbyBzYXZlZCBnYW1lcyBhcmUgcmVjb2duaXpl
ZCBhZ2Fpbi4KICAgICogRml4ZWQgc2luZ2xlLXBsYXllciBjYW1wYWlnbiBzY2VuYXJpbyByZXBsYXlz
LgogICAgKiBGaXhlZCByYW5kb20gbWVtb3J5IGNvcnJ1cHRpb24vYXNzZXJ0aW9uIGZhaWx1cmUvbWFz
c2l2ZSBtZW1vcnkgbGVhawogICAgICBkdWUgdG8gc3Rvcnkgc2NyZWVucy4KICAgICogVGhlIHJlc2V0
LXRvLWJlZ2lubmluZyByZXBsYXkgY29udHJvbCBidXR0b24gZG9lcyBub3QgY2F1c2UKICAgICAgYSBj
cmFzaCBhbnltb3JlLgoKVmVyc2lvbiAxLjUuNjoKICAqIENhbXBhaWducwogICAgKiBBbiBPcmNpc2gg
SW5jdXJzaW9uCiAgICAgICogSGFzIGEgbmV3IG1hcCwgYW5kIGEgam91cm5leSB0cmFjay4KICAgICog
RGVzY2VudCBJbnRvIERhcmtuZXNzOgogICAgICAqIE5vdyBoYXMgYSBqb3VybmV5IHRyYWNrLiBUaGUg
T3JjIFdhciBtYXAgaGFzIGJlZW4gY29zbWV0aWNhbGx5IG1vZGlmaWVkLgogICAgICAqIEFkZGVkIGEg
c2V0IG9mIHN0b3J5IGFydC4KICAgICogRWFzdGVybiBJbnZhc2lvbgogICAgICAqIE5vdyBoYXMgYSBq
b3VybmV5IHRyYWNrLiBHZW9ncmFwaGljYWwgY29udGludWl0eSBoYXMgYmVlbiBpbXByb3ZlZC4KICAg
ICAgKiBJbiAnV2VsZHluIEJlc2llZ2VkJywgdGhlIHBvc2l0aW9ucyBvZiB0aGUgbGljaGVzIGFyZSBu
b3cgcmFuZG9taXplZCBhbmQKICAgICAgICB0aGVpciBuYW1lcyBoaWRkZW4gdW50aWwgeW91IGF0dGFj
ayB0aGVtIChwYXRjaCAjMTEwOSkuCiAgICAqIFRoZSBIYW1tZXIgb2YgVGh1cnNhZ2FuCiAgICAgICog
Tm93IGhhcyBhIGpvdXJuZXkgdHJhY2suIEdlb2dyYXBoaWNhbCBjb250aW51aXR5IGhhcyBiZWVuIGlt
cHJvdmVkLgogICAgKiBIZWlyIHRvIHRoZSBUaHJvbmUKICAgICAgKiBUaGUgam91cm5leSB0cmFjayBo
YXMgYmVlbiBhZGp1c3RlZCBzbyAiVGVzdCBvZiB0aGUgQ2xhbnMiIHRha2VzCiAgICAgICAgcGxhY2Ug
aW4gdGhlIEhvcnNlIFBsYWlucywgbm90IHRoZSBFc3RtYXJrIEhpbGxzLgogICAgICAqIEdhbGRyYWQg
aXMgbm93IGFuIEVsdmlzaCBDaGFtcGlvbiBhbmQgbWlnaHQgc3Vydml2ZSBhIGZldyB0dXJucyBsb25n
ZXIuCiAgICAqIExlZ2VuZCBvZiBXZXNtZXJlCiAgICAgICogTmV3bHkgYWRkZWQgdG8gbWFpbmxpbmU6
IEludGVybWVkaWF0ZSBsZXZlbCwgMTcgcGxheWFibGUgc2NlbmFyaW9zLgogICAgKiBBIFRhbGUgb2Yg
VHdvIEJyb3RoZXJzCiAgICAgICogTm93IGhhcyBhIGpvdXJuZXkgdHJhY2suIEdlb2dyYXBoaWNhbCBj
b250aW51aXR5IGhhcyBiZWVuIGltcHJvdmVkLgogICAgKiBTY2VwdGVyIE9mIEZpcmUKICAgICAgKiBI
YXMgYSByZXZpc2VkIGpvdXJuZXkgdHJhY2suIEdlb2dyYXBoaWNhbCBjb250aW51aXR5IGhhcyBiZWVu
IGltcHJvdmVkLgogICAgKiBTb24gb2YgdGhlIEJsYWNrIEV5ZToKICAgICAgKiBUaGVyZSBpcyBhIG5l
dywgZnVsbCBjb2xvciBGYXIgTm9ydGggbWFwLgogICAgICAqIEluICdDbGFzaCBvZiBBcm1pZXMnLCBm
aXhlZCBhbGwgdGhlIG1lcm1hbiBzcGF3bnMgbm90IHdvcmtpbmcgY29ycmVjdGx5CiAgICAgICAgYW5k
IGxpbWl0ZWQgdGhlIG51bWJlciBvZiBzaW11bHRhbmVvdXMgZW5lbXkgZ3J5cGhvbiByZWNydWl0cyBv
biB0aGUKICAgICAgICBlYXNpZXN0IGRpZmZpY3VsdHkuCiAgICAqIFRoZSBTb3V0aCBHdWFyZAogICAg
ICAqIFJld3JvdGUgJ1RoZSBMb25nIE1hcmNoJy4KICAgICAgKiBNYWRlIGVhY2ggdHVybiBwYXN0IHR1
cm4gOSB0aGF0IHBhc3NlcyBpbiAnUGViYmxlcyBpbiB0aGUgRmxvb2QnIGdpdmUKICAgICAgICB5b3Ug
c29tZSBjb25jcmV0ZSBiZW5lZml0IGluICdUaWRlcyBvZiBXYXInLiBBbHNvLCB0aGUgQ291bmNpbCBv
ZiBXZXN0aW4KICAgICAgICBub3cgYWx3YXlzIGFwcGVhcnMsIGJ1dCB0aGUgZXhhY3QgdHVybiBkZXBl
bmRzIG9uIHRoZSBsZW5ndGggb2YKICAgICAgICBHZXJyaWNrJ3MgZGVmZW5zZS4KICAgICogVW5kZXIg
dGhlIEJ1cm5pbmdzIFN1bnM6ICAgICAgCiAgICAgICogQWxsIGtub3duIGJ1Z3MgKGUuZy4gaW4gS2Vy
YXR1cidzIGFwcGVhcmFuY2VzIGFuZCByZWxhdGVkIHRvIEthbGVoJ3MKICAgICAgICBBTUxBcykgaGF2
ZSBiZWVuIGZpeGVkLiAKICAgICAgKiBHYXJhayBub3cgZ2V0cyBpbnRvIGEgZHVlbCBvZiBjaGFtcGlv
bnMgaW4gIkEgU3RpcnJpbmcgSW4gVGhlIE5pZ2h0Ii4KICAgICAgKiBUaGUgUXVlbm90aCBlbGYgZ3Jh
cGhpY3MgaGF2ZSBiZWVuIHJlZnJlc2hlZDsgbW9zdCBvZiB0aGVpciBzcHJpdGVzCiAgICAgICAgbm93
IG1hdGNoIHRoZSBzaXplIG9mIG90aGVyIDIuMCBzcHJpdGVzIGFuZCBoYXZlIGJlZW4gdGVhbS1jb2xv
cmVkLgogICAgKiBPbmx5IHRoZSBuZXcgZ29sZCBjYXJyeW92ZXIgc3lzdGVtIGlzIG5vdyBhdmFpbGFi
bGUgaW4gRGVzY2VudCBJbnRvCiAgICAgIERhcmtuZXNzLCBIZWlyIHRvIHRoZSBUaHJvbmUsIFNjZXB0
ZXIgb2YgRmlyZSwgU29uIG9mIHRoZSBCbGFjayBFeWUgYW5kCiAgICAgIFRoZSBTb3V0aCBHdWFyZC4K
CiAgKiBFZGl0b3IyCiAgICAqIGNoYW5nZWQgdGhlIGJhc2UtdGVycmFpbiBrZXkgbW9kaWZpZXIgdG8g
c2hpZnQgZnJvbSBhbHQuCiAgICAqIEFkZGVkIGJhc2ljIG1hc2sgYXBwbHlpbmcgZmVhdHVyZS4KICAg
ICogQWRkZWQgYmFzaWMgbWFzayBjcmVhdGlvbiAoImRpZmYiKSBmZWF0dXJlLgogICAgKiBOZXcgbXVs
dGlwbGUgZG9jdW1lbnQgaW50ZXJmYWNlLCBhbGxvd3MgbW9yZSB0aGFuIG9uZSBtYXAgdG8gYmUgb3Bl
biBhdCB0aGUKICAgICAgc2FtZSB0aW1lLiBFeHBlcmltZW50YWwsIGNhbiBiZSB0dXJuZWQgb2ZmIGlu
IHRoZSBlZGl0b3Igc2V0dGluZ3MgZGlhbG9nLgoKICAqIEdyYXBoaWNzCiAgICAqIE5ldyBvciB1cGRh
dGVkIHVuaXQgZnJhbWVzOiBUcm9sbCBTaGFtYW4sIE5hZ2EgRmlnaHRlci4KICAgICogTmV3IGFuaW1h
dGlvbnM6IERlYXRoYmxhZGUgaWRsZSwgT3JjaXNoIEFzc2Fzc2luIGlkbGUsIE1hZ2UgbWFnaWMgbWlz
c2lsZSwKICAgICAgU2lsdmVyIE1hZ2UgbWFnaWMgbWlzc2lsZSBhbmQgdGVsZXBvcnQuCgogICogTGFu
Z3VhZ2UgYW5kIHRyYW5zbGF0aW9ucwogICAgKiB1cGRhdGVkIHRyYW5zbGF0aW9uczogQ2F0YWxhbiwg
Q3plY2gsIERhbmlzaCwgRHV0Y2gsIEZpbm5pc2gsIEdhbGljaWFuLAogICAgICBHZXJtYW4sIEh1bmdh
cmlhbiwgSXRhbGlhbiwgTGl0aHVhbmlhbiwgUmFjdiwgU2xvdmFrLCBTcGFuaXNoLCBUdXJraXNoCiAg
ICAqIG5ldyB0cmFuc2xhdGlvbnM6IFZhbGVuY2lhbiAodGhlIHByZXZpb3VzIG5vbi1zdGFuZGFyZCB0
cmFuc2xhdGlvbiBoYXMKICAgICAgYmVlbiByZW5hbWVkIHRvIFJBQ1YpLgoKICAqIE11bHRpcGxheWVy
CiAgICAqIE5ldyBtdWx0aXBsYXllciBtYXA6IDRwIFVuZGVyd29ybGQuCiAgICAqIFJldmlzZWQgbWFw
czogQ2F2ZXMgb2YgdGhlIEJhc2lsaXNrLCBIb3Juc2hhcmsgSXNsYW5kLCBTaWx2ZXJoZWFkCiAgICAg
IENyb3NzaW5nLCBTdWxsYXMgUnVpbnMsIFdlbGR5biBDaGFubmVsLCBBbGlyb2sgTWFyc2gsIElzbGFu
ZCBvZiB0aGUKICAgICAgSG9yYXRpaSwgQ2FzdGxlIEhvcHBpbmcgSXNsZSwgS2luZyBvZiB0aGUgSGls
bCwgVGhlIFdpbGRlcmxhbmRzLgoKICAqIFVuaXQgY2hhbmdlcyBhbmQgYmFsYW5jaW5nCiAgICAqIEFk
ZGVkIHRoZSBEcmVhZCBCYXQgYXMgdGhlIGxldmVsIDIgYWR2YW5jZW1lbnQgZm9yIEJsb29kIEJhdHMu
CiAgICAqIEdhdmUgdGhlIEdvYmxpbiBQaWxsYWdlciB0aGUgc2FtZSBiaXRlIGF0dGFjayBhcyB0aGUg
V29sZiBSaWRlci4KICAgICogVXBkYXRlZCBtb3ZlbWVudCBhbmQgZGVmZW5zZSB2YWx1ZXMgb24gdGhl
IHJlZWYgdGVycmFpbiBmb3IgbWFueSB1bml0cy4KICAgICogQWRkZWQgdGhlICdmZWFybGVzcycgdHJh
aXQgdG8gdGhlIEhlYXZ5IEluZmFudHJ5bWFuIGxpbmUuCgogICogTWlzY2VsbGFuZW91cyBhbmQgYnVn
Zml4ZXMKICAgICogVGhlcmUgaXMgYSBuZXcgcmV2aXNpb24gb2YgdGhlIG1haW4gV2Vzbm90aCBtYXAg
d2l0aCBtb3JlIHBsYWNlbmFtZXMKICAgICAgb24gaXQuCiAgICAqIFRoZSBleGNlc3NpdmUgQUkgY2F1
dGlvdXNuZXNzIHRoYXQgYWZmbGljdGVkIDEuNS41IGhhcyBiZWVuIGZpeGVkLgogICAgICBBbHNvLCB0
aGUgYWxnb3JpdGhtcyBmb3IgbGVhZGVyIG1vdmVtZW50IGFyZSBzaWduaWZpY2FudGx5IGJldHRlci4K
ClZlcnNpb24gMS41LjU6CiAgKiBDYW1wYWlnbnMKICAgICogQSBuZXcgZXhwZXJpbWVudGFsIGdvbGQg
Y2FycnlvdmVyIHN5c3RlbSBpcyBub3cgc3VwcG9ydGVkIGluIEhlaXIgdG8gdGhlCiAgICAgIFRocm9u
ZSwgU2NlcHRyZSBvZiBGaXJlIGFuZCBEZXNjZW50IGludG8gRGFya25lc3M6IHRoZSBjaG9pY2UgYXBw
ZWFycyBpbgogICAgICB0aGUgZGlmZmljdWx0eSBsZXZlbCBtZW51IHdoZW4gc3RhcnRpbmcgdGhlIGNh
bXBhaWduLgoKICAgICogU29uIG9mIHRoZSBCbGFjayBFeWUKICAgICAgKiBOZXcgcG9ydHJhaXRzIGZv
ciBBbCdCcm9jaywgRmxhcidUYXIgYW5kIEhvd2dhcnRoLgoKICAgICogVHdvIEJyb3RoZXJzCiAgICAg
ICogUmV3cml0ZSB0byBpbmNsdWRlIHN0b3J5IHNjcmVlbnMgYnkgU3RlZmFuLgogICAgICAqIEltcHJv
dmVkIHNjZW5hcmlvIHRleHRzIGFuZCBkaWFsb2dzLgoKICAqIEVkaXRvcjIKICAgICogQWxsb3cgY2hh
bmdpbmcgdGhlIGRpc3BsYXkgdGltZSBvZiBkYXkgZnJvbSBhIHByZXNldCBsaXN0IG9yIHRvIGN1c3Rv
bQogICAgICB2YWx1ZXMgdmlhIHNsaWRlcnMsIGF2YWlsYWJsZSBpbiB0aGUgbmV3IGVkaXRvciBzZXR0
aW5ncyBkaWFsb2cuCiAgICAqIFJlbW92ZWQgbWFwIGZsaXBwaW5nIGZlYXR1cmUuIEFkZGVkIGNsaXBi
b2FyZCBmbGlwcGluZyBpbnN0ZWFkLCB3aGljaAogICAgICB3b3JrcyBtdWNoIG1vcmUgcmVsaWFibHku
CiAgICAqIEFkZGVkIC0tbG9hZCBzdXBwb3J0IGZvciAtZSBjb21tYW5kIGxpbmUgb3B0aW9uLiBMb2Fk
cyB0aGUgbWFwIGZpbGUKICAgICAgd2l0aCB0aGUgZ2l2ZW4gZmlsZW5hbWUuCgogICogTWFwIGVkaXRv
cgogICAgKiBSZW1vdmVkIHdlc25vdGgtZWRpdG9yLiBVc2UgZWRpdG9yMi4KCiAgKiBMYW5ndWFnZSBh
bmQgdHJhbnNsYXRpb25zCiAgICAqIHVwZGF0ZWQgdHJhbnNsYXRpb25zOiBDemVjaCwgRmlubmlzaCwg
RnJlbmNoLCBHYWxpY2lhbiwgR2VybWFuLCBIdW5nYXJpYW4sCiAgICAgIExpdGh1YW5pYW4sIFBvbGlz
aCwgU2xvdmFrLCBUdXJraXNoLCBWYWxlbmNpYW4uCgogICogTXVsdGlwbGF5ZXIKICAgICogUmV2aXNl
ZCBtYXBzOiBGYWxsZW5zdGFyIExha2UsIDJwIEhhbWxldHMsIEhvcm5zaGFyayBJc2xhbmQsCiAgICAg
IFRoZSBGcmVlbGFuZHMsIENhc3RsZSBIb3BwaW5nIElzbGUuCiAgICAgKiBJbiBkZWZhdWx0IGVyYSwg
YWxsIGxlYWRlcnMgd2l0aCA0IE1QIG5vdyByZWNlaXZlIHRoZSBxdWljayB0cmFpdC4KCiAgKiBVbml0
IGNoYW5nZXMgYW5kIGJhbGFuY2luZwogICAgKiBNYWRlIHVuaXRzIHdpdGggdGhlIGhlYWx0aHkgdHJh
aXQgdGFrZSBhIHF1YXJ0ZXIgbGVzcyBkYW1hZ2UgZnJvbSBwb2lzb24uCiAgICAqIEluY3JlYXNlZCB0
aGUgJ3NtYWxsZmx5JyBtb3ZlbWVudCBjb3N0IG92ZXIgZnVuZ3VzIGZyb20gMSB0byAyLgoJKiBDaGFu
Z2VkIHRoZSByYWNlIG9mIHRoZSBXb2xmIFJpZGVyIGxpbmUgZnJvbSBnb2JsaW4gdG8gd29sZi4KCSog
QWRkZWQgdGhlIHRyYWl0cyB3ZWFrLCBzbG93IGFuZCBkaW0gYW5kIG1hZGUgdGhlIGdvYmxpbiByYWNl
IHVzZSB0aGVtLgoJKiBNYWRlIHRoZSBnb2JsaW4gcmFjZSBnZXQgMSByYW5kb20gdHJhaXQgaW5zdGVh
ZCBvZiAyLgoJKiBJbmNyZWFzZWQgdGhlIG1vdmVtZW50IG9mIHRoZSBHb2JsaW4gU3BlYXJtYW4gbGlu
ZSBmcm9tIDQgdG8gNS4KCSogSW5jcmVhc2VkIHRoZSBtZWxlZSBhdHRhY2sgb2YgdGhlIEdvYmxpbiBT
cGVhcm1hbiBmcm9tIDQtMyB0byA2LTMuCgkqIEluY3JlYXNlZCB0aGUgbWVsZWUgYXR0YWNrIG9mIHRo
ZSBHb2JsaW4gSW1wYWxlciBmcm9tIDctMyB0byA4LTMuCgkqIEluY3JlYXNlZCB0aGUgbWVsZWUgYXR0
YWNrIG9mIHRoZSBHb2JsaW4gUm91c2VyIGZyb20gNi0zIHRvIDctMy4KCiAgKiBBSQogICAgKiBNYWRl
IGRlZmF1bHQgQUkgdG8gcGxheSBiZXR0ZXIgaW4gbXVsdGlwbGF5ZXIgbWFwcy4KCiAgKiBVc2VyIGlu
dGVyZmFjZQogICAgKiBBbGxvd2VkIHRoZSAvZnJpZW5kLCAvaWdub3JlIGFuZCAvcmVtb3ZlIGNvbW1h
bmRzIHRvIHVzZQogICAgICBsaXN0cyAoRlIgIzc0OTIpIGFuZCB3aWxkY2FyZHMuCiAgICAqIEFkZGVk
IGEgZmVhdHVyZSB0byBkcmF3IGhleCBjb29yZGluYXRlcyBhbmQvb3IgdGVycmFpbiBjb2RlIG9uIGV2
ZXJ5IGhleC4KICAgICAgQXZhaWxhYmxlIGluLWdhbWUgdmlhIDpzYyBhbmQgOnRjIGNvbW1hbmRzLCBh
bmQgaW4gZWRpdG9yMidzIG1lbnUuCiAgICAqIE1ha2Ugc3VyZSB0aGUgYXR0YWNrIGluZGljYXRvciBp
cyBuZXZlciBvYnNjdXJlZCBieSB0aGUgdGVycmFpbi4KClZlcnNpb24gMS41LjQ6CiAgKiBFZGl0b3Iy
CiAgICAqIFJvdGF0ZSBjbGlwYm9hcmQgNjAgZGVncmVlcyBjbG9ja3dpc2Ugb3IgY291bnRlci1jbG9j
a3dpc2UsIGN0cmwrcgogICAgICBvciBjdHJsK3NoaWZ0K3IgcmVzcGVjdGl2ZWx5IChjbWQgaW5zdGVh
ZCBvZiBjdHJsIG9uIE1hYykuIEFjdGl2ZQogICAgICBpbiB0aGUgInBhc3RlIiBtb2RlLgogICAgKiBB
IGRyYWcgb3BlcmF0aW9uIG9ubHkgY3JlYXRlcyBvbmUgdW5kbyBhY3Rpb24gaW5zdGVhZCBvZiBtYW55
LgogICAgICBVc2UgdGhlIG5ldyAicGFydGlhbCB1bmRvIiBmZWF0dXJlIChkZWZhdWx0IGhvdGtleSBj
dHJsK3osIGNtZCt6CiAgICAgIG9uIE1hYykgdG8gZ2V0IHRoZSBvbGQgYmVoYXZpb3VyLCB3aGVuIHlv
dSB3YW50IHRvIG9ubHkgdW5kbyBhIHBhcnQKICAgICAgb2YgYSBwYWludC1kcmFnIG9yIHNlbGVjdC1k
cmFnLiBBZnRlciB0aGUgYWN0aW9ucyBhcmUgc3BsaXQgdGhpcyB3YXkKICAgICAgdGhleSBhcmUgbmV2
ZXIgY29tYmluZWQgYWdhaW4uCiAgICAqIE1vcmUgdmlzaWJsZSBzZWxlY3Rpb24uCiAgICAqIERpZmZl
cmVudCBtYXAgZ2VuZXJhdG9ycyBjYW4gYmUgdXNlZCBpbiBtYXAgLT4gZ2VuZXJhdGUgbWFwIChGUiAj
Mzk1MCkKCiAgKiBMYW5ndWFnZSBhbmQgdHJhbnNsYXRpb25zCiAgICAqIHVwZGF0ZWQgdHJhbnNsYXRp
b25zOiBDaGluZXNlIChUcmFkaXRpb25hbCksIEN6ZWNoLCBGcmVuY2gsIEdhbGljaWFuLAogICAgICBH
ZXJtYW4sIEh1bmdhcmlhbiwgSXRhbGlhbiwgTGl0aHVhbmlhbiwgUG9saXNoLgoKICAqIE11c2ljIGFu
ZCBzb3VuZCBlZmZlY3RzOgogICAgKiBBZGRlZCBhIG5ldyBtdXNpYyB0cmFjayAiVGhlIERhbmdlcm91
cyBTeW1waG9ueSIgYnkgR2lhbm1hcmNvIExlb25lLgoKICAqIFVuaXQgY2hhbmdlcyBhbmQgYmFsYW5j
aW5nCiAgICAqIE1hZGUgdW5pdHMgd2l0aCB0aGUgaGVhbHRoeSB0cmFpdCB0YWtlIGhhbGYgdGhlIGRh
bWFnZSBmcm9tIHBvaXNvbi4KICAgICogRGVjcmVhc2VkIHRoZSByYW5nZWQgYXR0YWNrIG9mIHRoZSBC
b3dtYW4gZnJvbSA3LTMgdG8gNi0zLgogICAgKiBBZGRlZCB0aGUgbWFya3NtYW4gc3BlY2lhbCB0byB0
aGUgcmFuZ2VkIGF0dGFjayBvZiB0aGUgT3JjaXNoIEFzc2Fzc2luCiAgICAgIGxpbmUuCiAgICAqIERl
Y3JlYXNlZCB0aGUgbWVsZWUgYXR0YWNrIG9mIHRoZSBPcmNpc2ggQXNzYXNzaW4gZnJvbSA4LTEgdG8g
Ny0xLgogICAgKiBEZWNyZWFzZWQgdGhlIG1lbGVlIGF0dGFjayBvZiB0aGUgT3JjaXNoIFNsYXllciBm
cm9tIDEwLTIgdG8gOS0yLgogICAgKiBJbmNyZWFzZWQgdGhlIGNvc3Qgb2YgdGhlIFdhbGtpbmcgQ29y
cHNlIGZyb20gNyB0byA4LgogICAgKiBJbmNyZWFzZWQgdGhlIGNvc3Qgb2YgdGhlIFNvdWxsZXNzIGZy
b20gMTEgdG8gMTMuCgogICogVXNlciBpbnRlcmZhY2U6CiAgICAqIFBhcnRzIG9mIHRoZSBuZXcgd2lk
Z2V0IGxpYmFyeSBhcmUgZGVlbWVkIHN0YWJsZSBlbm91Z2ggZm9yIHRlc3RpbmcgYW5kCiAgICAgIGhh
dmUgYmVlbiBzdGFydGVkIHRvIHJlcGxhY2UgdGhlIG9sZCBjb2RlLgoKICAqIE1pc2NlbGxhbmVvdXMg
YW5kIGJ1ZyBmaXhlcwogICAgKiBOZXcgLS1ub211c2ljIGNvbW1hbmRsaW5lIG9wdGlvbiB0byBkaXNh
YmxlIG11c2ljIGZvciB0aGUgc2Vzc2lvbi4KICAgICogRml4ZWQgT09TIGJ1ZyB3aGVuIGdpdmluZyBj
b250cm9sIGFuZCBoYXZpbmcgbW92ZSBpbiB1bmRvIHN0YWNrLgoKICAqIENhbXBhaWducwogICAgKiBU
aGUgSGFtbWVyIE9mIFRodXJzYWdhbgogICAgICAqICdNYWdlcyBhbmQgRHJha2VzJyBhbmQgJ0ZlYXIn
IGhhdmUgYmVlbiByZXR1bmVkIGFuZCBhcmUgbm93CiAgICBzb21ld2hhdCBtb3JlIGNoYWxsZW5naW5n
LgogICAgICAqICdUaGUgVW5kZXJsZXZlbHMnIGhhcyBzb21lIGZpeGVzIHRvIHRoZSB0aW1pbmcgb2Yg
d2hlbiBiYWQtZ3V5CiAgICBzaWRlcyBnZXQgYWN0aXZhdGVkLiAgVGhpcyBzaG91bGQgbWFrZSB0aGUg
bGFzdCBiYXR0bGUgbW9yZSBvZgogICAgYSBjbGltYXguCgpWZXJzaW9uIDEuNS4zOgogICogQ2FtcGFp
Z25zCiAgICAqIERlc2NlbnQgaW50byBEYXJrbmVzcwogICAgICAqIE5ldyBncmFwaGljcyBmb3IgQXBw
cmVudGljZSBOZWNyb21hbmNlciBhbmQgRGFyayBNYWdlLgogICAgICAqIENoYW5nZWQgaG93IHRoZSBp
Y2UgYnJlYWthZ2Ugd29ya3MgaW4gJ0JlZ2lubmluZyBvZiB0aGUgUmV2ZW5nZScuCiAgICAgICogTmV3
IGluZG9vciBtYXBzIGZvciAnQSBTbWFsbCBGYXZvcicgcGFydHMgMiBhbmQgMy4KICAgICAgKiBDaGFu
Z2VkIGhvdyB0aGUgYmVnaW5uaW5nIG9mIHRoZSBzY2VuYXJpbyAnRGVzY2VudCBpbnRvIERhcmtuZXNz
JyB3b3Jrcy4KICAgICAgKiBNYW55IG1pbm9yIGZpeGVzIGFuZCB0d2Vha3MgdG8gdmFyaW91cyBzY2Vu
YXJpb3MuCiAgICAqIFNjZXB0cmUgb2YgRmlyZQogICAgICAqIEZpeGVkIGEgY29vcmRpbmF0ZSBidWcg
dGhhdCBjYXVzZWQgJ0hpbGxzIG9mIHRoZSBTaG9yYmVhciBDbGFuJyB0byBub3QKICAgICAgICBlbmQg
d2hlbiBpdCB3YXMgc3VwcG9zZWQgdG8uCiAgICAgICogRml4ZWQgYSBidWcgdGhhdCBhbGxvd2VkIG9u
ZSB0byBmaW5pc2ggJ1RoZSBEcmFnb24nIGJ5IGRlZmVhdGluZyBib3RoCiAgICAgICAgZW5lbXkgbGVh
ZGVycy4KICAgICogU29uIG9mIHRoZSBCbGFjayBFeWUKICAgICAgKiBOZXcgcG9ydHJhaXRzIGZvciBJ
bmFyaXgsIEpldHRvIGFuZCB0aGUgb2xkIG9yY2lzaCBzaGFtYW4uCiAgICAgICogRml4ZWQgdGhlIHNo
YW1hbnMgbm90IGdldHRpbmcgcmVtb3ZlZCBmcm9tIHRoZSByZWNhbGwgbGlzdCB3aGVuIHRoZXkKICAg
ICAgICBzaG91bGQuCiAgICAgICogUmV3b3JrZWQgdGhlIHNjZW5hcmlvcyAnQ2l2aWwgV2FyJyBhbmQg
J0Nvd2FyZCcuCgogICogRWRpdG9yMgogICAgKiBFZGl0b3IyIGlzIGEgcmVwbGFjZW1lbnQgZm9yIHRo
ZSBvbGQgZWRpdG9yLiBJdCBpcyBsYXVuY2hlZCBmcm9tCiAgICAgIHdpdGhpbiB0aGUgZ2FtZTogIkVk
aXRvciIgYnV0dG9uIGluIHRoZSB0aXRsZSBzY3JlZW4gb3IgY29tbWFuZAogICAgICBsaW5lICItZSIg
b3IgIi0tZWRpdG9yIiBvcHRpb24uIFRoZSBpbnRlcmZhY2UgaXMgbGFyZ2VseSB1bmNoYW5nZWQuCiAg
ICAqIFRoZSBnYW1lIG11c3QgYmUgY29tcGlsZWQgd2l0aCBlZGl0b3IyIHN1cHBvcnQgZm9yIHRoaXMg
dG8gd29yay4gU2VlCiAgICAgIFJFTEVBU0VfTk9URVMgZm9yIGRldGFpbHMuCiAgICAqIFNlZSBodHRw
Oi8vd3d3Lndlc25vdGgub3JnL3dpa2kvRWRpdG9yMiBmb3IgZGV0YWlscyBhbmQga25vd24gaXNzdWVz
LgogICAgKiBZb3UgY2FuIGNvbnRpbnVlIHRvIHVzZSB0aGUgb2xkIGVkaXRvciBieSBsYXVuY2hpbmcg
d2Vzbm90aF9lZGl0b3IKICAgICAgbGlrZSB5b3UgZGlkIHNvIGZhci4gTmV3IGZlYXR1cmVzLCBob3dl
dmVyLCBhcmUgbXVjaCBtb3JlIGxpa2VseSB0bwogICAgICBhcHBlYXIgaW4gZWRpdG9yMi4KCiAgKiBM
YW5ndWFnZSBhbmQgdHJhbnNsYXRpb25zCiAgICAqIHVwZGF0ZWQgdHJhbnNsYXRpb25zOiBDaGluZXNl
IChUcmFkaXRpb25hbCksIERhbmlzaCwgRmlubmlzaCwgR2FsaWNpYW4sCiAgICAgIEdlcm1hbiwgSXRh
bGlhbiwgTGF0dmlhbiwgTGl0aHVhbmlhbiwgUG9saXNoLCBSdXNzaWFuLCBTbG92YWssIFNwYW5pc2gu
CgogICogTXVsdGlwbGF5ZXIKICAgICogUmV2aXNlZCBtYXBzOiBDYXZlcyBvZiB0aGUgQmFzaWxpc2ss
IERlbiBvZiBPbmlzLCBGYWxsZW5zdGFyIExha2UsCiAgICAgIFNpbHZlcmhlYWQgQ3Jvc3NpbmcsIFN1
bGxhcyBSdWlucywgVGhlIEZyZWVsYW5kcywgQWxpcm9rIE1hcnNoLCBJc2xhbmQgb2YKICAgICAgdGhl
IEhvcmF0aWksIDNwIE1vcml0dXJpLCBCbHVlIFdhdGVyIFByb3ZpbmNlLCA0cCBIYW1sZXRzLCBMYWdv
b24sCiAgICAgIDRwIE1vcml0dXJpLCBUaGUgV2lsZGVybGFuZHMsIFdhdGVybG9vIFN1bnNldAogICAg
KiBSZW1vdmVkIHRoZSAiR3JlYXQgV2FyIiBlcmEuCgogICogTXVzaWMgYW5kIHNvdW5kIGVmZmVjdHMK
ICAgICogU3BlY2lhbCBtdXNpYyBpcyBwbGF5ZWQgb24gcGxheWVyIHZpY3RvcnkvZGVmZWF0LgoKVmVy
c2lvbiAxLjUuMjoKICAqIENhbXBhaWducwogICAgKiBTb24gb2YgdGhlIEJsYWNrIEV5ZQogICAgICAq
IE5ldyBzZXQgb2YgcG9ydHJhaXQgYXJ0LgogICAgICAqIEluICdCbGFjayBGbGFnJywgdGhlcmUncyBu
b3cgc2V2ZXJhbCBnYWxsZW9ucyB0cmFuc3BvcnRpbmcgZW5lbWllcyB0bwogICAgICAgIHRoZSBiZWFj
aCwgYW5kIG5vIHdhdGNoIHRvd2Vycy4KICAgICAgKiBJbiAnU2F2aW5nIEluYXJpeCcsIHlvdSBjYW4g
bm93IG1vcmUgcHJlY2lzZWx5IGNvbnRyb2wgd2hlbiB5b3UgZGVzdHJveQogICAgICAgIHRoZSBicmlk
Z2UuCiAgICAgICogTWFueSBhc3NvcnRlZCBzbWFsbCB0d2Vha3MgdG8gbW9zdCBzY2VuYXJpb3MuCiAg
ICAgICogV2hlbiBsZWFkaW5nIHRoZSBHcmVhdCBIb3JkZSwgYWxsIHVuaXRzIG5vdyByZXF1aXJlIDEg
bGVzcyB1cGtlZXAuCgogICogTGFuZ3VhZ2UgYW5kIHRyYW5zbGF0aW9ucwogICAgKiBuZXcgdHJhbnNs
YXRpb246IExhdHZpYW4uCiAgICAqIHVwZGF0ZWQgdHJhbnNsYXRpb25zOiBBcmFiaWMsIENhdGFsYW4s
IENoaW5lc2UgKFRyYWRpdGlvbmFsKSwgQ3plY2gsCiAgICAgIEZpbm5pc2gsIEZyZW5jaCwgR2VybWFu
LCBHcmVlaywgSXRhbGlhbiwgTGl0aHVhbmlhbiwgUnVzc2lhbiwgU2VyYmlhbiwKICAgICAgU2xvdmFr
LgoKICAqIFVuaXQgY2hhbmdlcyBhbmQgYmFsYW5jaW5nCiAgICAqIEluY3JlYXNlZCB0aGUgcmFuZ2Vk
IGF0dGFjayBvZiB0aGUgQm93bWFuIGZyb20gNi0zIHRvIDctMy4KICAgICogRGVjcmVhc2VkIHRoZSBt
ZWxlZSBhdHRhY2sgb2YgdGhlIEJvd21hbiBmcm9tIDYtMiB0byA0LTIuCiAgICAqIERlY3JlYXNlZCB0
aGUgY29zdCBvZiB0aGUgQm93bWFuIGZyb20gMTUgdG8gMTQuCiAgICAqIEluY3JlYXNlZCB0aGUgY29s
ZCByZXNpc3RhbmNlIG9mIHRoZSBGZW5jZXIgbGluZSBmcm9tIDAlIHRvIDEwJS4KICAgICogRGVjcmVh
c2VkIHRoZSAnb3JjaXNoZm9vdCcgbW92ZW1lbnQgY29zdCBvdmVyIGZyb3plbiBmcm9tIDMgdG8gMi4K
CiAgKiBVc2VyIGludGVyZmFjZQogICAgKiBJbiBtdWx0aXBsYXllciBsb2JieSwgYWxsIHVuaXQncyBp
bWFnZXMgYXJlIG5vdyB0ZWFtIGNvbG9yZWQuCiAgICAqIEFkZCBhIGNvbHVtbiBmb3IgdHJhaXRzIGlu
IHRoZSByZWNhbGwgZGlhbG9nLgogICAgKiBBZGQgYSBmaWx0ZXIgdGV4dGJveCBpbiB0aGUgcmVjYWxs
IGRpYWxvZy4KICAgICogVGhlIHBhdGhmaW5kaW5nIG5vdyBhbHdheXMgcHJlZmVyIHN0cmFpZ2h0IHBh
dGggYW5kIGlzIGFsc28gbW9yZQogICAgICBzdGFibGUgYmV0d2VlbiBsaXR0bGUgbW91c2UncyBtb3Zl
cy4KICAgICogQWRkLW9uIHB1Ymxpc2gvZGVsZXRlIG9wdGlvbnMgaGF2ZSBub3cgc3BlY2lhbCBpY29u
cyBhbmQgY29sb3JzLgogICAgKiBuZXcgZGVidWcgY29tbWFuZCAiOmNob29zZV9sZXZlbCIgb3IgIjpj
bCIgdG8gZGlyZWN0bHkgZ28gdG8gYSBzY2VuYXJpby4KCiAgKiBNaXNjZWxsYW5lb3VzIGFuZCBidWcg
Zml4ZXMKICAgICogSW4gZGVidWctbW9kZSwgTWlzc2luZyBpbWFnZXMgYXJlIG5vdyByZXBsYWNlZCBi
eSBhICJtZW4tYXQtd29yayIgc2lnbiBhbmQKICAgICAgaW4gaGVscCBicm9rZW4gaHlwZXJsaW5rcyBh
cmUgc2hvd24gaW4gcmVkLgogICAgKiBGaXggYW4gb2xkIHBhdGhmaW5kaW5nIGJ1ZyBjYXVzaW5nIGEg
aW5jb25zaXN0ZW5jeSBiZXR3ZWVuIHRoZSBwYXRoIHVzZWQKICAgICAgYW5kIHRoZSBvbmUgc2hvd2Vk
IHRvIG90aGVycyBwbGF5ZXJzLiBBbHNvIHZhbGlkIGluIHJlcGxheS4KICAgICogRml4IG1pc3Npbmcg
bGFzdCBwdWJsaXNoL3JlbW92ZSBhZGQtb24gb3B0aW9uCgpWZXJzaW9uIDEuNS4xOgogICogQ2FtcGFp
Z25zCiAgICAqIEhlaXIgdG8gdGhlIFRocm9uZQogICAgICAqIEFsbG93ZWQgS2FsZW56IHRvIHRha2Ug
dGhlIGZsYW1pbmcgc3dvcmQuCiAgICAqIFRoZSBSaXNlIG9mIFdlc25vdGgKICAgICAgKiBGaXhlZCB0
aGUgV2VzZm9sayBPdXRjYXN0IGxpbmUncyBkaXN0cmFjdCBhYmlsaXR5IG5vdCB3b3JraW5nLgogICAg
ICAqIEluY3JlYXNlZCB0aGUgZ29sZCB5b3UgZ2V0IGZyb20gbm90IGxldHRpbmcgTGFkeSBPdXRsYXcg
am9pbiB5b3UgaW4gdGhlCiAgICAgICAgc2Vjb25kIHNjZW5hcmlvLgogICAgKiBBbiBPcmNpc2ggSW5j
dXJzaW9uCiAgICAgICogbmV3IHN0b3J5bGluZSBhbmQgZGlhbG9ndWVzIHRvIHNjZW5hcmlvIDEKICAg
ICAgKiBuZXcgc3RvcnlsaW5lIGFuZCBkaWFsb2d1ZXMgdG8gc2NlbmFyaW8gMgogICAgICAqIG1hZGUg
dGhlIEFJIGRvIG1peGVkIHJlY3J1aXRzIGluIHNjZW5hcmlvIDIKICAgICAgKiBuZXcgc3RvcnlsaW5l
IGFuZCBkaWFsb2d1ZXMgdG8gc2NlbmFyaW8gMwogICAgICAqIGFkZGVkIGEgZm9ybSBvZiBnb2xkIGJv
bnVzIHRvIHNjZW5hcmlvIDMKICAgICAgKiBuZXcgc3RvcnlsaW5lIHRvIHNjZW5hcmlvIDQKCiAgKiBH
cmFwaGljcwogICAgKiBOZXcgcG9ydHJhaXRzOiBSZWQgTWFnZXMsIERhcmsgQWRlcHRzLCBXaGl0ZSBN
YWdlcwoKICAqIExhbmd1YWdlIGFuZCB0cmFuc2xhdGlvbnMKICAgICogbmV3IHRyYW5zbGF0aW9uczog
QXJhYmljLCBGcml1bGlhbiwgTWFjZWRvbmlhbgogICAgKiB1cGRhdGVkIHRyYW5zbGF0aW9uczogQ2hp
bmVzZSwgQ3plY2gsIERhbmlzaCwgRHV0Y2gsIEVzdG9uaWFuLCBGaW5uaXNoLAogICAgICBGcmVuY2gs
IEdlcm1hbiwgSHVuZ2FyaWFuLCBJdGFsaWFuLCBKYXBhbmVzZSwgUG9saXNoLCBSdXNzaWFuLCBTZXJi
aWFuLAogICAgICBTbG92YWssIFNwYW5pc2gsIFR1cmtpc2guCgogICogTXVsdGlwbGF5ZXIKICAgICog
UmV2aXNlZCBtYXBzOiBEZW4gb2YgT25pcywgU2FibGVzdG9uZSBEZWx0YSwgVGhlIEZyZWVsYW5kcy4K
ICAgICogUmFpc2VkIHRoZSBkZWZhdWx0IHBlci10dXJuIE1QIHRpbWVyIGJvbnVzIHRvIDYwIHNlY29u
ZHMuCgogICogVW5pdCBjaGFuZ2VzIGFuZCBiYWxhbmNpbmcKICAgICogQ2hhbmdlZCB0aGUgaGVhbHRo
eSB0cmFpdCB0byBnaXZlIDFIUCBhbmQgMUhQIHBlciBsZXZlbCBpbnN0ZWFkIG9mIDJIUC4KICAgICog
RGVjcmVhc2VkIHRoZSByYW5nZWQgYXR0YWNrIG9mIHRoZSBNYWdlIG9mIExpZ2h0IGZyb20gMTUtMyB0
byAxMi0zLgogICAgKiBEZWNyZWFzZWQgdGhlIG1lbGVlIGF0dGFjayBvZiB0aGUgTWVybWFuIFdhcnJp
b3IgZnJvbSA4LTQgdG8gMTAtMy4KCiAgKiBHYW1lIGVuZ2luZQogICAgKiBBZGRlZCB0aGUgcG9zc2li
aWxpdHkgdG8gc2VlIGFkZC1vbiB0eXBlcyBpbiB0aGUgZG93bmxvYWRzIGRpYWxvZwogICAgICBpZiB0
aGUgYXV0aG9ycyBwcm92aWRlIHN1Y2ggaW5mb3JtYXRpb24KICAgICogUG9pc29uIG5vIGxvbmdlciBw
cmV2ZW50cyBSZXN0aW5nCgogICogVXNlciBpbnRlcmZhY2UKICAgICogVGl0bGVzY3JlZW4gaXMgbm93
IHJhbmRvbWx5IGxvYWRlZC4KICAgICogQWRkIGEgZmlsdGVyIHRleHQgYm94IGZvciB0aGUgIkFkZC1v
bnMiIGFuZCAiQ3JlYXRlIFVuaXQiIGRpYWxvZ3MKICAgICogQWRkIGEgaG90a2V5ICJDdXN0b20gQ29t
bWFuZCIgYW5kIGEgY29tbWFuZCAiY3VzdG9tIDxjb21tYW5kPiIgdG8gYXNzaWduCiAgICAgIGEgY29t
bWFuZCB0byB0aGlzIGhvdGtleS4KICAgICogQWRkIGEgY29tbWFuZCAiYWxpYXMgPG5hbWU+Wz08Y29t
bWFuZD5dIi4gVG8gc2V0IG9yIHNob3cgc2hvcnRlciBhbGlhcyB0bwogICAgICBhIGNvbW1hbmQuCiAg
ICAqIEFkZGVkIGJhY2sgIkhvc3QgTmV0d29yayBHYW1lIiBmZWF0dXJlIHRvIG11bHRpcGxheWVyIG1l
bnUuCgogICogVGVycmFpbnMKICAgICogUmVtb3ZlZCBkdXBsaWNhdGUgdGVycmFpbiB0eXBlIGluIHVu
aXQgaGVscAoKICAqIE1pc2NlbGxhbmVvdXMgYW5kIGJ1ZyBmaXhlcwogICAgKiBGaXhlZCBsb2FkLWdh
bWVzIGRpYWxvZyBub3QgZGlzcGxheWluZyBjb3JyZWN0IGNhbXBhaWduIGluZm8gZm9yCiAgICAgIG5v
bi1jb21wcmVzc2VkIHNhdmVzLgoKVmVyc2lvbiAxLjUuMDoKICAqIEdyYXBoaWNzCiAgICAqIFRlcnJh
aW5zIGNhbiBiZSByZW5kZXJlZCBpbiBmcm9udCBvZiB1bml0cyBhZ2Fpbi4KCiAgKiBMYW5ndWFnZSBh
bmQgdHJhbnNsYXRpb25zCiAgICAqIG5ldyB0cmFuc2xhdGlvbjogQ3JvYXRpYW4uCiAgICAqIHVwZGF0
ZWQgdHJhbnNsYXRpb25zOiBDaGluZXNlLCBDaGluZXNlIChUcmFkaXRpb25hbCksIEN6ZWNoLCBEYW5p
c2gsCiAgICAgIER1dGNoLCBGaW5uaXNoLCBGcmVuY2gsIEdhbGljaWFuLCBHZXJtYW4sIEdyZWVrLCBI
dW5nYXJpYW4sIEl0YWxpYW4sCiAgICAgIExpdGh1YW5pYW4sIEphcGFuZXNlLCBQb2xpc2gsIFJ1c3Np
YW4sIFNlcmJpYW4sIFNsb3ZhaywgU3BhbmlzaCwgU3dlZGlzaCwKICAgICAgVHVya2lzaCwgVmFsZW5j
aWFuLgoKICAqIE1hcCBlZGl0b3IKICAgICogRml4ZWQgbm90IHdvcmtpbmcgIlVwZGF0ZSB0cmFuc2l0
aW9uIiBhbmQgbWFrZSAiRGVsYXkgdHJhbnNpdGlvbiB1cGRhdGUiCiAgICAgIGRpcmVjdGx5IHRyaWdn
ZXIgYW4gdXBkYXRlIHdoZW4gdG9nZ2xlZCBvZmYuCgogICogTXVsdGlwbGF5ZXIKICAgICogQWRkZWQg
bWFwczogSG93bGluZyBHaG9zdCBCYWRsYW5kcy4KICAgICogUmV2aXNlZCBtYXBzOiBTYWJsZXN0b25l
IERlbHRhLCBTdWxsYXMgUnVpbnMsIFNpbHZlcmhlYWQgQ3Jvc3NpbmcsCiAgICAgIFRoZSBGcmVlbGFu
ZHMsIFRoZSBNYW56aXZhbiBUcmFwcy4KICAgICogUmVtb3ZlZCBtYXBzOiBBbW9oc2FkIENhbGRlcmEu
CiAgICAqIFJlbW92ZWQgdGhlICJXZXNib3dsIiBzY2VuYXJpby4KICAgICogQWRkZWQgdGhlICJBIE5l
dyBMYW5kIiBzY2VuYXJpbyBieSBCb2JfdGhlX01pZ2h0eQoKICAqIFVuaXQgY2hhbmdlcyBhbmQgYmFs
YW5jaW5nCiAgICAqIERlY3JlYXNlZCB0aGUgY29zdCBvZiB0aGUgR2lhbnQgU2NvcnBpb24gZnJvbSAz
MiB0byAyMi4KICAgICogSW5jcmVhc2VkIHRoZSBIUCBvZiB0aGUgRHJha2UgRmxhcmUgZnJvbSA1NCB0
byA1NS4KCiAgKiBVc2VyIGludGVyZmFjZQogICAgKiBTbWFydGVyIHBhdGhmaW5kaW5nOiBpZiBzYW1l
IE1QIGNvc3QsIHByZWZlciB0ZXJyYWlucyB3aXRoIGJldHRlciBkZWZlbnNlCiAgICAgIGFuZCBlbXB0
eSBoZXhlcyAobGVzcyBmcmVxdWVudCBtdWx0aS10dXJuIG1vdmVzIGJsb2NrZWQgYnkgYSBmcmllbmQp
LgogICAgKiBOZXcgZnVsbCBtYXAgc2NyZWVuc2hvdCBmZWF0dXJlIChubyBkZWZhdWx0IGhvdGtleSku
CiAgICAqIFNjcmVlbnNob3RzIHNob3cgYSBwb3AtdXAgd2l0aCB0aGUgdXJsIGFuZCBzaXplIG9mIHRo
ZSBmaWxlIGNyZWF0ZWQuCiAgICAqIFdoZW4gdHJ5aW5nIHRvIGRlZmluZSBhbiBhbHJlYWR5IHVzZWQg
aG90a2V5LCBub3cgdGVsbCB3aGVyZSBpdCdzIHVzZWQuCgogICogTWlzY2VsbGFuZW91cyBhbmQgYnVn
IGZpeGVzCiAgICAqIEZpeGVkIHNocm91ZCBub3QgZGlyZWN0bHkgY2xlYXJlZCBpbiBtaW5pbWFwIGFm
dGVyIGEgbW92ZSthdHRhY2sgYWN0aW9uLgoKA</bytes>
														</object>
														<array class="NSMutableArray" key="NSAttributes">
															<reference ref="109248550"/>
															<dictionary>
																<object class="NSFont" key="NSFont">
																	<string key="NSName">LucidaGrande-Bold</string>
																	<double key="NSSize">12</double>
																	<int key="NSfFlags">16</int>
																</object>
																<object class="NSParagraphStyle" key="NSParagraphStyle" id="246736261">
																	<int key="NSAlignment">3</int>
																	<array key="NSTabStops">
																		<reference ref="997967202"/>
																		<reference ref="900938709"/>
																		<reference ref="517132939"/>
																		<reference ref="268687256"/>
																		<reference ref="289737216"/>
																		<reference ref="638330243"/>
																		<reference ref="946106464"/>
																		<reference ref="19218256"/>
																		<reference ref="552359444"/>
																		<reference ref="28299400"/>
																		<reference ref="99151341"/>
																		<reference ref="73258591"/>
																		<reference ref="272834983"/>
																		<reference ref="305717618"/>
																		<reference ref="546173877"/>
																		<reference ref="824095121"/>
																		<reference ref="25141650"/>
																		<reference ref="689360852"/>
																		<reference ref="704629462"/>
																		<reference ref="671760979"/>
																		<reference ref="480002569"/>
																		<reference ref="460278262"/>
																		<reference ref="74722665"/>
																		<reference ref="505553294"/>
																		<reference ref="208505024"/>
																		<reference ref="840571675"/>
																		<reference ref="433101838"/>
																		<reference ref="664696086"/>
																		<reference ref="291671683"/>
																		<reference ref="419541375"/>
																		<reference ref="773943636"/>
																		<reference ref="215895062"/>
																	</array>
																</object>
															</dictionary>
															<dictionary>
																<object class="NSFont" key="NSFont">
																	<string key="NSName">LucidaGrande-Bold</string>
																	<double key="NSSize">13</double>
																	<int key="NSfFlags">16</int>
																</object>
																<reference key="NSParagraphStyle" ref="246736261"/>
															</dictionary>
														</array>
														<object class="NSMutableData" key="NSAttributeInfo">
															<bytes key="NS.bytes">2QEADgGKFgAOAbMUAA8BoSMADgHBCwAWAYgFABgByQMAGAHTBAAYAeoFABgBjAMAGAGRBgAXAb8GABQB
0QUADgG/CAAOAe8MAA4ByQIADgGRCAAOAd4FAA4BjgcADgGdBwAOAfkVAAwC1gIADwG3BwAPAeMBAA8B
0QUADwGqBAAPAb4KAA4BrwkADgG0DwAOAbcfAA4B3B4ADgH7EQAOAesPAA4BgBAADgGgDgAOAdQQAA4B
1AsAA</bytes>
														</object>
														<nil key="NSDelegate"/>
													</object>
													<array class="NSMutableArray" key="NSTextContainers">
														<reference ref="217334750"/>
													</array>
													<int key="NSLMFlags">6</int>
													<nil key="NSDelegate"/>
												</object>
												<reference key="NSTextView" ref="484579320"/>
												<double key="NSWidth">440</double>
												<int key="NSTCFlags">1</int>
											</object>
											<object class="NSTextViewSharedData" key="NSSharedData">
												<int key="NSFlags">11237</int>
												<int key="NSTextCheckingTypes">0</int>
												<nil key="NSMarkedAttributes"/>
												<reference key="NSBackgroundColor" ref="25551725"/>
												<dictionary key="NSSelectedAttributes">
													<reference key="NSBackgroundColor" ref="536470479"/>
													<reference key="NSColor" ref="855663993"/>
												</dictionary>
												<reference key="NSInsertionColor" ref="476705509"/>
												<dictionary key="NSLinkAttributes">
													<reference key="NSColor" ref="356941961"/>
													<integer value="1" key="NSUnderline"/>
												</dictionary>
												<nil key="NSDefaultParagraphStyle"/>
											</object>
											<int key="NSTVFlags">6</int>
											<string key="NSMaxSize">{897, 1e+07}</string>
											<string key="NSMinize">{223, 91}</string>
											<nil key="NSDelegate"/>
										</object>
									</array>
									<string key="NSFrame">{{1, 1}, {440, 406}}</string>
									<reference key="NSSuperview" ref="524841832"/>
									<reference key="NSNextKeyView" ref="484579320"/>
									<reference key="NSDocView" ref="484579320"/>
									<reference key="NSBGColor" ref="25551725"/>
									<reference key="NSCursor" ref="555687736"/>
									<int key="NScvFlags">4</int>
								</object>
								<object class="NSScroller" id="334279614">
									<reference key="NSNextResponder" ref="524841832"/>
									<int key="NSvFlags">256</int>
									<string key="NSFrame">{{441, 1}, {15, 406}}</string>
									<reference key="NSSuperview" ref="524841832"/>
									<bool key="NSEnabled">YES</bool>
									<reference key="NSTarget" ref="524841832"/>
									<string key="NSAction">_doScroller:</string>
									<double key="NSPercent">0.025707591971126448</double>
								</object>
								<object class="NSScroller" id="385240361">
									<reference key="NSNextResponder" ref="524841832"/>
									<int key="NSvFlags">-2147483392</int>
									<string key="NSFrame">{{-100, -100}, {87, 18}}</string>
									<reference key="NSSuperview" ref="524841832"/>
									<int key="NSsFlags">1</int>
									<reference key="NSTarget" ref="524841832"/>
									<string key="NSAction">_doScroller:</string>
									<double key="NSCurValue">0.82954547621987129</double>
									<double key="NSPercent">0.94565218687057495</double>
								</object>
							</array>
							<string key="NSFrame">{{20, 20}, {457, 408}}</string>
							<reference key="NSSuperview" ref="456192061"/>
							<reference key="NSNextKeyView" ref="1060181361"/>
							<int key="NSsFlags">82</int>
							<reference key="NSVScroller" ref="334279614"/>
							<reference key="NSHScroller" ref="385240361"/>
							<reference key="NSContentView" ref="1060181361"/>
						</object>
					</array>
					<string key="NSFrameSize">{497, 448}</string>
					<reference key="NSSuperview"/>
				</object>
				<string key="NSScreenRect">{{0, 0}, {1440, 878}}</string>
				<string key="NSMaxSize">{1.79769e+308, 1.79769e+308}</string>
			</object>
		</array>
		<object class="IBObjectContainer" key="IBDocument.Objects">
			<array class="NSMutableArray" key="connectionRecords">
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">orderFrontStandardAboutPanel:</string>
						<reference key="source" ref="407535207"/>
						<reference key="destination" ref="658074344"/>
					</object>
					<int key="connectionID">142</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">hideOtherApplications:</string>
						<reference key="source" ref="407535207"/>
						<reference key="destination" ref="960552698"/>
					</object>
					<int key="connectionID">146</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">hide:</string>
						<reference key="source" ref="407535207"/>
						<reference key="destination" ref="953708084"/>
					</object>
					<int key="connectionID">152</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">unhideAllApplications:</string>
						<reference key="source" ref="407535207"/>
						<reference key="destination" ref="408425643"/>
					</object>
					<int key="connectionID">153</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">performMiniaturize:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="39311282"/>
					</object>
					<int key="connectionID">288</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">terminate:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="583710504"/>
					</object>
					<int key="connectionID">292</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">copy:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="1049326683"/>
					</object>
					<int key="connectionID">409</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">paste:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="499588544"/>
					</object>
					<int key="connectionID">414</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">delete:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="658432170"/>
					</object>
					<int key="connectionID">415</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">cut:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="481136155"/>
					</object>
					<int key="connectionID">420</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">selectAll:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="708092569"/>
					</object>
					<int key="connectionID">421</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">performClose:</string>
						<reference key="source" ref="569325114"/>
						<reference key="destination" ref="425262020"/>
					</object>
					<int key="connectionID">459</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">makeKeyAndOrderFront:</string>
						<reference key="source" ref="914236993"/>
						<reference key="destination" ref="299046830"/>
					</object>
					<int key="connectionID">496</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">openHomepage:</string>
						<reference key="source" ref="985693348"/>
						<reference key="destination" ref="716930705"/>
					</object>
					<int key="connectionID">497</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBActionConnection" key="connection">
						<string key="label">makeKeyAndOrderFront:</string>
						<reference key="source" ref="260034545"/>
						<reference key="destination" ref="1072989466"/>
					</object>
					<int key="connectionID">506</int>
				</object>
				<object class="IBConnectionRecord">
					<object class="IBOutletConnection" key="connection">
						<string key="label">delegate</string>
						<reference key="source" ref="506767808"/>
						<reference key="destination" ref="985693348"/>
					</object>
					<int key="connectionID">515</int>
				</object>
			</array>
			<object class="IBMutableOrderedSet" key="objectRecords">
				<array key="orderedObjects">
					<object class="IBObjectRecord">
						<int key="objectID">0</int>
						<array key="object" id="0"/>
						<reference key="children" ref="932824768"/>
						<nil key="parent"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">-2</int>
						<reference key="object" ref="407535207"/>
						<reference key="parent" ref="0"/>
						<string key="objectName">File's Owner</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">-1</int>
						<reference key="object" ref="569325114"/>
						<reference key="parent" ref="0"/>
						<string key="objectName">First Responder</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">-3</int>
						<reference key="object" ref="506767808"/>
						<reference key="parent" ref="0"/>
						<string key="objectName">Application</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">29</int>
						<reference key="object" ref="79934085"/>
						<array class="NSMutableArray" key="children">
							<reference ref="216580393"/>
							<reference ref="343660265"/>
							<reference ref="1043237288"/>
							<reference ref="1072241388"/>
						</array>
						<reference key="parent" ref="0"/>
						<string key="objectName">MainMenu</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">56</int>
						<reference key="object" ref="216580393"/>
						<array class="NSMutableArray" key="children">
							<reference ref="594642970"/>
						</array>
						<reference key="parent" ref="79934085"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">57</int>
						<reference key="object" ref="594642970"/>
						<array class="NSMutableArray" key="children">
							<reference ref="658074344"/>
							<reference ref="953708084"/>
							<reference ref="583710504"/>
							<reference ref="960552698"/>
							<reference ref="700601227"/>
							<reference ref="408425643"/>
							<reference ref="525181201"/>
							<reference ref="716930705"/>
							<reference ref="299046830"/>
							<reference ref="332777180"/>
							<reference ref="1072989466"/>
						</array>
						<reference key="parent" ref="216580393"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">58</int>
						<reference key="object" ref="658074344"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">134</int>
						<reference key="object" ref="953708084"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">136</int>
						<reference key="object" ref="583710504"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">145</int>
						<reference key="object" ref="960552698"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">149</int>
						<reference key="object" ref="700601227"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">150</int>
						<reference key="object" ref="408425643"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">196</int>
						<reference key="object" ref="525181201"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">493</int>
						<reference key="object" ref="716930705"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">494</int>
						<reference key="object" ref="299046830"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">495</int>
						<reference key="object" ref="332777180"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">499</int>
						<reference key="object" ref="1072989466"/>
						<reference key="parent" ref="594642970"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">284</int>
						<reference key="object" ref="343660265"/>
						<array class="NSMutableArray" key="children">
							<reference ref="793167855"/>
						</array>
						<reference key="parent" ref="79934085"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">285</int>
						<reference key="object" ref="793167855"/>
						<array class="NSMutableArray" key="children">
							<reference ref="39311282"/>
						</array>
						<reference key="parent" ref="343660265"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">283</int>
						<reference key="object" ref="39311282"/>
						<reference key="parent" ref="793167855"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">381</int>
						<reference key="object" ref="1043237288"/>
						<array class="NSMutableArray" key="children">
							<reference ref="551261138"/>
						</array>
						<reference key="parent" ref="79934085"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">382</int>
						<reference key="object" ref="551261138"/>
						<array class="NSMutableArray" key="children">
							<reference ref="658432170"/>
							<reference ref="708092569"/>
							<reference ref="481136155"/>
							<reference ref="1049326683"/>
							<reference ref="499588544"/>
						</array>
						<reference key="parent" ref="1043237288"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">384</int>
						<reference key="object" ref="658432170"/>
						<reference key="parent" ref="551261138"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">385</int>
						<reference key="object" ref="708092569"/>
						<reference key="parent" ref="551261138"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">402</int>
						<reference key="object" ref="481136155"/>
						<reference key="parent" ref="551261138"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">403</int>
						<reference key="object" ref="1049326683"/>
						<reference key="parent" ref="551261138"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">408</int>
						<reference key="object" ref="499588544"/>
						<reference key="parent" ref="551261138"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">438</int>
						<reference key="object" ref="1072241388"/>
						<array class="NSMutableArray" key="children">
							<reference ref="472918284"/>
						</array>
						<reference key="parent" ref="79934085"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">439</int>
						<reference key="object" ref="472918284"/>
						<array class="NSMutableArray" key="children">
							<reference ref="425262020"/>
						</array>
						<reference key="parent" ref="1072241388"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">441</int>
						<reference key="object" ref="425262020"/>
						<reference key="parent" ref="472918284"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">194</int>
						<reference key="object" ref="985693348"/>
						<reference key="parent" ref="0"/>
						<string key="objectName">SDLMain</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">253</int>
						<reference key="object" ref="12099763"/>
						<reference key="parent" ref="0"/>
						<string key="objectName">Font Manager</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">485</int>
						<reference key="object" ref="914236993"/>
						<array class="NSMutableArray" key="children">
							<reference ref="143187975"/>
						</array>
						<reference key="parent" ref="0"/>
						<string key="objectName">Window (License)</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">486</int>
						<reference key="object" ref="143187975"/>
						<array class="NSMutableArray" key="children">
							<reference ref="954278164"/>
						</array>
						<reference key="parent" ref="914236993"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">489</int>
						<reference key="object" ref="954278164"/>
						<array class="NSMutableArray" key="children">
							<reference ref="829392622"/>
							<reference ref="821970585"/>
							<reference ref="765850010"/>
						</array>
						<reference key="parent" ref="143187975"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">492</int>
						<reference key="object" ref="829392622"/>
						<reference key="parent" ref="954278164"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">500</int>
						<reference key="object" ref="260034545"/>
						<array class="NSMutableArray" key="children">
							<reference ref="456192061"/>
						</array>
						<reference key="parent" ref="0"/>
						<string key="objectName">Window (Changelog)</string>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">501</int>
						<reference key="object" ref="456192061"/>
						<array class="NSMutableArray" key="children">
							<reference ref="524841832"/>
						</array>
						<reference key="parent" ref="260034545"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">502</int>
						<reference key="object" ref="524841832"/>
						<array class="NSMutableArray" key="children">
							<reference ref="484579320"/>
							<reference ref="334279614"/>
							<reference ref="385240361"/>
						</array>
						<reference key="parent" ref="456192061"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">503</int>
						<reference key="object" ref="484579320"/>
						<reference key="parent" ref="524841832"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">509</int>
						<reference key="object" ref="821970585"/>
						<reference key="parent" ref="954278164"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">510</int>
						<reference key="object" ref="765850010"/>
						<reference key="parent" ref="954278164"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">511</int>
						<reference key="object" ref="334279614"/>
						<reference key="parent" ref="524841832"/>
					</object>
					<object class="IBObjectRecord">
						<int key="objectID">512</int>
						<reference key="object" ref="385240361"/>
						<reference key="parent" ref="524841832"/>
					</object>
				</array>
			</object>
			<dictionary class="NSMutableDictionary" key="flattenedProperties">
				<string key="-3.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="-3.ImportedFromIB2"/>
				<string key="134.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="134.ImportedFromIB2"/>
				<string key="136.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="136.ImportedFromIB2"/>
				<string key="145.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="145.ImportedFromIB2"/>
				<string key="149.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="149.ImportedFromIB2"/>
				<string key="150.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="150.ImportedFromIB2"/>
				<boolean value="YES" key="194.ImportedFromIB2"/>
				<string key="196.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="196.ImportedFromIB2"/>
				<boolean value="YES" key="253.ImportedFromIB2"/>
				<string key="283.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="283.ImportedFromIB2"/>
				<string key="284.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="284.ImportedFromIB2"/>
				<string key="285.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="285.ImportedFromIB2"/>
				<string key="29.IBEditorWindowLastContentRect">{{0, 825}, {261, 20}}</string>
				<string key="29.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="29.ImportedFromIB2"/>
				<string key="381.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="381.ImportedFromIB2"/>
				<string key="382.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="382.ImportedFromIB2"/>
				<string key="384.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="384.ImportedFromIB2"/>
				<string key="385.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="385.ImportedFromIB2"/>
				<string key="402.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="402.ImportedFromIB2"/>
				<string key="403.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="403.ImportedFromIB2"/>
				<string key="408.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="408.ImportedFromIB2"/>
				<string key="438.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="438.ImportedFromIB2"/>
				<string key="439.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="439.ImportedFromIB2"/>
				<string key="441.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="441.ImportedFromIB2"/>
				<string key="485.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="485.ImportedFromIB2"/>
				<string key="486.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="486.ImportedFromIB2"/>
				<string key="489.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="489.ImportedFromIB2"/>
				<string key="492.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="492.ImportedFromIB2"/>
				<string key="493.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="493.ImportedFromIB2"/>
				<string key="494.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="494.ImportedFromIB2"/>
				<string key="495.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="495.ImportedFromIB2"/>
				<string key="499.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="499.ImportedFromIB2"/>
				<string key="500.IBEditorWindowLastContentRect">{{99, 300}, {497, 448}}</string>
				<string key="500.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<string key="500.IBWindowTemplateEditedContentRect">{{99, 300}, {497, 448}}</string>
				<boolean value="YES" key="500.ImportedFromIB2"/>
				<string key="501.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="501.ImportedFromIB2"/>
				<string key="502.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="502.ImportedFromIB2"/>
				<string key="503.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="503.ImportedFromIB2"/>
				<string key="509.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="509.IBShouldRemoveOnLegacySave"/>
				<string key="510.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="510.IBShouldRemoveOnLegacySave"/>
				<string key="511.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="511.IBShouldRemoveOnLegacySave"/>
				<string key="512.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="512.IBShouldRemoveOnLegacySave"/>
				<string key="56.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="56.ImportedFromIB2"/>
				<string key="57.IBEditorWindowLastContentRect">{{12, 632}, {226, 193}}</string>
				<string key="57.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="57.ImportedFromIB2"/>
				<string key="58.IBPluginDependency">com.apple.InterfaceBuilder.CocoaPlugin</string>
				<boolean value="YES" key="58.ImportedFromIB2"/>
			</dictionary>
			<dictionary class="NSMutableDictionary" key="unlocalizedProperties"/>
			<nil key="activeLocalization"/>
			<dictionary class="NSMutableDictionary" key="localizations"/>
			<nil key="sourceID"/>
			<int key="maxID">515</int>
		</object>
		<object class="IBClassDescriber" key="IBDocument.Classes">
			<array class="NSMutableArray" key="referencedPartialClassDescriptions">
				<object class="IBPartialClassDescription">
					<string key="className">FirstResponder</string>
					<string key="superclassName">NSObject</string>
					<object class="IBClassDescriptionSource" key="sourceIdentifier">
						<string key="majorKey">IBUserSource</string>
						<string key="minorKey"/>
					</object>
				</object>
				<object class="IBPartialClassDescription">
					<string key="className">SDLMain</string>
					<string key="superclassName">NSObject</string>
					<object class="NSMutableDictionary" key="actions">
						<string key="NS.key.0">openHomepage:</string>
						<string key="NS.object.0">id</string>
					</object>
					<object class="NSMutableDictionary" key="actionInfosByName">
						<string key="NS.key.0">openHomepage:</string>
						<object class="IBActionInfo" key="NS.object.0">
							<string key="name">openHomepage:</string>
							<string key="candidateClassName">id</string>
						</object>
					</object>
					<object class="IBClassDescriptionSource" key="sourceIdentifier">
						<string key="majorKey">IBProjectSource</string>
						<string key="minorKey">Mac Sources/SDLMain.h</string>
					</object>
				</object>
				<object class="IBPartialClassDescription">
					<string key="className">SDLMain</string>
					<string key="superclassName">NSObject</string>
					<object class="IBClassDescriptionSource" key="sourceIdentifier">
						<string key="majorKey">IBUserSource</string>
						<string key="minorKey"/>
					</object>
				</object>
			</array>
			<array class="NSMutableArray" key="referencedPartialClassDescriptionsV3.2+">
				<object class="IBPartialClassDescription">
					<string key="className">NSObject</string>
					<object class="IBClassDescriptionSource" key="sourceIdentifier">
						<string key="majorKey">IBFrameworkSource</string>
						<string key="minorKey">Growl.framework/Headers/GrowlApplicationBridge.h</string>
					</object>
				</object>
				<object class="IBPartialClassDescription">
					<string key="className">NSObject</string>
					<object class="IBClassDescriptionSource" key="sourceIdentifier">
						<string key="majorKey">IBFrameworkSource</string>
						<string key="minorKey">Print.framework/Headers/PDEPluginInterface.h</string>
					</object>
				</object>
			</array>
		</object>
		<int key="IBDocument.localizationMode">0</int>
		<string key="IBDocument.TargetRuntimeIdentifier">IBCocoaFramework</string>
		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencies">
			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.macosx</string>
			<integer value="1050" key="NS.object.0"/>
		</object>
		<object class="NSMutableDictionary" key="IBDocument.PluginDeclaredDependencyDefaults">
			<string key="NS.key.0">com.apple.InterfaceBuilder.CocoaPlugin.macosx</string>
			<integer value="1040" key="NS.object.0"/>
		</object>
		<bool key="IBDocument.PluginDeclaredDependenciesTrackSystemTargetVersion">YES</bool>
		<string key="IBDocument.LastKnownRelativeProjectPath">../Wesnoth.xcodeproj</string>
		<int key="IBDocument.defaultPropertyAccessControl">3</int>
		<dictionary class="NSMutableDictionary" key="IBDocument.LastKnownImageSizes">
			<string key="NSMenuCheckmark">{9, 8}</string>
			<string key="NSMenuMixedState">{7, 2}</string>
		</dictionary>
	</data>
</archive>
