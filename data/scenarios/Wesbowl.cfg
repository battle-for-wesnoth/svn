[multiplayer]
	name=Wesbowl
	map=wesbowl
	turns=20
	id=wesbowl

	objectives="
Victory:
@Move either ball to your opponent's endzone more times than they move their ball to yours
Defeat:
#Opponent moves the balls to your endzone more times than you move them to theirs"

	{DAWN}
	{MORNING}
	{AFTERNOON}
	{DUSK}
	{FIRST_WATCH}
	{SECOND_WATCH}

	[side]
	side=1
	enemy=2
	canrecruit=1
	controller=human
	[/side]
	[side]
	side=2
	enemy=1
	canrecruit=1
	controller=human
	[/side]

#define WESBOWL_UNIT SIDE FACING TYPE X Y
	[unit]
	side={SIDE}
	type={TYPE}
	facing={FACING}
	x={X}
	y={Y}
	[/unit]
#enddef

#define WESBOWL_SIDE LEADER SIDE FACING X A B C D E F G H I J K
	[if]
		[have_unit]
		type={LEADER}
		side={SIDE}
		[/have_unit]
		[then]
			{WESBOWL_UNIT {SIDE} {FACING} ({A}) {X} 10}
			{WESBOWL_UNIT {SIDE} {FACING} ({B}) {X} 8}
			{WESBOWL_UNIT {SIDE} {FACING} ({C}) {X} 12}
			{WESBOWL_UNIT {SIDE} {FACING} ({D}) {X} 6}
			{WESBOWL_UNIT {SIDE} {FACING} ({E}) {X} 14}
			{WESBOWL_UNIT {SIDE} {FACING} ({F}) {X} 4}
			{WESBOWL_UNIT {SIDE} {FACING} ({G}) {X} 16}
			{WESBOWL_UNIT {SIDE} {FACING} ({H}) {X} 2}
			{WESBOWL_UNIT {SIDE} {FACING} ({I}) {X} 18}
			{WESBOWL_UNIT {SIDE} {FACING} ({J}) {X} 1}
			{WESBOWL_UNIT {SIDE} {FACING} ({K}) {X} 20}
		[/then]
	[/if]
#enddef

#define WESBOWL_SIDE_DEFS SIDE FACING X
	{WESBOWL_SIDE (Elvish Lord) {SIDE} {FACING} {X} Merman (Elvish Fighter) (Elvish Fighter) (Elvish Archer) (Elvish Archer) Mage Mage (Elvish Shaman) (Elvish Shaman) (Elvish Scout) (Elvish Scout)}
	{WESBOWL_SIDE (Orcish Warlord) {SIDE} {FACING} {X} Naga (Orcish Grunt) (Orcish Grunt) (Orcish Archer) (Orcish Archer) Lizardman Lizardman (Troll Whelp) (Troll Whelp) (Wolf Rider) (Wolf Rider)}
	{WESBOWL_SIDE Lich {SIDE} {FACING} {X} (Vampire Bat) Skeleton Skeleton (Skeleton Archer) (Skeleton Archer) Skeleton Skeleton (Dark Adept) (Dark Adept) Ghost Ghost}
	{WESBOWL_SIDE (Dwarvish Lord) {SIDE} {FACING} {X} Poacher (Dwarvish Fighter) (Dwarvish Fighter) (Dwarvish Thunderer) (Dwarvish Thunderer) Footpad Footpad Thief Thief (Gryphon Rider) (Gryphon Rider)}
	{WESBOWL_SIDE General {SIDE} {FACING} {X} Naga Spearman Spearman Fencer Fencer Horseman Horseman (Heavy Infantry) (Heavy Infantry) Cavalry Cavalry}
#enddef

	[event]
	name=prestart
	{WESBOWL_SIDE_DEFS 1 normal 5}
	{WESBOWL_SIDE_DEFS 2 reverse 37}

	{VARIABLE b1x 7}
	{VARIABLE b1y 9}
	{VARIABLE b2x 35}
	{VARIABLE b2y 11}
	{VARIABLE b1down yes}
	{VARIABLE b2down yes}

	{VARIABLE redscore 0}
	{VARIABLE bluescore 0}

		[item]
		image=misc/ball.png
		x,y=$b1x,$b1y
		[/item]
		[item]
		image=misc/ball.png
		x,y=$b2x,$b2y
		[/item]
	[/event]

	[event]
	name=moveto
	first_time_only=no
		[filter]
		x,y=$b1x,$b1y
		[/filter]
		[store_unit]
		variable=unit
			[filter]
			x,y=$b1x,$b1y
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=b1down
			equals=yes
			[/variable]
			[variable]
			name=unit.variables.has_ball2
			not_equals=yes
			[/variable]
			[then]
				[removeitem]
				x,y=$b1x,$b1y
				[/removeitem]
				{VARIABLE b1down no}
				{VARIABLE unit.variables.has_ball1 yes}
				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[unit_overlay]
				x,y=$b1x,$b1y
				image=misc/ball.png
				[/unit_overlay]
			[/then]
		[/if]
	[/event]

	[event]
	name=die
	first_time_only=no

		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		
		[if]
			[variable]
			name=unit.variables.has_ball1
			equals=yes
			[/variable]
			[then]
				[item]
				x,y=$x1,$y1
				image=misc/ball.png
				[/item]
				{VARIABLE b1x $x1}
				{VARIABLE b1y $y1}
				{VARIABLE unit.variables.has_ball1 no}
				{VARIABLE b1down yes}
				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[remove_unit_overlay]
				x,y=$x1,$y1
				image=misc/ball.png
				[/remove_unit_overlay]
			[/then]
		[/if]
	[/event]

	[event]
	name=moveto
	first_time_only=no
		[filter]
		side=1
		x=38-40
		y=1-20
		[/filter]
		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=unit.variables.has_ball1
			equals=yes
			[/variable]
			[then]
				[set_variable]
				name=redscore
				add=1
				[/set_variable]
				[message]
				speaker=narrator
				message="Red scores! Current score is $redscore-$bluescore"
				[/message]
				{VARIABLE b1x 7}
				{VARIABLE b1y 9}
				{VARIABLE unit.variables.has_ball1 no}
				{VARIABLE b1down yes}

				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[remove_unit_overlay]
				x,y=$x1,$y1
				image=misc/ball.png
				[/remove_unit_overlay]
				[item]
				x,y=$b1x,$b1y
				image=misc/ball.png
				[/item]
			[/then]
		[/if]
	[/event]

	[event]
	name=moveto
	first_time_only=no
		[filter]
		side=2
		x=1-3
		y=1-20
		[/filter]
		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=unit.variables.has_ball1
			equals=yes
			[/variable]
			[then]
				[set_variable]
				name=bluescore
				add=1
				[/set_variable]
				[message]
				speaker=narrator
				message="Blue scores! Current score is $redscore-$bluescore"
				[/message]
				{VARIABLE b1x 35}
				{VARIABLE b1y 11}
				{VARIABLE unit.variables.has_ball1 no}
				{VARIABLE b1down yes}

				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[remove_unit_overlay]
				x,y=$x1,$y1
				image=misc/ball.png
				[/remove_unit_overlay]
				[item]
				x,y=$b1x,$b1y
				image=misc/ball.png
				[/item]
			[/then]
		[/if]
	[/event]

	#event to transfer control of the ball by passing, after movement
	[event]
	name=moveto
	first_time_only=no
		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=unit.variables.has_ball1
			equals=yes
			[/variable]
			[then]
				[store_locations]
				variable=locs
				x,y,radius=$x1,$y1,1
				[/store_locations]
				{VARIABLE passed no}
				{FOREACH locs i}
					{VARIABLE_OP xloc to_variable locs[$i].x}
					{VARIABLE_OP yloc to_variable locs[$i].y}
					[if]
						[or]
							[variable]
							name=xloc
							not_equals=$x1
							[/variable]
							[variable]
							name=passed
							equals=no
							[/variable]
							[have_unit]
							x,y=$xloc,$yloc
							side=$unit.side
							[/have_unit]
						[/or]
						[or]
							[variable]
							name=yloc
							not_equals=$y1
							[/variable]
							[variable]
							name=passed
							equals=no
							[/variable]
							[have_unit]
							x,y=$xloc,$yloc
							side=$unit.side
							[/have_unit]
						[/or]
						[then]
							[store_unit]
								variable=passto
								[filter]
								x,y=$xloc,$yloc
								[/filter]
							[/store_unit]
							[if]
								[variable]
								name=passto.variables.has_ball2
								not_equals=yes
								[/variable]
								[then]
									[message]
									speaker=unit
									message="Should I pass the ball to $passto.type ($xloc,$yloc)?"
										[option]
										message="Yes!"
											[command]
											{VARIABLE passed yes}
											{VARIABLE unit.variables.has_ball1 no}
											{VARIABLE passto.variables.has_ball1 yes}
												[unstore_unit]
												variable=passto
												[/unstore_unit]
												[unstore_unit]
												variable=unit
												[/unstore_unit]
												[remove_unit_overlay]
												x,y=$x1,$y1
												image=misc/ball.png
												[/remove_unit_overlay]
												[unit_overlay]
												x,y=$xloc,$yloc
												image=misc/ball.png
												[/unit_overlay]
											[/command]
										[/option]
										[option]
										message="No"
										[/option]
									[/message]
								[/then]
							[/if]
						[/then]
					[/if]

				{NEXT i}
			[/then]
		[/if]
	[/event]

	#control of the second ball. Exactly the same as control of the first
	#ball, with different variable names
	[event]
	name=moveto
	first_time_only=no
		[filter]
		x,y=$b2x,$b2y
		[/filter]
		[store_unit]
		variable=unit
			[filter]
			x,y=$b2x,$b2y
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=b2down
			equals=yes
			[/variable]
			[variable]
			name=unit.variables.has_ball1
			not_equals=yes
			[/variable]
			[then]
				[removeitem]
				x,y=$b2x,$b2y
				[/removeitem]
				{VARIABLE b2down no}
				{VARIABLE unit.variables.has_ball2 yes}
				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[unit_overlay]
				x,y=$b2x,$b2y
				image=misc/ball.png
				[/unit_overlay]
			[/then]
		[/if]
	[/event]

	[event]
	name=die
	first_time_only=no

		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		
		[if]
			[variable]
			name=unit.variables.has_ball2
			equals=yes
			[/variable]
			[then]
				[item]
				x,y=$x1,$y1
				image=misc/ball.png
				[/item]
				{VARIABLE b2x $x1}
				{VARIABLE b2y $y1}
				{VARIABLE unit.variables.has_ball2 no}
				{VARIABLE b2down yes}
				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[remove_unit_overlay]
				x,y=$x1,$y1
				image=misc/ball.png
				[/remove_unit_overlay]
			[/then]
		[/if]
	[/event]

	[event]
	name=moveto
	first_time_only=no
		[filter]
		side=1
		x=38-40
		y=1-20
		[/filter]
		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=unit.variables.has_ball2
			equals=yes
			[/variable]
			[then]
				[set_variable]
				name=redscore
				add=1
				[/set_variable]
				[message]
				speaker=narrator
				message="Red scores! Current score is $redscore-$bluescore"
				[/message]
				{VARIABLE b2x 7}
				{VARIABLE b2y 9}
				{VARIABLE unit.variables.has_ball2 no}
				{VARIABLE b2down yes}

				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[remove_unit_overlay]
				x,y=$x1,$y1
				image=misc/ball.png
				[/remove_unit_overlay]
				[item]
				x,y=$b2x,$b2y
				image=misc/ball.png
				[/item]
			[/then]
		[/if]
	[/event]

	[event]
	name=moveto
	first_time_only=no
		[filter]
		side=2
		x=1-3
		y=1-20
		[/filter]
		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=unit.variables.has_ball2
			equals=yes
			[/variable]
			[then]
				[set_variable]
				name=bluescore
				add=1
				[/set_variable]
				[message]
				speaker=narrator
				message="Blue scores! Current score is $redscore-$bluescore"
				[/message]
				{VARIABLE b2x 35}
				{VARIABLE b2y 11}
				{VARIABLE unit.variables.has_ball2 no}
				{VARIABLE b2down yes}

				[unstore_unit]
				variable=unit
				[/unstore_unit]
				[remove_unit_overlay]
				x,y=$x1,$y1
				image=misc/ball.png
				[/remove_unit_overlay]
				[item]
				x,y=$b2x,$b2y
				image=misc/ball.png
				[/item]
			[/then]
		[/if]
	[/event]

	#event to transfer control of the ball by passing, after movement
	[event]
	name=moveto
	first_time_only=no
		[store_unit]
		variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=unit.variables.has_ball2
			equals=yes
			[/variable]
			[then]
				[store_locations]
				variable=locs
				x,y,radius=$x1,$y1,1
				[/store_locations]
				{VARIABLE passed no}
				{FOREACH locs i}
					{VARIABLE_OP xloc to_variable locs[$i].x}
					{VARIABLE_OP yloc to_variable locs[$i].y}
					[if]
						[or]
							[variable]
							name=xloc
							not_equals=$x1
							[/variable]
							[variable]
							name=passed
							equals=no
							[/variable]
							[have_unit]
							x,y=$xloc,$yloc
							side=$unit.side
							[/have_unit]
						[/or]
						[or]
							[variable]
							name=yloc
							not_equals=$y1
							[/variable]
							[variable]
							name=passed
							equals=no
							[/variable]
							[have_unit]
							x,y=$xloc,$yloc
							side=$unit.side
							[/have_unit]
						[/or]
						[then]
							[store_unit]
								variable=passto
								[filter]
								x,y=$xloc,$yloc
								[/filter]
							[/store_unit]
							[if]
								[variable]
								name=passto.variables.has_ball1
								not_equals=yes
								[/variable]
								[then]
									[message]
									speaker=unit
									message="Should I pass the ball to $passto.type ($xloc,$yloc)?"
										[option]
										message="Yes!"
											[command]
											{VARIABLE passed yes}
											{VARIABLE unit.variables.has_ball2 no}
											{VARIABLE passto.variables.has_ball2 yes}
												[unstore_unit]
												variable=passto
												[/unstore_unit]
												[unstore_unit]
												variable=unit
												[/unstore_unit]
												[remove_unit_overlay]
												x,y=$x1,$y1
												image=misc/ball.png
												[/remove_unit_overlay]
												[unit_overlay]
												x,y=$xloc,$yloc
												image=misc/ball.png
												[/unit_overlay]
											[/command]
										[/option]
										[option]
										message="No"
										[/option]
									[/message]
								[/then]
							[/if]
						[/then]
					[/if]

				{NEXT i}
			[/then]
		[/if]
	[/event]

	[event]
	name=time over
		[if]
			[variable]
			name=redscore	
			less_than=$bluescore
			[/variable]
			[then]
				[message]
				speaker=narrator
				message="Blue team wins! Final score: $redscore-$bluescore"
				[/message]
			[/then]
		[/if]
		[if]
			[variable]
			name=redscore
			greater_than=$bluescore
			[/variable]
			[then]
				[message]
				speaker=narrator
				message="Red team wins! Final score: $redscore-$bluescore"
				[/message]
			[/then]
		[/if]
		[if]
			[variable]
			name=redscore
			equals=$bluescore
			[/variable]
			[then]
				[message]
				speaker=narrator
				message="Draw! Final score: $redscore-$bluescore"
				[/message]
			[/then]
		[/if]

		[endlevel]
		result=continue
		[/endlevel]
	[/event]

	#if a unit dies, then it gets sent to its side's starting location
	[event]
	name=die
	first_time_only=no
		#give the unit an injury
		[object]
			silent=yes
			[filter]
			x,y=$x1,$y1
			[/filter]
			[effect]
			apply_to=movement
			increase=-25%
			[/effect]
			[effect]
			apply_to=hitpoints
			increase_total=-25%
			[/effect]
		[/object]

		[store_unit]
			variable=unit
			[filter]
			x,y=$x1,$y1
			[/filter]
		[/store_unit]
		[if]
			[variable]
			name=unit.side
			equals=1
			[/variable]
			[then]
				{VARIABLE unit.x 2}
				{VARIABLE unit.y 10}
			[/then]
			[else]
				{VARIABLE unit.x 40}
				{VARIABLE unit.y 10}
			[/else]
		[/if]

		{VARIABLE unit.hitpoints "-"}
				
		[unstore_unit]
		find_vacant=yes
		variable=unit
		[/unstore_unit]
	[/event]
		

[/multiplayer]
