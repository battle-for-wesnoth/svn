#textdomain wesnoth-nr
## These macros support a fourth (actually zeroth) difficulty level, NEWBIE.

#macro to define a 'quantity' differently based on difficulty levels
#define QUANTITY4 NAME NEWBIE_VALUE EASY_VALUE NORMAL_VALUE HARD_VALUE
#ifdef NEWBIE
    {NAME}={NEWBIE_VALUE}
#endif

#ifdef EASY
    {NAME}={EASY_VALUE}
#endif

#ifdef NORMAL
    {NAME}={NORMAL_VALUE}
#endif

#ifdef HARD
    {NAME}={HARD_VALUE}
#endif
#enddef

#macro to define number of turns for different difficulty levels
#define TURNS4 NEWBIE_AMOUNT EASY_AMOUNT NORMAL_AMOUNT HARD_AMOUNT
    {QUANTITY4 turns {NEWBIE_AMOUNT} {EASY_AMOUNT} {NORMAL_AMOUNT} {HARD_AMOUNT}}
#enddef

#macro which will let you go {GOLD w/x y z} to set
#the gold depending on newbie/easy/medium/hard - w/x/y/z

#define GOLD4 NEWBIE_AMOUNT EASY_AMOUNT NORMAL_AMOUNT HARD_AMOUNT
    {QUANTITY4 gold {NEWBIE_AMOUNT} {EASY_AMOUNT} {NORMAL_AMOUNT} {HARD_AMOUNT}}
#enddef

#define INCOME4 NEWBIE_AMOUNT EASY_AMOUNT NORMAL_AMOUNT HARD_AMOUNT
    {QUANTITY4 income {NEWBIE_AMOUNT} {EASY_AMOUNT} {NORMAL_AMOUNT} {HARD_AMOUNT}}
#enddef

## These are campaign-specific.

#define FLASH
    [sound]
        name=lightning.ogg
    [/sound]

    [colour_adjust]
        red=100
        green=100
        blue=100
    [/colour_adjust]

    [delay]
        time=10
    [/delay]

    [colour_adjust]
        red=0
        green=0
        blue=0
    [/colour_adjust]
#enddef


#define WARRIOR X Y
    [unit]
        type=Orcish Warrior
        x={X}
        y={Y}
        side=3
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define ARCHER X Y
    [unit]
        type=Orcish Crossbowman
        x={X}
        y={Y}
        side=3
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define SLURBOW X Y
    [unit]
        type=Orcish Slurbow
        x={X}
        y={Y}
        side=3
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define WARLORD X Y
    [unit]
        type=Orcish Warlord
        x={X}
        y={Y}
        side=3
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define TROLL_RAIDER X Y
    [unit]
        type=Troll
        x={X}
        y={Y}
        side=2
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define RANGED_RAIDER X Y
    [unit]
        type=Troll Rocklobber
        x={X}
        y={Y}
        side=2
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define TROLL_JUNIOR X Y
    [unit]
        type=Troll Whelp
        x={X}
        y={Y}
        side=2
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define WARLORD_GUARD X Y
    [unit]
        type=Orcish Warlord
        x={X}
        y={Y}
        side=2
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define SLURBOW_GUARD  X Y
    [unit]
        type=Orcish Slurbow
        x={X}
        y={Y}
        side=2
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define WARDEN X Y
    [unit]
        type=Drake Warden
        id=Nest Guardian
        x={X}
        y={Y}
        side=9
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define SLASHER X Y
    [unit]
        type=Drake Slasher
        x={X}
        y={Y}
        side=9
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define ENFORCER X Y
    [unit]
        type=Drake Enforcer
        x={X}
        y={Y}
        side=9
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

#define GLADIATOR X Y
    [unit]
        type=Drake Gladiator
        x={X}
        y={Y}
        side=9
        ai_special=guardian
        random_traits=yes
        generate_description=yes
    [/unit]
#enddef

