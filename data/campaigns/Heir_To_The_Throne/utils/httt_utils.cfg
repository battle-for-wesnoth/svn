################################
#
# HTTT MACROS FOLLOW
#
################################

#
# This music macro ensures that the correct music is selected
# for a scenario just in case it is changed by [story].
# It should be positioned at the top of the scenario file
# so it can be overridden by other prestart or start events.
#
# It also allows for the convenient use of a standardized
# intra-scenario music, should we decide to use one.
#

#define SCENARIO_MUSIC MUSIC
[music]
name="wesnoth-2.ogg"
[/music]
[event]
name=prestart
	[music]
	name={MUSIC}
	[/music]
[/event]
#enddef

################################
#
# SCEPTER OF FIRE MACROS FOLLOW
#
################################


#define SOF_TERRAIN_MASK

[terrain_mask]
	x,y=1,1
	mask="
~~~~~~r~~~~~~~~r~r~r~r~rr~[r~~r~~r~~[~~~~~~~~r~~r~
~r~~~~~~r~~~~~~~rr[~r~~~r~~~rr~~~~~~~r~~~~~~~~~~~~
~~r~r~r~~~~rrrr~~rrrr[~~~~~rr~~~~[~~r~~~r~rr~~~r~r
~~~r~~r~~r~rrrrr~~~~rr~r~r~r~~~~r~r~~~~~r~[~~~[~~[
~~r~rrr~rrrr~~rrr~~rr~~rrr~~~~~rr~r~~~~~~~~~~~[~~~
rrr~~r~~~~r~rrrr~r~~~r~~~~~r~~~~~~~~~~~r~~~~r~~~rr
~rr~~~r~r~r~~r~r~[rrrrrr[~rr~r~~~r~~rr~~~~~r~~~~r~
[r~rr~~r~~r~rr~~~~~~r~~~~[~r~~r[~~r~~rr~~~~~rr~~r~
rrr~rr~r~[~~~~~rr~~rr~rr~r[~~~[~rr~~~~~rr~rr~~r~~~
r~~~rr~~[~~r~~r~~~~~rrr~~~~[~rrr~rr~~~r~~~r~~~r~~[
r~[~~r~~~~~rrr~~~~~~~~~~~~~~~~~r~~~r~~~rr~~[r~~~rr
rr~~~~~~~~r[~~~~~[~r~rrr~~~~~~~~~rr~~r~r~r~~r~~~~~
~~~rrr~~~~~~~r~~~~rrr~~~[~~r~r~~~~~~~~~~~r~~r~~~~~
~~~~r~~~~~~r~rr~~~~~~~~~~~~~~~~~~r~~~~~~r~~~~~~~~r
~r~~r~~~rr~~r~~~rr~~~r~r~~~~r[~~~[r~~~r~~~r~rrrr~r
~r~~~r~r~~~~r~~~r~~~~r~~~~r~~~~~rr~r~~rr~r~r~rr~~r
~~~r~~~~~r~~r~~~~~r~~~r~[~~~rr~~~~~~rr~rr~~~r~~~~~
r~~~r~rr~r~~r~rr~~r~r~r~~~~~r~~r~~~~~~r~~~[~r~~rrr
~r~r~~~~r~~~~~~~~[~~~~rrr~~~r~r~rr~~r~r~~~r~~~rrr~
~r~r[~r~r~~~r~~~[~~rr~~~~~~~r~~~~~~~~~~~~[~r~~~~~~
r~~~~~~~~~~~~rrr~~r~~~~~~r~rr~~~rrr~~rr~r~r~~r~r~~
~rrr~rr~r~rr~rr~~rr~~~~~r~[rr[r~r~~rr~~~r~~~~~~~r~
r~r~r~~r~~r~rrr~~~~~~~~r~~~~~r~rr~rrr~~r~r~~rr~~~~
r~~~r~~r~~~~~~rr~rr~rr~r~~~r~~r~~~~~~~rr~~~r~~rrr~
~~~~rr~~~r~~~[~~rr~~r~~~~r~r[r~r~rrr~~~~~r~~~~[~~~
~~~rr~~~~~~rrr~~~~~~r~~[~[r~~~~rrr~~r~r~~r~~~~~~~r
~~~~~~~r[~r~~~r~r~r~~~~~rrr~~~~~~~~~~rrr~~~~~r~~r~
~~~[~r[~r~rr~~~[rr~~~r~[~rr~~~~~r~~~~rrr~~~~~r~~rr
r[r~rrr~~~~~~~~r~~~~r~~~~~~[~rr[r~~~~~~r~rr~~~~~~r
~~~~r~r[r~~~~~~r~~r~r~~~~~~~~~r~~~~~r~~rr~r~~~~~r~
~rr~~~~r~r~~~~r~~~~~~rr~~r~~~~~~~r~~~~~~~~rr~r~~rr
r~~~~~~~~r~~rr~~r~rrr~~r~rr~r~~r~r~rrrr~r~rr~~~rr~
r~~~[rr~r~~~~~r~~rr~~~r~~~~r~rr~rr~~~~~~~~~r~r~~r~
[~[~~~~~r[r~~rr~rr~~~r~~~~~~r~r~~r~~~~~~[~~~~~~rrr
~~~rrr~rr~~rrr~rr~r~~~[~r~~r~~rrr~~rr~~~~~~~rr~~rr
~~~r~~~~~r[~rr[~r~r~r~r~~~[~~~~rr~~r~~rr~[r~~~~rr~
~rr~~~~~r~r~~rrr~~~~~r~~rrrr~~~~r~[~r~~~~~r~~~~~~~
~rr~r~~~r~~~r~r~~r~r~~r~~~~~~~~r~rrr~rr~~~~~r~~r~~
r~~rrrrr~[~~~~r~~~~~~~rr~~~rr~~r~[~[~~~~~~~~r~~rrr
r~r~~r~~rrr~~~~r~r~r~rr~~~~~~rrr~~~r~~~rr~rr~~~~~~
r~~~~~~~~~r~r~~~~~~r~r~~~~r~r~~~~~r~~~r~~~~r~[~~~r
~rr~~rr~~r~rrrrrrrr~~~~~r[~~~r~~~[~~~~r~rrrrr~rr~~
r~r~~~rrr~rr~~~~~~~~rr~r~r~rr~~~~~~~~~r~~~~r~~~~~~
~~r~~~r~~~~rr~~~r~~r~rr~r~[rr~~~~~~r~~~~r~rrr[r~rr
rr~~~rr~r~rr~r~~~r~~rrr~r~rrr~~[~r~~~~r~r~~r~~~~~~
r~r[~~~~~~~~rr~~~r~~~~~~~~r~~~rrr[~r~~~r~~r~r~~rr~
r~r~~~~~rrr[~r~~r~~~~~~~~[~~rr~rrrrrr~r~~~~r~~~~~r
~~~~~~~~~~rr~~rr~r~~~~~~r~~~~~r~~rr~~~~~~~~[~~~~~~
~~~~r~~rr~~~r~~~~~~~~~r~~r~~~~~rr~~~~~~~rrr~~r~rrr
~r~r~r~~~~rr~r~~r~~~r~r~r~~r~~r~r~~~~~~~~~~r~~[~~~
~~r~~~~rr~~~~r~r~~r~r~~rr~r~r[~~~r~~~~r~~~~r~~~~rr
~~r~~r~rrrr[r~~~r~~~~r~rr~r~~~~r~~~~~r~~rrr~r~~rr~
~rrrr~r~~r~r~~~~r~~r~~r~~r~rrrr~~~~r~~~~~~~~~r~~~r
r~r~~~~r~~~~~~r~~[r~~~~[rr~~~~rr~r[~~~~~~r[~r~rr~~
~~~~r[r~~r~~~~~r~rrr[~rr~r]r~~~~~r~r~~r~r~~~~~]r~r
~~~~~~~~~~~~r~rp~rrrrr~~r~]r~~r~rp~~]~r~~~~~~r~rp~
~r~~~~~~~~~~~~~~rr]~r~~~r~~~pr~~~~r~~r~~~~~~~p~~~~
~~r~p~~~~~~prrr~~~rrr]~~r~~r~~~~~]~~~r~~]~rp~r~r~r
~~~p~~~~~r~]rrprp~~~~p~r~~~~~~~~r~p~~~~rr~]~~~]~~]
~~r~prr~rr~r~~rpr~~~r~~rp~~~~~~]p~~~~~~r~~r~~~]~~~
rrpr~r~~rrr~rrpr~r~~~r~~~~~r~~~~~~p~r~~p~r~~r~~~]r
~rr~~~prr~r~~r~r~]~rrrpr]r~rrr~~~p~~rr~~~~~rp~~~r~
]rprrr~r~~r~rr~~~~~~r~~~~]~~~~r]~~r~~r~~~r~~pr~~r~
rrrrrr~r~]~~~~~rp~~prrrr~r]~~~]~rr~~~~~pp~r~~~r~~~
~~~~rr~~]~~r~~r~~~~~rrr~~~~]~rrr~rr~~~r~~~r~~~r~~]
r~]~~r~~~rrpp~r~~~~~~~~~~~~~~~~r~~~r~~~rr~~]r~~~rr
rr~~~~~r~~p]~~~~~]~prrrr~~~~~~~~~pr~~~~r~r~~r~r~~~
r~~p~rr~~~~~~p~p~~rrr~p~]p~r~r~~~~~~~~~~~r~~]~~~~~
~~~~r~~~~~~rrrr~~~~~~~~~~~~~~~~~~r~~~~~~r~~~~~r~~r
~r~~r~~~rr~~r~p~rr~~~r~r~~~pr]~~~]r~~r~r~pr~rrrr~]
"
	[rule]		# Make sure your castle is not converted
	old=o
	new=rp][
	terrain=o
	[/rule]
	[rule]		# Make sure cave walls are not converted
	old=W
	new=rp][
	terrain=W
	[/rule]
	[rule]		# Make sure the keep is not converted
	old=K
	new=rp][
	terrain=K
	[/rule]
	[rule]		# Convert cave villages to stone villages
	old=D
	new=~rp][
	terrain=p
	[/rule]
	[rule]		# Add stone villages
	old=u
	new=p
	terrain=p
	[/rule]
	[rule]		# Add roads
	old=u
	new=r
	terrain=r
	[/rule]
	[rule]		# Add hilly caves
	old=u
	new=[
	terrain=[
	[/rule]
	[rule]		# Add a mushroom forest
	old=u
	new=]
	terrain=]
	[/rule]
[/terrain_mask]

#enddef

#define PLACE_SCEPTER
			[item]
			image=items/sceptre-of-fire.png
			[/item]
		
			[event]
			same_location_as_previous=yes
			name=moveto
			first_time_only=no
				[filter]
				side=1
				x=22
				y=32
				[/filter]
				[object]
				id=object_scepter
				name= _ "Scepter of Fire"
				image=items/sceptre-of-fire.png
				duration=forever
				description= _ "This ancient Scepter was forged by the great Dwarves of the Deep Mountains. A symbol of the kingship of Wesnoth, the Scepter has the power to shoot fireballs at enemies of the bearer!"
				cannot_use_message= _ "This is the Scepter of Fire. Only a true successor to the throne can possibly dare to take this!"
					[filter]
					type=Princess,Battle Princess,Fighter,Commander,Lord
					[/filter]
					[effect]
					apply_to=variation
					name=scepter
					[/effect]
				[/object]
			[/event]
#enddef

#define KONRAD_GETS_SCEPTER
			[event]
			same_location_as_previous=yes
			name=moveto
				[filter]
				description=Konrad
				[/filter]
				[set_variable]
				name=scepter
				value="Konrad"
				[/set_variable]
				[message]
				description=Konrad
				message= _ "Here it is at last, I have the Scepter!"
				[/message]
				[message]
				description=Kalenz
				message= _ "So it is in our hands! Now let us leave this stinking pit."
				[/message]
				[message]
				description=Li'sar
				message= _ "I think that if we travel just a little north, we might be able to get out."
				[/message]
				[endlevel]
				result=victory
				[/endlevel]
			[/event]
#enddef

#define LISAR_GETS_SCEPTER
			[event]
			same_location_as_previous=yes
			name=moveto
				[filter]
				description=Li'sar
				[/filter]
				[set_variable]
				name=scepter
				value="Li'sar"
				[/set_variable]
				[message]
				description=Li'sar
				message= _ "At last! I have the Scepter!"
				[/message]
				[message]
				description=Konrad
				message= _ "Indeed. You managed to reach it Li'sar. I hope you shall use it wisely."
				[/message]
				[message]
				description=Li'sar
				message= _ "Well my first use for it is going to be to help us get out of this hole! I hope you consider that wise."
				[/message]
				[message]
				description=Delfador
				message= _ "The Scepter makes its wielder powerful, but hardly immortal, child. Use it prudently. Now come, I believe there is an exit to the north!"
				[/message]
				[message]
				description=Li'sar
				message= _ "I think I know what I'm doing. Come, let us go!"
				[/message]

				[endlevel]
				result=victory
				[/endlevel]
			[/event]
#enddef

#define PASSAGE_NORMAL DESTINATION WIDTH WINDINESS JAGGED
[passage]
destination={DESTINATION}
width={WIDTH}
windiness={WINDINESS}
jagged={JAGGED}
[/passage]
#enddef

#define PASSAGE_CHANCE CHANCE DESTINATION WIDTH WINDINESS JAGGED
[passage]
chance={CHANCE}
destination={DESTINATION}
width={WIDTH}
windiness={WINDINESS}
jagged={JAGGED}
[/passage]
#enddef

#define ERASE_CASTLE SIDE LETTER
[store_unit]
variable=side_store
	[filter]
	side={SIDE}
	canrecruit=1
	[/filter]
[/store_unit]
{VARIABLE min_x $side_store.x}
{VARIABLE_OP min_x add -1}
{VARIABLE min_y $side_store.y}
{VARIABLE_OP min_y add -1}
{VARIABLE max_x $side_store.x}
{VARIABLE_OP max_x add 1}
{VARIABLE max_y $side_store.y}
{VARIABLE_OP max_y add 1}
{VARIABLE_OP x_range format ("$min_x|-|$max_x")}
{VARIABLE_OP y_range format ("$min_y|-|$max_y")}
[terrain]
x=$x_range
y=$y_range
letter={LETTER}
[/terrain]
#enddef
