#textdomain wesnoth-low

#define LOW_MAP NAME
    map_data="{@campaigns/Legend_of_Wesmere/maps/{NAME}}"
#enddef

#define LOW_MASK NAME
    [event]
        name=prestart
        [terrain_mask]
            x=1
            y=1
            mask="{@campaigns/Legend_of_Wesmere/masks/{NAME}}"
        [/terrain_mask]
    [/event]
#enddef

#define RECALL_LOYALS
    [store_unit]
        variable=loyals
        [filter]
            [filter_wml]
                upkeep="loyal"
            [/filter_wml]
        [/filter]
    [/store_unit]

    {FOREACH loyals loyal}
        [recall]
            id=$loyals[$loyal].id
        [/recall]
    {NEXT loyal}
    {CLEAR_VARIABLE loyal}
    {CLEAR_VARIABLE loyals}
#enddef

#define LOOT AMOUNT SIDE
    {VARIABLE amount_gold {AMOUNT}}
    [message]
        speaker=narrator
        message= _ "You retrieve $amount_gold pieces of gold."
        image=wesnoth-icon.png
    [/message]

    [sound]
        name=gold.ogg
    [/sound]

    [gold]
        side={SIDE}
        amount={AMOUNT}
    [/gold]
#enddef

#define WINTER_MASK MASK_NAME
    [terrain_mask]
        x,y=1,1
        mask="{@campaigns/Legend_of_Wesmere/masks/{MASK_NAME}}"
        #TODO add more rules
        #human Village
        [rule]
            old=Gg^Vh
            new=Aa
            terrain=Aa^Vha
        [/rule]
        #dwarf Village
        [rule]
            old=Hh^Vhh
            new=Aa
            terrain=Ha^Vhha
        [/rule]

        #elvish Village
        [rule]
            old=Gg^Ve
            new=Aa
            terrain=Aa^Vea
        [/rule]
        #flat hut Village
        [rule]
            old=Gg^Vc
            new=Aa
            terrain=Aa^Vca
        [/rule]
        #hill hut Village
        [rule]
            old=Hh^Vc
            new=Aa
            terrain=Ha^Vca
        [/rule]
        #forest
        [rule]
            old=Gs^Fp
            new=Aa
            terrain=Aa^Fpa
        [/rule]
        #hills
        [rule]
            old=Hh
            new=Aa
            terrain=Ha
        [/rule]
        #water
        [rule]
            old=Ww
            new=Aa
            terrain=Ai
        [/rule]
        # that would brake the balance of S19
        #swamp
        #[rule]
        #    old=Ss
        #    new=Aa
        #    terrain=Ai
        #[/rule]
        #castle
        [rule]
            new=Ce,Ke
        [/rule]
        [rule]
            old=Ce,Ke
            new=Aa^Fpa
        [/rule]
        #mountains
        [rule]
            old=Mm
            new=Aa
            terrain=Ms
        [/rule]
        #mountain village
        [rule]
            old=Mm^Vhh
            new=Aa
            terrain=Mm^Vhha
        [/rule]

        #Grass
        [rule]
            old=Gg,Re
            new=Aa
            #don't specify terrain and it just uses the new terrain
        [/rule]

        #Savannah
        [rule]
            old=Gs
            new=Aa
            terrain=Aa
        [/rule]

        #default: Will match everything, since 'old' and 'new' aren't
        #specified. Set 'use_old=yes' to signal no change.
        [rule]
            use_old=yes
        [/rule]
    [/terrain_mask]
#enddef

#define SET_GOLD SIDE FACTOR_EASY FACTOR_NORMAL FACTOR_HARD
    [event]
        name=prestart

        [store_gold]
            side=1
        [/store_gold]

#ifdef EASY
        {VARIABLE_OP gold multiply {FACTOR_EASY}}
#endif

#ifdef NORMAL
        {VARIABLE_OP gold multiply {FACTOR_NORMAL}}
#endif

#ifdef HARD
        {VARIABLE_OP gold multiply {FACTOR_HARD}}
#endif

        [modify_side]
            side={SIDE}
            gold=$gold
        [/modify_side]

        [debug_message]
            message="gold of side {SIDE} set to $gold"	# wmllint: ignore
            logger=warn
        [/debug_message]

        {CLEAR_VARIABLE gold}
    [/event]
#enddef

#define ELVES
    Elvish Fighter,Elvish Archer,Elvish Scout,Elvish Shaman#enddef

#define DWARVES
    Dwarvish Fighter,Dwarvish Thunderer,Dwarvish Ulfserker, Dwarvish Berserker, Dwarvish Guardsman#enddef

#define ORCS1
    Orcish Archer, Orcish Assassin, Orcish Grunt, Wolf Rider, Goblin Spearman#enddef

#define GIVE_ALL_VILLAGES SIDE
    [event]
        name=prestart

        [store_locations]
            terrain=*^V*
            variable=temp_starting_villages
        [/store_locations]

        {FOREACH temp_starting_villages i}
            [capture_village]
                side={SIDE}
                x,y=$temp_starting_villages[$i].x,$temp_starting_villages[$i].y
            [/capture_village]
        {NEXT i}
        {CLEAR_VARIABLE i}
        {CLEAR_VARIABLE temp_starting_villages}
    [/event]
#enddef

#define VILLAGE_SIDE SIDE X Y
    [event]
        name=prestart

        [command]
            [capture_village]
                side={SIDE}
                x={X}
                y={Y}
            [/capture_village]
        [/command]

        [message_debug]
            logger=warn
            message="village at {X}, {Y} to side {SIDE}"	# wmllint: ignore
        [/message_debug]
    [/event]
#enddef

#define VILLAGE_KALENZ X Y
    {VILLAGE_SIDE 1 {X} {Y}}
#enddef

    # Thanks to Shadow Master for this macro
    # !***Macro to random place unit within area***
#define RANDOM_PLACEMENT _X _Y _RADIUS _UNIT_WML_STRUCT
    [store_locations]
        x,y={_X},{_Y}
        radius={_RADIUS}
        variable=random_placement_locations
    [/store_locations]

    {VARIABLE_OP random_string format "0..$random_placement_locations.length"}

    {RANDOM $random_string}

    {VARIABLE_OP random_placement_x format "$random_placement_locations[$random].x"}
    {VARIABLE_OP random_placement_y format "$random_placement_locations[$random].y"}

    {CLEAR_VARIABLE random_placement_locations}

    {_UNIT_WML_STRUCT}

    [+unit]
        x,y=$random_placement_x,$random_placement_y
    [/unit]

    {CLEAR_VARIABLE random_placement_x}
    {CLEAR_VARIABLE random_placement_y}
#enddef
