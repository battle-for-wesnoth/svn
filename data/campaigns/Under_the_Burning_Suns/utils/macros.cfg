# The file contains useful macros I use within the campaign

#create a loop that runs X times
#define LOOP VAR
[set_variable]
name={VAR}
multiply=-1
[/set_variable]

[while]
	[variable]
	name={VAR}
	less_than=0
	[/variable]
	[do]
#enddef

# used to add images/items to hexes
#define PUT_IMG IMG X Y
	[item]
		x={X}
		y={Y}
		image={IMG}
	[/item]
#enddef

# create a unit with full upkeep
#define UNIT_ TYPE DESC SIDE X Y
	[unit]
		type={TYPE}
		description={DESC}
		user_description= _ "{DESC}"
		side={SIDE}
		upkeep=full
		x={X}
		y={Y}
	[/unit]
#enddef

# create a unit with no upkeep
#define FREE_UNIT TYPE DESC SIDE X Y
	[unit]
		type={TYPE}
		description={DESC}
		user_description= _ "{DESC}"
		side={SIDE}
		upkeep=free
		x={X}
		y={Y}
	[/unit]
#enddef

# create a unit with full upkeep and traits
#define UNIT_T TYPE DESC SIDE X Y

{RANDOM_TRAIT_UNIT ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}

#enddef

# MACROS to implement random traits
# creates one unit with full upkeep and 2 random traits

#define RANDOM_TRAIT_UNIT TYPE DESC SIDE X Y
{RANDOM 1..6}

 {TRAIT_IF 1 (quick,resilient) ({TRAIT_QUICK}) ({TRAIT_RESILIENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
 {TRAIT_IF 2 (strong,resilient) ({TRAIT_STRONG}) ({TRAIT_RESILIENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
 {TRAIT_IF 3 (intelligent,resilient) ({TRAIT_INTELLIGENT}) ({TRAIT_RESILIENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
 {TRAIT_IF 4 (strong,quick) ({TRAIT_STRONG}) ({TRAIT_QUICK}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
 {TRAIT_IF 5 (strong,intelligent) ({TRAIT_STRONG}) ({TRAIT_INTELLIGENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
 {TRAIT_IF 6 (quick,intelligent) ({TRAIT_QUICK}) ({TRAIT_INTELLIGENT}) ({TYPE}) ({DESC}) ({SIDE}) ({X}) ({Y})}
#enddef


#define TRAIT_IF NUMBER TRAITDESC TRAIT1 TRAIT2 TYPE DESC SIDE X Y
[if]
	[variable]
	name=random
	equals={NUMBER}
	[/variable]
	[then]
		[unit]
		side={SIDE}
		type={TYPE}
		description={DESC}
		user_description= _ "{DESC}"
		upkeep=full
		x={X}
		y={Y}
		[modifications]
			{TRAIT1}
			{TRAIT2}
		[/modifications]
		[/unit]
	[/then]
[/if]
#enddef


# UNIT_OVERLAY adds an overlay to a unit, taking in a standard filter
#
# Example that gives all spearmen a book:
# {UNIT_OVERLAY type=Spearman items/book1.png}

#define UNIT_OVERLAY FILTER IMG
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=UNIT_OVERLAY_store
        kill=no
    [/store_unit]
    {FOREACH UNIT_OVERLAY_store UNIT_OVERLAY_i}
	{VARIABLE_OP UNIT_OVERLAY_tempx format
$UNIT_OVERLAY_store[$UNIT_OVERLAY_i].x}
	{VARIABLE_OP UNIT_OVERLAY_tempy format
$UNIT_OVERLAY_store[$UNIT_OVERLAY_i].y}
        [unit_overlay]
            x=$UNIT_OVERLAY_tempx
            y=$UNIT_OVERLAY_tempy
		image={IMG}
        [/unit_overlay]
    {NEXT UNIT_OVERLAY_i}
    {CLEAR_VARIABLE UNIT_OVERLAY_store}
#enddef

#define REMOVE_UNIT_OVERLAY FILTER IMG
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=UNIT_OVERLAY_store
        kill=no
    [/store_unit]
    {FOREACH UNIT_OVERLAY_store UNIT_OVERLAY_i}
	{VARIABLE_OP UNIT_OVERLAY_tempx format
$UNIT_OVERLAY_store[$UNIT_OVERLAY_i].x}
	{VARIABLE_OP UNIT_OVERLAY_tempy format
$UNIT_OVERLAY_store[$UNIT_OVERLAY_i].y}
        [remove_unit_overlay]
            x=$UNIT_OVERLAY_tempx
            y=$UNIT_OVERLAY_tempy
		image={IMG}
        [/remove_unit_overlay]
    {NEXT UNIT_OVERLAY_i}
    {CLEAR_VARIABLE UNIT_OVERLAY_store}
#enddef

