#textdomain wesnoth-anl

# ------------------------------------------------------
# Automatic Studying
# ------------------------------------------------------

#define AUTO_STUDYING TYPES
[event]
	name=side turn
	first_time_only=no

	[store_unit]
		[filter]
			type={TYPES}
			side="$side_number"
			canrecruit=no
			[filter_location]
				terrain="Gg^Ve,Gg^Vea"
			[/filter_location]
		[/filter]
		variable=researchers
		kill=no
	[/store_unit]

	{VARIABLE sound no}
	{FOREACH researchers i}
		{VARIABLE_OP idle to_variable "researchers[$i].variables.idle"}

		[if]
		{CONDITION idle equals yes}
		[then]
			{CLEAR_VARIABLE "researchers[$i].variables.idle"}

			[unstore_unit]
				variable=researchers[$i]
			[/unstore_unit]
		[/then]
		[else]
			{VARIABLE_OP temp_x format "$researchers[$i].x"}
			{VARIABLE_OP temp_y format "$researchers[$i].y"}

			{VARIABLE_OP credited_side format $researchers[$i].side}
			{VARIABLE_OP amount format $researchers.level}
			{ADDING_TO_CURRENT_RESEARCH_FIELD $credited_side $amount}

			{VARIABLE sound yes}
			{SCROLL_TO $temp_x $temp_y}

			[unstore_unit]
				variable=researchers[$i]
				text="$amount"
				{COLOR_WHITE}
			[/unstore_unit]
			
		[/else]
		[/if]
	{NEXT i}
	[if]
	{CONDITION sound equals yes}
	[then]
		{PLAY_SOUND ("magic-holy-miss-3.ogg")}
		{DELAY 200}
	[/then]
	[/if]

	{CLEAR_VARIABLE sound}
	{CLEAR_VARIABLE researchers}
	{CLEAR_VARIABLE idle}
	{CLEAR_VARIABLE amount}
	{CLEAR_VARIABLE credited_side}
	{REDRAW}
[/event]
#enddef

# ------------------------------------------------------
# Automatic Farming
# ------------------------------------------------------

#define AUTO_FARMING TYPES
[event]
	name=side turn
	first_time_only=no

	[store_unit]
		[filter]
			type={TYPES}
			side="$side_number"
			[filter_location]
				terrain=Re^Gvs
			[/filter_location]
		[/filter]
		variable=harvesters
		kill=no
	[/store_unit]

	[store_unit]
		[filter]
			type={TYPES}
			side="$side_number"
			[filter_location]
				terrain=Re
			[/filter_location]
		[/filter]
		variable=planters
		kill=no
	[/store_unit]

	{VARIABLE sound no}
	{FOREACH harvesters i}
		{VARIABLE_OP idle to_variable "harvesters[$i].variables.idle"}

		[if]
		{CONDITION idle equals yes}
		[then]
			{CLEAR_VARIABLE "harvesters[$i].variables.idle"}

			[unstore_unit]
				variable=harvesters[$i]
			[/unstore_unit]
		[/then]
		[else]
			{VARIABLE_OP temp_x format "$harvesters[$i].x"}
			{VARIABLE_OP temp_y format "$harvesters[$i].y"}

			{VARIABLE_OP credited_side format $harvesters[$i].side}
			{VARIABLE_OP amount format $player[$credited_side].farming.gold}

			# auto-harvest
			{ADD_GOLD $credited_side $amount}
			{MODIFY_TERRAIN "Re" $temp_x $temp_y}
			{REMOVE_ITEM $temp_x $temp_y}
			{VARIABLE sound yes}
			{SCROLL_TO $temp_x $temp_y}
			
			[unstore_unit]
				variable=harvesters[$i]
				text="$amount"
				red,green,blue=204,204,51
			[/unstore_unit]
		[/else]
		[/if]
	{NEXT i}
	[if]
	{CONDITION sound equals yes}
	[then]
		{PLAY_SOUND ("gold.ogg")}
		{DELAY 200}
	[/then]
	[/if]

	{VARIABLE sound no}
	{FOREACH planters i}
		{VARIABLE_OP idle to_variable "planters[$i].variables.idle"}

		[if]
		{CONDITION idle equals yes}
		[then]
			{CLEAR_VARIABLE "planters[$i].variables.idle"}
		[/then]
		[else]
			{VARIABLE_OP temp_x format "$planters[$i].x"}
			{VARIABLE_OP temp_y format "$planters[$i].y"}

			# auto-plant
			{MODIFY_TERRAIN "Re^Gvs" $temp_x $temp_y }
			{REMOVE_ITEM $temp_x $temp_y}
			{SET_IMAGE $temp_x $temp_y ("items/flower4.png")}
			{VARIABLE sound yes}
		[/else]
		[/if]
		[unstore_unit]
			variable=planters[$i]
		[/unstore_unit]
	{NEXT i}
	[if]
	{CONDITION sound equals yes}
	[then]
		{PLAY_SOUND ("entangle.wav")}
		{DELAY 200}
	[/then]
	[/if]

	{CLEAR_VARIABLE sound}
	{CLEAR_VARIABLE harvesters}
	{CLEAR_VARIABLE planters}
	{CLEAR_VARIABLE idle}
	{CLEAR_VARIABLE amount}
	{CLEAR_VARIABLE credited_side}

	{REDRAW}
[/event]
#enddef

# ------------------------------------------------------
# Automatic Mining
# ------------------------------------------------------

#define AUTO_MINING TYPES
[event]
	name=side turn
	first_time_only=no

	[store_unit]
		[filter]
			type={TYPES}
			side="$side_number"
			[filter_location]
				terrain=Hh^Vhh,Ha^Vhha,Mm^Vhh
			[/filter_location]
		[/filter]
		variable=miners
		kill=no
	[/store_unit]

	{VARIABLE sound no}
	{FOREACH miners i}
		{VARIABLE_OP idle to_variable "miners[$i].variables.idle"}

		[if]
		{CONDITION idle equals yes}
		[then]
			{CLEAR_VARIABLE "miners[$i].variables.idle"}

			[unstore_unit]
				variable=miners[$i]
			[/unstore_unit]
		[/then]
		[else]
			{VARIABLE_OP temp_x format "$miners[$i].x"}
			{VARIABLE_OP temp_y format "$miners[$i].y"}

			{VARIABLE_OP credited_side format $miners[$i].side}
			{VARIABLE_OP amount format $player[$credited_side].mining.gold}

			# auto-mine
			{ADD_GOLD $credited_side $amount}
			{SCROLL_TO $temp_x $temp_y}
			{VARIABLE sound yes}
			
			[unstore_unit]
				variable=miners[$i]
				text="$amount"
				red,green,blue=204,204,51
			[/unstore_unit]
		[/else]
		[/if]
	{NEXT i}
	[if]
	{CONDITION sound equals yes}
	[then]
		{PLAY_SOUND ("gold.ogg")}
		{DELAY 200}
	[/then]
	[/if]

	{CLEAR_VARIABLE sound}
	{CLEAR_VARIABLE miners}
	{CLEAR_VARIABLE idle}
	{CLEAR_VARIABLE amount}
	{CLEAR_VARIABLE credited_side}

	{REDRAW}
[/event]
#enddef

#define AUTO_MOVE_INIT TYPES
	# This macro enables a peasant to move onto an existing farm or
	# mine and auto-harvest or auto-mine at the start of next turn.
	[event]
		name=moveto
		first_time_only=no
		[filter]
			type={TYPES}
			[filter_location]
				terrain="Re,Re^Gvs,Hh^Vhh,Ha^Vhha,Mm^Vhh,Re^Uf,Uu^Uf"
			[/filter_location]
		[/filter]

		[store_unit]
			[filter]
				x=$x1
				y=$y1
			[/filter]
			variable=unit
		[/store_unit]

		[if]
		{CONDITION unit.moves greater_than_equal_to 1}
		[then]
			{CLEAR_VARIABLE unit.variables.idle}
		[/then]
		[else]
			{VARIABLE unit.variables.idle yes}
		[/else]
		[/if]

		[unstore_unit]
			variable=unit
		[/unstore_unit]
	[/event]
#enddef
