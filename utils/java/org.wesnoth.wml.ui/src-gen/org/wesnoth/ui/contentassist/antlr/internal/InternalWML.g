/*
* generated by Xtext
*/
grammar InternalWML;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.wesnoth.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.wesnoth.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.wesnoth.services.WMLGrammarAccess;

}

@parser::members {
 
 	private WMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(WMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleWMLRoot
entryRuleWMLRoot 
:
{ before(grammarAccess.getWMLRootRule()); }
	 ruleWMLRoot
{ after(grammarAccess.getWMLRootRule()); } 
	 EOF 
;

// Rule WMLRoot
ruleWMLRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLRootAccess().getAlternatives()); }
(rule__WMLRoot__Alternatives)*
{ after(grammarAccess.getWMLRootAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLTag
entryRuleWMLTag 
:
{ before(grammarAccess.getWMLTagRule()); }
	 ruleWMLTag
{ after(grammarAccess.getWMLTagRule()); } 
	 EOF 
;

// Rule WMLTag
ruleWMLTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLTagAccess().getGroup()); }
(rule__WMLTag__Group__0)
{ after(grammarAccess.getWMLTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLAbstractMacroCall
entryRuleWMLAbstractMacroCall 
:
{ before(grammarAccess.getWMLAbstractMacroCallRule()); }
	 ruleWMLAbstractMacroCall
{ after(grammarAccess.getWMLAbstractMacroCallRule()); } 
	 EOF 
;

// Rule WMLAbstractMacroCall
ruleWMLAbstractMacroCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLAbstractMacroCallAccess().getAlternatives()); }
(rule__WMLAbstractMacroCall__Alternatives)
{ after(grammarAccess.getWMLAbstractMacroCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroInclude
entryRuleWMLMacroInclude 
:
{ before(grammarAccess.getWMLMacroIncludeRule()); }
	 ruleWMLMacroInclude
{ after(grammarAccess.getWMLMacroIncludeRule()); } 
	 EOF 
;

// Rule WMLMacroInclude
ruleWMLMacroInclude
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getGroup()); }
(rule__WMLMacroInclude__Group__0)
{ after(grammarAccess.getWMLMacroIncludeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroCall
entryRuleWMLMacroCall 
:
{ before(grammarAccess.getWMLMacroCallRule()); }
	 ruleWMLMacroCall
{ after(grammarAccess.getWMLMacroCallRule()); } 
	 EOF 
;

// Rule WMLMacroCall
ruleWMLMacroCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroCallAccess().getGroup()); }
(rule__WMLMacroCall__Group__0)
{ after(grammarAccess.getWMLMacroCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroDefine
entryRuleWMLMacroDefine 
:
{ before(grammarAccess.getWMLMacroDefineRule()); }
	 ruleWMLMacroDefine
{ after(grammarAccess.getWMLMacroDefineRule()); } 
	 EOF 
;

// Rule WMLMacroDefine
ruleWMLMacroDefine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getGroup()); }
(rule__WMLMacroDefine__Group__0)
{ after(grammarAccess.getWMLMacroDefineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleWMLKey
entryRuleWMLKey 
:
{ before(grammarAccess.getWMLKeyRule()); }
	 ruleWMLKey
{ after(grammarAccess.getWMLKeyRule()); } 
	 EOF 
;

// Rule WMLKey
ruleWMLKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyAccess().getGroup()); }
(rule__WMLKey__Group__0)
{ after(grammarAccess.getWMLKeyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLKeyExtraArgs
entryRuleWMLKeyExtraArgs 
:
{ before(grammarAccess.getWMLKeyExtraArgsRule()); }
	 ruleWMLKeyExtraArgs
{ after(grammarAccess.getWMLKeyExtraArgsRule()); } 
	 EOF 
;

// Rule WMLKeyExtraArgs
ruleWMLKeyExtraArgs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyExtraArgsAccess().getAlternatives()); }
(rule__WMLKeyExtraArgs__Alternatives)
{ after(grammarAccess.getWMLKeyExtraArgsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroCallParameter
entryRuleWMLMacroCallParameter 
:
{ before(grammarAccess.getWMLMacroCallParameterRule()); }
	 ruleWMLMacroCallParameter
{ after(grammarAccess.getWMLMacroCallParameterRule()); } 
	 EOF 
;

// Rule WMLMacroCallParameter
ruleWMLMacroCallParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getGroup()); }
(rule__WMLMacroCallParameter__Group__0)
{ after(grammarAccess.getWMLMacroCallParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLKeyValue
entryRuleWMLKeyValue 
:
{ before(grammarAccess.getWMLKeyValueRule()); }
	 ruleWMLKeyValue
{ after(grammarAccess.getWMLKeyValueRule()); } 
	 EOF 
;

// Rule WMLKeyValue
ruleWMLKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyValueAccess().getAlternatives()); }
(rule__WMLKeyValue__Alternatives)
{ after(grammarAccess.getWMLKeyValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLPath
entryRuleWMLPath 
:
{ before(grammarAccess.getWMLPathRule()); }
	 ruleWMLPath
{ after(grammarAccess.getWMLPathRule()); } 
	 EOF 
;

// Rule WMLPath
ruleWMLPath
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLPathAccess().getGroup()); }
(rule__WMLPath__Group__0)
{ after(grammarAccess.getWMLPathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLIDList
entryRuleWMLIDList 
:
{ before(grammarAccess.getWMLIDListRule()); }
	 ruleWMLIDList
{ after(grammarAccess.getWMLIDListRule()); } 
	 EOF 
;

// Rule WMLIDList
ruleWMLIDList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLIDListAccess().getGroup()); }
(rule__WMLIDList__Group__0)
{ after(grammarAccess.getWMLIDListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLINTList
entryRuleWMLINTList 
:
{ before(grammarAccess.getWMLINTListRule()); }
	 ruleWMLINTList
{ after(grammarAccess.getWMLINTListRule()); } 
	 EOF 
;

// Rule WMLINTList
ruleWMLINTList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLINTListAccess().getGroup()); }
(rule__WMLINTList__Group__0)
{ after(grammarAccess.getWMLINTListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTSTRING
entryRuleTSTRING 
:
{ before(grammarAccess.getTSTRINGRule()); }
	 ruleTSTRING
{ after(grammarAccess.getTSTRINGRule()); } 
	 EOF 
;

// Rule TSTRING
ruleTSTRING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTSTRINGAccess().getGroup()); }
(rule__TSTRING__Group__0)
{ after(grammarAccess.getTSTRINGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFILE
entryRuleFILE 
:
{ before(grammarAccess.getFILERule()); }
	 ruleFILE
{ after(grammarAccess.getFILERule()); } 
	 EOF 
;

// Rule FILE
ruleFILE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFILEAccess().getGroup()); }
(rule__FILE__Group__0)
{ after(grammarAccess.getFILEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePATH_ID
entryRulePATH_ID 
:
{ before(grammarAccess.getPATH_IDRule()); }
	 rulePATH_ID
{ after(grammarAccess.getPATH_IDRule()); } 
	 EOF 
;

// Rule PATH_ID
rulePATH_ID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPATH_IDAccess().getAlternatives()); }
(rule__PATH_ID__Alternatives)
{ after(grammarAccess.getPATH_IDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__WMLRoot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getTagsAssignment_0()); }
(rule__WMLRoot__TagsAssignment_0)
{ after(grammarAccess.getWMLRootAccess().getTagsAssignment_0()); }
)

    |(
{ before(grammarAccess.getWMLRootAccess().getMacrosAssignment_1()); }
(rule__WMLRoot__MacrosAssignment_1)
{ after(grammarAccess.getWMLRootAccess().getMacrosAssignment_1()); }
)

    |(
{ before(grammarAccess.getWMLRootAccess().getMacrosDefinesAssignment_2()); }
(rule__WMLRoot__MacrosDefinesAssignment_2)
{ after(grammarAccess.getWMLRootAccess().getMacrosDefinesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTagsAssignment_4_0()); }
(rule__WMLTag__TagsAssignment_4_0)
{ after(grammarAccess.getWMLTagAccess().getTagsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getWMLTagAccess().getMacrosAssignment_4_1()); }
(rule__WMLTag__MacrosAssignment_4_1)
{ after(grammarAccess.getWMLTagAccess().getMacrosAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getWMLTagAccess().getMacrosDefinesAssignment_4_2()); }
(rule__WMLTag__MacrosDefinesAssignment_4_2)
{ after(grammarAccess.getWMLTagAccess().getMacrosDefinesAssignment_4_2()); }
)

    |(
{ before(grammarAccess.getWMLTagAccess().getKeysAssignment_4_3()); }
(rule__WMLTag__KeysAssignment_4_3)
{ after(grammarAccess.getWMLTagAccess().getKeysAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLAbstractMacroCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroIncludeParserRuleCall_0()); }
	ruleWMLMacroInclude
{ after(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroIncludeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroCallParserRuleCall_1()); }
	ruleWMLMacroCall
{ after(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroCallParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__ArgsAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getArgsIDTerminalRuleCall_2_0_0()); }
	RULE_ID
{ after(grammarAccess.getWMLMacroCallAccess().getArgsIDTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getArgsSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getWMLMacroCallAccess().getArgsSTRINGTerminalRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getArgsTSTRINGParserRuleCall_2_0_2()); }
	ruleTSTRING
{ after(grammarAccess.getWMLMacroCallAccess().getArgsTSTRINGParserRuleCall_2_0_2()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getArgsANY_OTHERTerminalRuleCall_2_0_3()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getWMLMacroCallAccess().getArgsANY_OTHERTerminalRuleCall_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getParamsAssignment_3_0()); }
(rule__WMLMacroCall__ParamsAssignment_3_0)
{ after(grammarAccess.getWMLMacroCallAccess().getParamsAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getTagsAssignment_3_1()); }
(rule__WMLMacroCall__TagsAssignment_3_1)
{ after(grammarAccess.getWMLMacroCallAccess().getTagsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getMacrosAssignment_3_2()); }
(rule__WMLMacroCall__MacrosAssignment_3_2)
{ after(grammarAccess.getWMLMacroCallAccess().getMacrosAssignment_3_2()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getMacrosDefinesAssignment_3_3()); }
(rule__WMLMacroCall__MacrosDefinesAssignment_3_3)
{ after(grammarAccess.getWMLMacroCallAccess().getMacrosDefinesAssignment_3_3()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getKeysAssignment_3_4()); }
(rule__WMLMacroCall__KeysAssignment_3_4)
{ after(grammarAccess.getWMLMacroCallAccess().getKeysAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getParamsAssignment_1_0()); }
(rule__WMLMacroDefine__ParamsAssignment_1_0)
{ after(grammarAccess.getWMLMacroDefineAccess().getParamsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getWMLMacroDefineAccess().getTagsAssignment_1_1()); }
(rule__WMLMacroDefine__TagsAssignment_1_1)
{ after(grammarAccess.getWMLMacroDefineAccess().getTagsAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getWMLMacroDefineAccess().getMacrosAssignment_1_2()); }
(rule__WMLMacroDefine__MacrosAssignment_1_2)
{ after(grammarAccess.getWMLMacroDefineAccess().getMacrosAssignment_1_2()); }
)

    |(
{ before(grammarAccess.getWMLMacroDefineAccess().getMacrosDefinesAssignment_1_3()); }
(rule__WMLMacroDefine__MacrosDefinesAssignment_1_3)
{ after(grammarAccess.getWMLMacroDefineAccess().getMacrosDefinesAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getWMLMacroDefineAccess().getKeysAssignment_1_4()); }
(rule__WMLMacroDefine__KeysAssignment_1_4)
{ after(grammarAccess.getWMLMacroDefineAccess().getKeysAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyExtraArgs__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyExtraArgsAccess().getWMLMacroCallParserRuleCall_0()); }
	ruleWMLMacroCall
{ after(grammarAccess.getWMLKeyExtraArgsAccess().getWMLMacroCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLKeyExtraArgsAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getWMLKeyExtraArgsAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWMLKeyExtraArgsAccess().getTSTRINGParserRuleCall_2()); }
	ruleTSTRING
{ after(grammarAccess.getWMLKeyExtraArgsAccess().getTSTRINGParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCallParameter__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getWMLMacroCallParameterAccess().getIDTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
{ after(grammarAccess.getWMLMacroCallParameterAccess().getSTRINGTerminalRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getTSTRINGParserRuleCall_1_2()); }
	ruleTSTRING
{ after(grammarAccess.getWMLMacroCallParameterAccess().getTSTRINGParserRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getFILEParserRuleCall_1_3()); }
	ruleFILE
{ after(grammarAccess.getWMLMacroCallParameterAccess().getFILEParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLINTListParserRuleCall_0()); }
	ruleWMLINTList
{ after(grammarAccess.getWMLKeyValueAccess().getWMLINTListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLIDListParserRuleCall_1()); }
	ruleWMLIDList
{ after(grammarAccess.getWMLKeyValueAccess().getWMLIDListParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLMacroCallParserRuleCall_2()); }
	ruleWMLMacroCall
{ after(grammarAccess.getWMLKeyValueAccess().getWMLMacroCallParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getWMLKeyValueAccess().getSTRINGTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getTSTRINGParserRuleCall_4()); }
	ruleTSTRING
{ after(grammarAccess.getWMLKeyValueAccess().getTSTRINGParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLPathParserRuleCall_5()); }
	ruleWMLPath
{ after(grammarAccess.getWMLKeyValueAccess().getWMLPathParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getFILEParserRuleCall_6()); }
	ruleFILE
{ after(grammarAccess.getWMLKeyValueAccess().getFILEParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PATH_ID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPATH_IDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPATH_IDAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPATH_IDAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getPATH_IDAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__WMLTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__0__Impl
	rule__WMLTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__1__Impl
	rule__WMLTag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getPlusAssignment_1()); }
(rule__WMLTag__PlusAssignment_1)?
{ after(grammarAccess.getWMLTagAccess().getPlusAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__2__Impl
	rule__WMLTag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameAssignment_2()); }
(rule__WMLTag__NameAssignment_2)
{ after(grammarAccess.getWMLTagAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__3__Impl
	rule__WMLTag__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__4__Impl
	rule__WMLTag__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getAlternatives_4()); }
(rule__WMLTag__Alternatives_4)*
{ after(grammarAccess.getWMLTagAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__5__Impl
	rule__WMLTag__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getLeftSquareBracketSolidusKeyword_5()); }

	'[/' 

{ after(grammarAccess.getWMLTagAccess().getLeftSquareBracketSolidusKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__6__Impl
	rule__WMLTag__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndNameAssignment_6()); }
(rule__WMLTag__EndNameAssignment_6)
{ after(grammarAccess.getWMLTagAccess().getEndNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_7()); }

	']' 

{ after(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__WMLMacroInclude__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroInclude__Group__0__Impl
	rule__WMLMacroInclude__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getWMLMacroIncludeAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroInclude__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroInclude__Group__1__Impl
	rule__WMLMacroInclude__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getNameAssignment_1()); }
(rule__WMLMacroInclude__NameAssignment_1)
{ after(grammarAccess.getWMLMacroIncludeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroInclude__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroInclude__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getWMLMacroIncludeAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WMLMacroCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__0__Impl
	rule__WMLMacroCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getWMLMacroCallAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__1__Impl
	rule__WMLMacroCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getNameAssignment_1()); }
(rule__WMLMacroCall__NameAssignment_1)
{ after(grammarAccess.getWMLMacroCallAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__2__Impl
	rule__WMLMacroCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getArgsAssignment_2()); }
(rule__WMLMacroCall__ArgsAssignment_2)*
{ after(grammarAccess.getWMLMacroCallAccess().getArgsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__3__Impl
	rule__WMLMacroCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getAlternatives_3()); }
(rule__WMLMacroCall__Alternatives_3)*
{ after(grammarAccess.getWMLMacroCallAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getWMLMacroCallAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WMLMacroDefine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroDefine__Group__0__Impl
	rule__WMLMacroDefine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getDEFINETerminalRuleCall_0()); }
	RULE_DEFINE
{ after(grammarAccess.getWMLMacroDefineAccess().getDEFINETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroDefine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroDefine__Group__1__Impl
	rule__WMLMacroDefine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getAlternatives_1()); }
(rule__WMLMacroDefine__Alternatives_1)*
{ after(grammarAccess.getWMLMacroDefineAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroDefine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroDefine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getENDDEFINETerminalRuleCall_2()); }
	RULE_ENDDEFINE
{ after(grammarAccess.getWMLMacroDefineAccess().getENDDEFINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WMLKey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__0__Impl
	rule__WMLKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getNameAssignment_0()); }
(rule__WMLKey__NameAssignment_0)
{ after(grammarAccess.getWMLKeyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__1__Impl
	rule__WMLKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__2__Impl
	rule__WMLKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
(rule__WMLKey__ValueAssignment_2)
{ after(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getGroup_3()); }
(rule__WMLKey__Group_3__0)*
{ after(grammarAccess.getWMLKeyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WMLKey__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__0__Impl
	rule__WMLKey__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getPlusSignKeyword_3_0()); }

	'+' 

{ after(grammarAccess.getWMLKeyAccess().getPlusSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getExtraArgsAssignment_3_1()); }
(rule__WMLKey__ExtraArgsAssignment_3_1)
{ after(grammarAccess.getWMLKeyAccess().getExtraArgsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WMLMacroCallParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCallParameter__Group__0__Impl
	rule__WMLMacroCallParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCallParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getWMLMacroCallParameterAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCallParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCallParameter__Group__1__Impl
	rule__WMLMacroCallParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCallParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getAlternatives_1()); }
(rule__WMLMacroCallParameter__Alternatives_1)
{ after(grammarAccess.getWMLMacroCallParameterAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCallParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCallParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCallParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallParameterAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getWMLMacroCallParameterAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WMLPath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPath__Group__0__Impl
	rule__WMLPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPathAccess().getTildeKeyword_0()); }
(
	'~' 
)?
{ after(grammarAccess.getWMLPathAccess().getTildeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLPath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPath__Group__1__Impl
	rule__WMLPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPathAccess().getPATH_IDParserRuleCall_1()); }
	rulePATH_ID
{ after(grammarAccess.getWMLPathAccess().getPATH_IDParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLPath__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPath__Group__2__Impl
	rule__WMLPath__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPath__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWMLPathAccess().getGroup_2()); }
(rule__WMLPath__Group_2__0)
{ after(grammarAccess.getWMLPathAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getWMLPathAccess().getGroup_2()); }
(rule__WMLPath__Group_2__0)*
{ after(grammarAccess.getWMLPathAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLPath__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPath__Group__3__Impl
	rule__WMLPath__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPath__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPathAccess().getFILEParserRuleCall_3()); }
(	ruleFILE)?
{ after(grammarAccess.getWMLPathAccess().getFILEParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLPath__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPath__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPath__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPathAccess().getSolidusKeyword_4()); }
(
	'/' 
)?
{ after(grammarAccess.getWMLPathAccess().getSolidusKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WMLPath__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPath__Group_2__0__Impl
	rule__WMLPath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPath__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPathAccess().getSolidusKeyword_2_0()); }

	'/' 

{ after(grammarAccess.getWMLPathAccess().getSolidusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLPath__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPath__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPath__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPathAccess().getPATH_IDParserRuleCall_2_1()); }
	rulePATH_ID
{ after(grammarAccess.getWMLPathAccess().getPATH_IDParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WMLIDList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLIDList__Group__0__Impl
	rule__WMLIDList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLIDList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLIDListAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getWMLIDListAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLIDList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLIDList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLIDList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLIDListAccess().getGroup_1()); }
(rule__WMLIDList__Group_1__0)*
{ after(grammarAccess.getWMLIDListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WMLIDList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLIDList__Group_1__0__Impl
	rule__WMLIDList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLIDList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLIDListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getWMLIDListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLIDList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLIDList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLIDList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLIDListAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getWMLIDListAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WMLINTList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLINTList__Group__0__Impl
	rule__WMLINTList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLINTList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLINTListAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getWMLINTListAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLINTList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLINTList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLINTList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLINTListAccess().getGroup_1()); }
(rule__WMLINTList__Group_1__0)*
{ after(grammarAccess.getWMLINTListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WMLINTList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLINTList__Group_1__0__Impl
	rule__WMLINTList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLINTList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLINTListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getWMLINTListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLINTList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLINTList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLINTList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLINTListAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getWMLINTListAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TSTRING__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group__0__Impl
	rule__TSTRING__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().get_Keyword_0()); }

	'_' 

{ after(grammarAccess.getTSTRINGAccess().get_Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSTRING__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getTSTRINGAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FILE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FILE__Group__0__Impl
	rule__FILE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FILE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFILEAccess().getPATH_IDParserRuleCall_0()); }
(	rulePATH_ID)
{ after(grammarAccess.getFILEAccess().getPATH_IDParserRuleCall_0()); }
)
(
{ before(grammarAccess.getFILEAccess().getPATH_IDParserRuleCall_0()); }
(	rulePATH_ID)*
{ after(grammarAccess.getFILEAccess().getPATH_IDParserRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FILE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FILE__Group__1__Impl
	rule__FILE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FILE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFILEAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFILEAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FILE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FILE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FILE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFILEAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getFILEAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__WMLRoot__TagsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getTagsWMLTagParserRuleCall_0_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLRootAccess().getTagsWMLTagParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLRoot__MacrosAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getMacrosWMLAbstractMacroCallParserRuleCall_1_0()); }
	ruleWMLAbstractMacroCall{ after(grammarAccess.getWMLRootAccess().getMacrosWMLAbstractMacroCallParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLRoot__MacrosDefinesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_2_0()); }
	ruleWMLMacroDefine{ after(grammarAccess.getWMLRootAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__PlusAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
(
{ before(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
)

{ after(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__TagsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTagsWMLTagParserRuleCall_4_0_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLTagAccess().getTagsWMLTagParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__MacrosAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getMacrosWMLAbstractMacroCallParserRuleCall_4_1_0()); }
	ruleWMLAbstractMacroCall{ after(grammarAccess.getWMLTagAccess().getMacrosWMLAbstractMacroCallParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__MacrosDefinesAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_4_2_0()); }
	ruleWMLMacroDefine{ after(grammarAccess.getWMLTagAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__KeysAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getKeysWMLKeyParserRuleCall_4_3_0()); }
	ruleWMLKey{ after(grammarAccess.getWMLTagAccess().getKeysWMLKeyParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__EndNameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getWMLTagAccess().getEndNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getNameWMLPathParserRuleCall_1_0()); }
	ruleWMLPath{ after(grammarAccess.getWMLMacroIncludeAccess().getNameWMLPathParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWMLMacroCallAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__ArgsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getArgsAlternatives_2_0()); }
(rule__WMLMacroCall__ArgsAlternatives_2_0)
{ after(grammarAccess.getWMLMacroCallAccess().getArgsAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__ParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getParamsWMLMacroCallParameterParserRuleCall_3_0_0()); }
	ruleWMLMacroCallParameter{ after(grammarAccess.getWMLMacroCallAccess().getParamsWMLMacroCallParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__TagsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getTagsWMLTagParserRuleCall_3_1_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLMacroCallAccess().getTagsWMLTagParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__MacrosAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getMacrosWMLMacroCallParserRuleCall_3_2_0()); }
	ruleWMLMacroCall{ after(grammarAccess.getWMLMacroCallAccess().getMacrosWMLMacroCallParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__MacrosDefinesAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_3_3_0()); }
	ruleWMLMacroDefine{ after(grammarAccess.getWMLMacroCallAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__KeysAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getKeysWMLKeyParserRuleCall_3_4_0()); }
	ruleWMLKey{ after(grammarAccess.getWMLMacroCallAccess().getKeysWMLKeyParserRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__ParamsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getParamsWMLMacroCallParameterParserRuleCall_1_0_0()); }
	ruleWMLMacroCallParameter{ after(grammarAccess.getWMLMacroDefineAccess().getParamsWMLMacroCallParameterParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__TagsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getTagsWMLTagParserRuleCall_1_1_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLMacroDefineAccess().getTagsWMLTagParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__MacrosAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getMacrosWMLMacroCallParserRuleCall_1_2_0()); }
	ruleWMLMacroCall{ after(grammarAccess.getWMLMacroDefineAccess().getMacrosWMLMacroCallParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__MacrosDefinesAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_1_3_0()); }
	ruleWMLMacroDefine{ after(grammarAccess.getWMLMacroDefineAccess().getMacrosDefinesWMLMacroDefineParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__KeysAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getKeysWMLKeyParserRuleCall_1_4_0()); }
	ruleWMLKey{ after(grammarAccess.getWMLMacroDefineAccess().getKeysWMLKeyParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getNameWMLIDListParserRuleCall_0_0()); }
	ruleWMLIDList{ after(grammarAccess.getWMLKeyAccess().getNameWMLIDListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_2_0()); }
	ruleWMLKeyValue{ after(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__ExtraArgsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getExtraArgsWMLKeyExtraArgsParserRuleCall_3_1_0()); }
	ruleWMLKeyExtraArgs{ after(grammarAccess.getWMLKeyAccess().getExtraArgsWMLKeyExtraArgsParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+;

RULE_INT : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_TEXTDOMAIN : '#textdomain' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_DEFINE : '#define' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ENDDEFINE : '#enddef' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


