/*
* generated by Xtext
*/
grammar InternalWML;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.wesnoth.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.wesnoth.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.wesnoth.services.WMLGrammarAccess;

}

@parser::members {
 
 	private WMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(WMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleWMLRoot
entryRuleWMLRoot 
:
{ before(grammarAccess.getWMLRootRule()); }
	 ruleWMLRoot
{ after(grammarAccess.getWMLRootRule()); } 
	 EOF 
;

// Rule WMLRoot
ruleWMLRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLRootAccess().getAlternatives()); }
(rule__WMLRoot__Alternatives)*
{ after(grammarAccess.getWMLRootAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLTag
entryRuleWMLTag 
:
{ before(grammarAccess.getWMLTagRule()); }
	 ruleWMLTag
{ after(grammarAccess.getWMLTagRule()); } 
	 EOF 
;

// Rule WMLTag
ruleWMLTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLTagAccess().getGroup()); }
(rule__WMLTag__Group__0)
{ after(grammarAccess.getWMLTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLKey
entryRuleWMLKey 
:
{ before(grammarAccess.getWMLKeyRule()); }
	 ruleWMLKey
{ after(grammarAccess.getWMLKeyRule()); } 
	 EOF 
;

// Rule WMLKey
ruleWMLKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyAccess().getGroup()); }
(rule__WMLKey__Group__0)
{ after(grammarAccess.getWMLKeyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLAbstractMacroCall
entryRuleWMLAbstractMacroCall 
:
{ before(grammarAccess.getWMLAbstractMacroCallRule()); }
	 ruleWMLAbstractMacroCall
{ after(grammarAccess.getWMLAbstractMacroCallRule()); } 
	 EOF 
;

// Rule WMLAbstractMacroCall
ruleWMLAbstractMacroCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLAbstractMacroCallAccess().getAlternatives()); }
(rule__WMLAbstractMacroCall__Alternatives)
{ after(grammarAccess.getWMLAbstractMacroCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroInclude
entryRuleWMLMacroInclude 
:
{ before(grammarAccess.getWMLMacroIncludeRule()); }
	 ruleWMLMacroInclude
{ after(grammarAccess.getWMLMacroIncludeRule()); } 
	 EOF 
;

// Rule WMLMacroInclude
ruleWMLMacroInclude
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getGroup()); }
(rule__WMLMacroInclude__Group__0)
{ after(grammarAccess.getWMLMacroIncludeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroCall
entryRuleWMLMacroCall 
:
{ before(grammarAccess.getWMLMacroCallRule()); }
	 ruleWMLMacroCall
{ after(grammarAccess.getWMLMacroCallRule()); } 
	 EOF 
;

// Rule WMLMacroCall
ruleWMLMacroCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroCallAccess().getGroup()); }
(rule__WMLMacroCall__Group__0)
{ after(grammarAccess.getWMLMacroCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLAbstractKeyValue
entryRuleWMLAbstractKeyValue 
:
{ before(grammarAccess.getWMLAbstractKeyValueRule()); }
	 ruleWMLAbstractKeyValue
{ after(grammarAccess.getWMLAbstractKeyValueRule()); } 
	 EOF 
;

// Rule WMLAbstractKeyValue
ruleWMLAbstractKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLAbstractKeyValueAccess().getAlternatives()); }
(rule__WMLAbstractKeyValue__Alternatives)
{ after(grammarAccess.getWMLAbstractKeyValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLKeyValue
entryRuleWMLKeyValue 
:
{ before(grammarAccess.getWMLKeyValueRule()); }
	 ruleWMLKeyValue
{ after(grammarAccess.getWMLKeyValueRule()); } 
	 EOF 
;

// Rule WMLKeyValue
ruleWMLKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLANYVALUEParserRuleCall()); }
(	ruleWMLANYVALUE)
{ after(grammarAccess.getWMLKeyValueAccess().getWMLANYVALUEParserRuleCall()); }
)
(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLANYVALUEParserRuleCall()); }
(	ruleWMLANYVALUE)*
{ after(grammarAccess.getWMLKeyValueAccess().getWMLANYVALUEParserRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLANYVALUE
entryRuleWMLANYVALUE 
:
{ before(grammarAccess.getWMLANYVALUERule()); }
	 ruleWMLANYVALUE
{ after(grammarAccess.getWMLANYVALUERule()); } 
	 EOF 
;

// Rule WMLANYVALUE
ruleWMLANYVALUE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLANYVALUEAccess().getAlternatives()); }
(rule__WMLANYVALUE__Alternatives)
{ after(grammarAccess.getWMLANYVALUEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTSTRING
entryRuleTSTRING 
:
{ before(grammarAccess.getTSTRINGRule()); }
	 ruleTSTRING
{ after(grammarAccess.getTSTRINGRule()); } 
	 EOF 
;

// Rule TSTRING
ruleTSTRING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTSTRINGAccess().getGroup()); }
(rule__TSTRING__Group__0)
{ after(grammarAccess.getTSTRINGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__WMLRoot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getTagsAssignment_0()); }
(rule__WMLRoot__TagsAssignment_0)
{ after(grammarAccess.getWMLRootAccess().getTagsAssignment_0()); }
)

    |(
{ before(grammarAccess.getWMLRootAccess().getMacroCallsAssignment_1()); }
(rule__WMLRoot__MacroCallsAssignment_1)
{ after(grammarAccess.getWMLRootAccess().getMacroCallsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTagsAssignment_4_0()); }
(rule__WMLTag__TagsAssignment_4_0)
{ after(grammarAccess.getWMLTagAccess().getTagsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getWMLTagAccess().getKeysAssignment_4_1()); }
(rule__WMLTag__KeysAssignment_4_1)
{ after(grammarAccess.getWMLTagAccess().getKeysAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getWMLTagAccess().getMacroCallsAssignment_4_2()); }
(rule__WMLTag__MacroCallsAssignment_4_2)
{ after(grammarAccess.getWMLTagAccess().getMacroCallsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLAbstractMacroCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroIncludeParserRuleCall_0()); }
	ruleWMLMacroInclude
{ after(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroIncludeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroCallParserRuleCall_1()); }
	ruleWMLMacroCall
{ after(grammarAccess.getWMLAbstractMacroCallAccess().getWMLMacroCallParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLAbstractKeyValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLAbstractKeyValueAccess().getWMLKeyValueParserRuleCall_0()); }
	ruleWMLKeyValue
{ after(grammarAccess.getWMLAbstractKeyValueAccess().getWMLKeyValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLAbstractKeyValueAccess().getWMLMacroCallParserRuleCall_1()); }
	ruleWMLMacroCall
{ after(grammarAccess.getWMLAbstractKeyValueAccess().getWMLMacroCallParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLANYVALUE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLANYVALUEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getWMLANYVALUEAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLANYVALUEAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getWMLANYVALUEAccess().getINTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWMLANYVALUEAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getWMLANYVALUEAccess().getSTRINGTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getWMLANYVALUEAccess().getTSTRINGParserRuleCall_3()); }
	ruleTSTRING
{ after(grammarAccess.getWMLANYVALUEAccess().getTSTRINGParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getWMLANYVALUEAccess().getANY_OTHERTerminalRuleCall_4()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getWMLANYVALUEAccess().getANY_OTHERTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__WMLTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__0__Impl
	rule__WMLTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__1__Impl
	rule__WMLTag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getPlusAssignment_1()); }
(rule__WMLTag__PlusAssignment_1)?
{ after(grammarAccess.getWMLTagAccess().getPlusAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__2__Impl
	rule__WMLTag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameAssignment_2()); }
(rule__WMLTag__NameAssignment_2)
{ after(grammarAccess.getWMLTagAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__3__Impl
	rule__WMLTag__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__4__Impl
	rule__WMLTag__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getAlternatives_4()); }
(rule__WMLTag__Alternatives_4)*
{ after(grammarAccess.getWMLTagAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__5__Impl
	rule__WMLTag__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getLeftSquareBracketSolidusKeyword_5()); }

	'[/' 

{ after(grammarAccess.getWMLTagAccess().getLeftSquareBracketSolidusKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__6__Impl
	rule__WMLTag__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndNameAssignment_6()); }
(rule__WMLTag__EndNameAssignment_6)
{ after(grammarAccess.getWMLTagAccess().getEndNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_7()); }

	']' 

{ after(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__WMLKey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__0__Impl
	rule__WMLKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getNameAssignment_0()); }
(rule__WMLKey__NameAssignment_0)
{ after(grammarAccess.getWMLKeyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__1__Impl
	rule__WMLKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__2__Impl
	rule__WMLKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
(rule__WMLKey__ValueAssignment_2)
{ after(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getGroup_3()); }
(rule__WMLKey__Group_3__0)*
{ after(grammarAccess.getWMLKeyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WMLKey__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__0__Impl
	rule__WMLKey__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getPlusSignKeyword_3_0()); }

	'+' 

{ after(grammarAccess.getWMLKeyAccess().getPlusSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getExtraArgsAssignment_3_1()); }
(rule__WMLKey__ExtraArgsAssignment_3_1)
{ after(grammarAccess.getWMLKeyAccess().getExtraArgsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WMLMacroInclude__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroInclude__Group__0__Impl
	rule__WMLMacroInclude__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getWMLMacroIncludeAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroInclude__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroInclude__Group__1__Impl
	rule__WMLMacroInclude__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getTildeKeyword_1()); }

	'~' 

{ after(grammarAccess.getWMLMacroIncludeAccess().getTildeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroInclude__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroInclude__Group__2__Impl
	rule__WMLMacroInclude__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getPathAssignment_2()); }
(rule__WMLMacroInclude__PathAssignment_2)
{ after(grammarAccess.getWMLMacroIncludeAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroInclude__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroInclude__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getWMLMacroIncludeAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WMLMacroCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__0__Impl
	rule__WMLMacroCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getWMLMacroCallAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__1__Impl
	rule__WMLMacroCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getNameAssignment_1()); }
(rule__WMLMacroCall__NameAssignment_1)
{ after(grammarAccess.getWMLMacroCallAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__2__Impl
	rule__WMLMacroCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getParamsAssignment_2()); }
(rule__WMLMacroCall__ParamsAssignment_2)?
{ after(grammarAccess.getWMLMacroCallAccess().getParamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getWMLMacroCallAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TSTRING__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group__0__Impl
	rule__TSTRING__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().get_Keyword_0()); }

	'_' 

{ after(grammarAccess.getTSTRINGAccess().get_Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSTRING__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getTSTRINGAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__WMLRoot__TagsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getTagsWMLTagParserRuleCall_0_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLRootAccess().getTagsWMLTagParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLRoot__MacroCallsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getMacroCallsWMLAbstractMacroCallParserRuleCall_1_0()); }
	ruleWMLAbstractMacroCall{ after(grammarAccess.getWMLRootAccess().getMacroCallsWMLAbstractMacroCallParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__PlusAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
(
{ before(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
)

{ after(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__TagsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTagsWMLTagParserRuleCall_4_0_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLTagAccess().getTagsWMLTagParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__KeysAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getKeysWMLKeyParserRuleCall_4_1_0()); }
	ruleWMLKey{ after(grammarAccess.getWMLTagAccess().getKeysWMLKeyParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__MacroCallsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getMacroCallsWMLAbstractMacroCallParserRuleCall_4_2_0()); }
	ruleWMLAbstractMacroCall{ after(grammarAccess.getWMLTagAccess().getMacroCallsWMLAbstractMacroCallParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__EndNameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getWMLTagAccess().getEndNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getWMLKeyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueWMLAbstractKeyValueParserRuleCall_2_0()); }
	ruleWMLAbstractKeyValue{ after(grammarAccess.getWMLKeyAccess().getValueWMLAbstractKeyValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__ExtraArgsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getExtraArgsWMLAbstractKeyValueParserRuleCall_3_1_0()); }
	ruleWMLAbstractKeyValue{ after(grammarAccess.getWMLKeyAccess().getExtraArgsWMLAbstractKeyValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroInclude__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroIncludeAccess().getPathWMLKeyValueParserRuleCall_2_0()); }
	ruleWMLKeyValue{ after(grammarAccess.getWMLMacroIncludeAccess().getPathWMLKeyValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWMLMacroCallAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__ParamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getParamsWMLAbstractKeyValueParserRuleCall_2_0()); }
	ruleWMLAbstractKeyValue{ after(grammarAccess.getWMLMacroCallAccess().getParamsWMLAbstractKeyValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t')+;

RULE_EOL : ('\r'|'\n')+;

RULE_ANY_OTHER : .;


