/*
* generated by Xtext
*/
grammar InternalWML;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.wesnoth.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.wesnoth.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.wesnoth.services.WMLGrammarAccess;

}

@parser::members {
 
 	private WMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(WMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleWMLRoot
entryRuleWMLRoot 
:
{ before(grammarAccess.getWMLRootRule()); }
	 ruleWMLRoot
{ after(grammarAccess.getWMLRootRule()); } 
	 EOF 
;

// Rule WMLRoot
ruleWMLRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLRootAccess().getAlternatives()); }
(rule__WMLRoot__Alternatives)*
{ after(grammarAccess.getWMLRootAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacro
entryRuleWMLMacro 
:
{ before(grammarAccess.getWMLMacroRule()); }
	 ruleWMLMacro
{ after(grammarAccess.getWMLMacroRule()); } 
	 EOF 
;

// Rule WMLMacro
ruleWMLMacro
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroAccess().getGroup()); }
(rule__WMLMacro__Group__0)
{ after(grammarAccess.getWMLMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLTag
entryRuleWMLTag 
:
{ before(grammarAccess.getWMLTagRule()); }
	 ruleWMLTag
{ after(grammarAccess.getWMLTagRule()); } 
	 EOF 
;

// Rule WMLTag
ruleWMLTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLTagAccess().getGroup()); }
(rule__WMLTag__Group__0)
{ after(grammarAccess.getWMLTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLEndTag
entryRuleWMLEndTag 
:
{ before(grammarAccess.getWMLEndTagRule()); }
	 ruleWMLEndTag
{ after(grammarAccess.getWMLEndTagRule()); } 
	 EOF 
;

// Rule WMLEndTag
ruleWMLEndTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLEndTagAccess().getGroup()); }
(rule__WMLEndTag__Group__0)
{ after(grammarAccess.getWMLEndTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLKey
entryRuleWMLKey 
:
{ before(grammarAccess.getWMLKeyRule()); }
	 ruleWMLKey
{ after(grammarAccess.getWMLKeyRule()); } 
	 EOF 
;

// Rule WMLKey
ruleWMLKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyAccess().getGroup()); }
(rule__WMLKey__Group__0)
{ after(grammarAccess.getWMLKeyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLKeyValue
entryRuleWMLKeyValue 
:
{ before(grammarAccess.getWMLKeyValueRule()); }
	 ruleWMLKeyValue
{ after(grammarAccess.getWMLKeyValueRule()); } 
	 EOF 
;

// Rule WMLKeyValue
ruleWMLKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyValueAccess().getAlternatives()); }
(rule__WMLKeyValue__Alternatives)
{ after(grammarAccess.getWMLKeyValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFLOAT
entryRuleFLOAT 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FLOAT
ruleFLOAT
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFLOATAccess().getGroup()); }
(rule__FLOAT__Group__0)
{ after(grammarAccess.getFLOATAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTSTRING
entryRuleTSTRING 
:
{ before(grammarAccess.getTSTRINGRule()); }
	 ruleTSTRING
{ after(grammarAccess.getTSTRINGRule()); } 
	 EOF 
;

// Rule TSTRING
ruleTSTRING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTSTRINGAccess().getGroup()); }
(rule__TSTRING__Group__0)
{ after(grammarAccess.getTSTRINGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePATH
entryRulePATH 
:
{ before(grammarAccess.getPATHRule()); }
	 rulePATH
{ after(grammarAccess.getPATHRule()); } 
	 EOF 
;

// Rule PATH
rulePATH
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPATHAccess().getGroup()); }
(rule__PATH__Group__0)
{ after(grammarAccess.getPATHAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDIRECTION
entryRuleDIRECTION 
:
{ before(grammarAccess.getDIRECTIONRule()); }
	 ruleDIRECTION
{ after(grammarAccess.getDIRECTIONRule()); } 
	 EOF 
;

// Rule DIRECTION
ruleDIRECTION
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getDIRECTIONAccess().getGroup()); }
(rule__DIRECTION__Group__0)
{ after(grammarAccess.getDIRECTIONAccess().getGroup()); }
)
(
{ before(grammarAccess.getDIRECTIONAccess().getGroup()); }
(rule__DIRECTION__Group__0)*
{ after(grammarAccess.getDIRECTIONAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLIST
entryRuleLIST 
:
{ before(grammarAccess.getLISTRule()); }
	 ruleLIST
{ after(grammarAccess.getLISTRule()); } 
	 EOF 
;

// Rule LIST
ruleLIST
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLISTAccess().getGroup()); }
(rule__LIST__Group__0)
{ after(grammarAccess.getLISTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePROGRESSIVE
entryRulePROGRESSIVE 
:
{ before(grammarAccess.getPROGRESSIVERule()); }
	 rulePROGRESSIVE
{ after(grammarAccess.getPROGRESSIVERule()); } 
	 EOF 
;

// Rule PROGRESSIVE
rulePROGRESSIVE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getGroup()); }
(rule__PROGRESSIVE__Group__0)
{ after(grammarAccess.getPROGRESSIVEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__WMLRoot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getRtagsAssignment_0()); }
(rule__WMLRoot__RtagsAssignment_0)
{ after(grammarAccess.getWMLRootAccess().getRtagsAssignment_0()); }
)

    |(
{ before(grammarAccess.getWMLRootAccess().getRmacrosAssignment_1()); }
(rule__WMLRoot__RmacrosAssignment_1)
{ after(grammarAccess.getWMLRootAccess().getRmacrosAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacro__ValueAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroAccess().getValueIDTerminalRuleCall_2_0_0()); }
	RULE_ID
{ after(grammarAccess.getWMLMacroAccess().getValueIDTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getWMLMacroAccess().getValueSTRINGTerminalRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValue_Keyword_2_0_2()); }

	'_' 

{ after(grammarAccess.getWMLMacroAccess().getValue_Keyword_2_0_2()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueColonKeyword_2_0_3()); }

	':' 

{ after(grammarAccess.getWMLMacroAccess().getValueColonKeyword_2_0_3()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueHyphenMinusKeyword_2_0_4()); }

	'-' 

{ after(grammarAccess.getWMLMacroAccess().getValueHyphenMinusKeyword_2_0_4()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueFullStopKeyword_2_0_5()); }

	'.' 

{ after(grammarAccess.getWMLMacroAccess().getValueFullStopKeyword_2_0_5()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueLeftParenthesisKeyword_2_0_6()); }

	'(' 

{ after(grammarAccess.getWMLMacroAccess().getValueLeftParenthesisKeyword_2_0_6()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueRightParenthesisKeyword_2_0_7()); }

	')' 

{ after(grammarAccess.getWMLMacroAccess().getValueRightParenthesisKeyword_2_0_7()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueEqualsSignKeyword_2_0_8()); }

	'=' 

{ after(grammarAccess.getWMLMacroAccess().getValueEqualsSignKeyword_2_0_8()); }
)

    |(
{ before(grammarAccess.getWMLMacroAccess().getValueSolidusKeyword_2_0_9()); }

	'/' 

{ after(grammarAccess.getWMLMacroAccess().getValueSolidusKeyword_2_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTtagsAssignment_3_0()); }
(rule__WMLTag__TtagsAssignment_3_0)
{ after(grammarAccess.getWMLTagAccess().getTtagsAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getWMLTagAccess().getTkeysAssignment_3_1()); }
(rule__WMLTag__TkeysAssignment_3_1)
{ after(grammarAccess.getWMLTagAccess().getTkeysAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getWMLTagAccess().getTmacrosAssignment_3_2()); }
(rule__WMLTag__TmacrosAssignment_3_2)
{ after(grammarAccess.getWMLTagAccess().getTmacrosAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueAssignment_0()); }
(rule__WMLKeyValue__Key1ValueAssignment_0)
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey2ValueAssignment_1()); }
(rule__WMLKeyValue__Key2ValueAssignment_1)
{ after(grammarAccess.getWMLKeyValueAccess().getKey2ValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Key1ValueAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueIDTerminalRuleCall_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueIDTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueSTRINGTerminalRuleCall_0_0_1()); }
	RULE_STRING
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueSTRINGTerminalRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueTSTRINGParserRuleCall_0_0_2()); }
	ruleTSTRING
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueTSTRINGParserRuleCall_0_0_2()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueFLOATParserRuleCall_0_0_3()); }
	ruleFLOAT
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueFLOATParserRuleCall_0_0_3()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueIINTTerminalRuleCall_0_0_4()); }
	RULE_IINT
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueIINTTerminalRuleCall_0_0_4()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValuePATHParserRuleCall_0_0_5()); }
	rulePATH
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValuePATHParserRuleCall_0_0_5()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueDIRECTIONParserRuleCall_0_0_6()); }
	ruleDIRECTION
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueDIRECTIONParserRuleCall_0_0_6()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueLISTParserRuleCall_0_0_7()); }
	ruleLIST
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueLISTParserRuleCall_0_0_7()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValuePROGRESSIVEParserRuleCall_0_0_8()); }
	rulePROGRESSIVE
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValuePROGRESSIVEParserRuleCall_0_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PATH__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPATHAccess().getHyphenMinusKeyword_0_1_0()); }

	'-' 

{ after(grammarAccess.getPATHAccess().getHyphenMinusKeyword_0_1_0()); }
)

    |(
{ before(grammarAccess.getPATHAccess().getSolidusKeyword_0_1_1()); }

	'/' 

{ after(grammarAccess.getPATHAccess().getSolidusKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DIRECTION__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDIRECTIONAccess().getNKeyword_0_0()); }

	'n' 

{ after(grammarAccess.getDIRECTIONAccess().getNKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDIRECTIONAccess().getSKeyword_0_1()); }

	's' 

{ after(grammarAccess.getDIRECTIONAccess().getSKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getDIRECTIONAccess().getWKeyword_0_2()); }

	'w' 

{ after(grammarAccess.getDIRECTIONAccess().getWKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getDIRECTIONAccess().getEKeyword_0_3()); }

	'e' 

{ after(grammarAccess.getDIRECTIONAccess().getEKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getDIRECTIONAccess().getSwKeyword_0_4()); }

	'sw' 

{ after(grammarAccess.getDIRECTIONAccess().getSwKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getDIRECTIONAccess().getSeKeyword_0_5()); }

	'se' 

{ after(grammarAccess.getDIRECTIONAccess().getSeKeyword_0_5()); }
)

    |(
{ before(grammarAccess.getDIRECTIONAccess().getNeKeyword_0_6()); }

	'ne' 

{ after(grammarAccess.getDIRECTIONAccess().getNeKeyword_0_6()); }
)

    |(
{ before(grammarAccess.getDIRECTIONAccess().getNwKeyword_0_7()); }

	'nw' 

{ after(grammarAccess.getDIRECTIONAccess().getNwKeyword_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_0_0()); }
	RULE_IINT
{ after(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_0_1()); }
	ruleFLOAT
{ after(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_1_1_0()); }
	RULE_IINT
{ after(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_1_1_1()); }
	ruleFLOAT
{ after(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_3_1_0()); }
	RULE_IINT
{ after(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_3_1_0()); }
)

    |(
{ before(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_3_1_1()); }
	ruleFLOAT
{ after(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Alternatives_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_3_2_1_0()); }
	RULE_IINT
{ after(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_3_2_1_0()); }
)

    |(
{ before(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_3_2_1_1()); }
	ruleFLOAT
{ after(grammarAccess.getPROGRESSIVEAccess().getFLOATParserRuleCall_3_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__WMLMacro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacro__Group__0__Impl
	rule__WMLMacro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getWMLMacroAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacro__Group__1__Impl
	rule__WMLMacro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroAccess().getNameAssignment_1()); }
(rule__WMLMacro__NameAssignment_1)
{ after(grammarAccess.getWMLMacroAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacro__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacro__Group__2__Impl
	rule__WMLMacro__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacro__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroAccess().getValueAssignment_2()); }
(rule__WMLMacro__ValueAssignment_2)*
{ after(grammarAccess.getWMLMacroAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacro__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacro__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacro__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getWMLMacroAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WMLTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__0__Impl
	rule__WMLTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__1__Impl
	rule__WMLTag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameAssignment_1()); }
(rule__WMLTag__NameAssignment_1)
{ after(grammarAccess.getWMLTagAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__2__Impl
	rule__WMLTag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__3__Impl
	rule__WMLTag__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getAlternatives_3()); }
(rule__WMLTag__Alternatives_3)*
{ after(grammarAccess.getWMLTagAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndAssignment_4()); }
(rule__WMLTag__EndAssignment_4)
{ after(grammarAccess.getWMLTagAccess().getEndAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WMLEndTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLEndTag__Group__0__Impl
	rule__WMLEndTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLEndTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLEndTagAccess().getLeftSquareBracketSolidusKeyword_0()); }

	'[/' 

{ after(grammarAccess.getWMLEndTagAccess().getLeftSquareBracketSolidusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLEndTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLEndTag__Group__1__Impl
	rule__WMLEndTag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLEndTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLEndTagAccess().getTagnameAssignment_1()); }
(rule__WMLEndTag__TagnameAssignment_1)
{ after(grammarAccess.getWMLEndTagAccess().getTagnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLEndTag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLEndTag__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLEndTag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLEndTagAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getWMLEndTagAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WMLKey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__0__Impl
	rule__WMLKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getKeyNameAssignment_0()); }
(rule__WMLKey__KeyNameAssignment_0)
{ after(grammarAccess.getWMLKeyAccess().getKeyNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__1__Impl
	rule__WMLKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
(rule__WMLKey__ValueAssignment_2)
{ after(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FLOAT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__0__Impl
	rule__FLOAT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getIINTTerminalRuleCall_0()); }
	RULE_IINT
{ after(grammarAccess.getFLOATAccess().getIINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__1__Impl
	rule__FLOAT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFLOATAccess().getIINTTerminalRuleCall_2()); }
(	RULE_IINT)
{ after(grammarAccess.getFLOATAccess().getIINTTerminalRuleCall_2()); }
)
(
{ before(grammarAccess.getFLOATAccess().getIINTTerminalRuleCall_2()); }
(	RULE_IINT)*
{ after(grammarAccess.getFLOATAccess().getIINTTerminalRuleCall_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TSTRING__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group__0__Impl
	rule__TSTRING__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().getGroup_0()); }
(rule__TSTRING__Group_0__0)
{ after(grammarAccess.getTSTRINGAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSTRING__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getTSTRINGAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TSTRING__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group_0__0__Impl
	rule__TSTRING__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().getSpaceKeyword_0_0()); }
(
	' ' 
)?
{ after(grammarAccess.getTSTRINGAccess().getSpaceKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSTRING__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group_0__1__Impl
	rule__TSTRING__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().get_Keyword_0_1()); }

	'_' 

{ after(grammarAccess.getTSTRINGAccess().get_Keyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSTRING__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSTRING__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TSTRING__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSTRINGAccess().getSpaceKeyword_0_2()); }
(
	' ' 
)?
{ after(grammarAccess.getTSTRINGAccess().getSpaceKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PATH__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PATH__Group__0__Impl
	rule__PATH__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PATH__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPATHAccess().getGroup_0()); }
(rule__PATH__Group_0__0)*
{ after(grammarAccess.getPATHAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PATH__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PATH__Group__1__Impl
	rule__PATH__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PATH__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)
{ after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1()); }
)
(
{ before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PATH__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PATH__Group__2__Impl
	rule__PATH__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PATH__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPATHAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getPATHAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PATH__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PATH__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PATH__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_3()); }
(	RULE_ID)
{ after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_3()); }
)
(
{ before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_3()); }
(	RULE_ID)*
{ after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PATH__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PATH__Group_0__0__Impl
	rule__PATH__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PATH__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0()); }
(	RULE_ID)
{ after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0()); }
)
(
{ before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0()); }
(	RULE_ID)*
{ after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PATH__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PATH__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PATH__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPATHAccess().getAlternatives_0_1()); }
(rule__PATH__Alternatives_0_1)
{ after(grammarAccess.getPATHAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DIRECTION__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DIRECTION__Group__0__Impl
	rule__DIRECTION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DIRECTION__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDIRECTIONAccess().getAlternatives_0()); }
(rule__DIRECTION__Alternatives_0)
{ after(grammarAccess.getDIRECTIONAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DIRECTION__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DIRECTION__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DIRECTION__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDIRECTIONAccess().getCommaKeyword_1()); }
(
	',' 
)?
{ after(grammarAccess.getDIRECTIONAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LIST__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LIST__Group__0__Impl
	rule__LIST__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LIST__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLISTAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getLISTAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LIST__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LIST__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LIST__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLISTAccess().getGroup_1()); }
(rule__LIST__Group_1__0)
{ after(grammarAccess.getLISTAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getLISTAccess().getGroup_1()); }
(rule__LIST__Group_1__0)*
{ after(grammarAccess.getLISTAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LIST__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LIST__Group_1__0__Impl
	rule__LIST__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LIST__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLISTAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getLISTAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LIST__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LIST__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LIST__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLISTAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getLISTAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PROGRESSIVE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group__0__Impl
	rule__PROGRESSIVE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getAlternatives_0()); }
(rule__PROGRESSIVE__Alternatives_0)
{ after(grammarAccess.getPROGRESSIVEAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group__1__Impl
	rule__PROGRESSIVE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getGroup_1()); }
(rule__PROGRESSIVE__Group_1__0)?
{ after(grammarAccess.getPROGRESSIVEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group__2__Impl
	rule__PROGRESSIVE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getGroup_2()); }
(rule__PROGRESSIVE__Group_2__0)?
{ after(grammarAccess.getPROGRESSIVEAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPROGRESSIVEAccess().getGroup_3()); }
(rule__PROGRESSIVE__Group_3__0)
{ after(grammarAccess.getPROGRESSIVEAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getPROGRESSIVEAccess().getGroup_3()); }
(rule__PROGRESSIVE__Group_3__0)*
{ after(grammarAccess.getPROGRESSIVEAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PROGRESSIVE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_1__0__Impl
	rule__PROGRESSIVE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getTildeKeyword_1_0()); }

	'~' 

{ after(grammarAccess.getPROGRESSIVEAccess().getTildeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getAlternatives_1_1()); }
(rule__PROGRESSIVE__Alternatives_1_1)
{ after(grammarAccess.getPROGRESSIVEAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PROGRESSIVE__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_2__0__Impl
	rule__PROGRESSIVE__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getPROGRESSIVEAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_2_1()); }
	RULE_IINT
{ after(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PROGRESSIVE__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3__0__Impl
	rule__PROGRESSIVE__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getPROGRESSIVEAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3__1__Impl
	rule__PROGRESSIVE__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getAlternatives_3_1()); }
(rule__PROGRESSIVE__Alternatives_3_1)
{ after(grammarAccess.getPROGRESSIVEAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3__2__Impl
	rule__PROGRESSIVE__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getGroup_3_2()); }
(rule__PROGRESSIVE__Group_3_2__0)?
{ after(grammarAccess.getPROGRESSIVEAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getGroup_3_3()); }
(rule__PROGRESSIVE__Group_3_3__0)?
{ after(grammarAccess.getPROGRESSIVEAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PROGRESSIVE__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3_2__0__Impl
	rule__PROGRESSIVE__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getTildeKeyword_3_2_0()); }

	'~' 

{ after(grammarAccess.getPROGRESSIVEAccess().getTildeKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getAlternatives_3_2_1()); }
(rule__PROGRESSIVE__Alternatives_3_2_1)
{ after(grammarAccess.getPROGRESSIVEAccess().getAlternatives_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PROGRESSIVE__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3_3__0__Impl
	rule__PROGRESSIVE__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getColonKeyword_3_3_0()); }

	':' 

{ after(grammarAccess.getPROGRESSIVEAccess().getColonKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PROGRESSIVE__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PROGRESSIVE__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PROGRESSIVE__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_3_3_1()); }
	RULE_IINT
{ after(grammarAccess.getPROGRESSIVEAccess().getIINTTerminalRuleCall_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__WMLRoot__RtagsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getRtagsWMLTagParserRuleCall_0_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLRootAccess().getRtagsWMLTagParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLRoot__RmacrosAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getRmacrosWMLMacroParserRuleCall_1_0()); }
	ruleWMLMacro{ after(grammarAccess.getWMLRootAccess().getRmacrosWMLMacroParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacro__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWMLMacroAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacro__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroAccess().getValueAlternatives_2_0()); }
(rule__WMLMacro__ValueAlternatives_2_0)
{ after(grammarAccess.getWMLMacroAccess().getValueAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__TtagsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTtagsWMLTagParserRuleCall_3_0_0()); }
	ruleWMLTag{ after(grammarAccess.getWMLTagAccess().getTtagsWMLTagParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__TkeysAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTkeysWMLKeyParserRuleCall_3_1_0()); }
	ruleWMLKey{ after(grammarAccess.getWMLTagAccess().getTkeysWMLKeyParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__TmacrosAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getTmacrosWMLMacroParserRuleCall_3_2_0()); }
	ruleWMLMacro{ after(grammarAccess.getWMLTagAccess().getTmacrosWMLMacroParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__EndAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndWMLEndTagParserRuleCall_4_0()); }
	ruleWMLEndTag{ after(grammarAccess.getWMLTagAccess().getEndWMLEndTagParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLEndTag__TagnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLEndTagAccess().getTagnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWMLEndTagAccess().getTagnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__KeyNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getKeyNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getWMLKeyAccess().getKeyNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_2_0()); }
	ruleWMLKeyValue{ after(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Key1ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getKey1ValueAlternatives_0_0()); }
(rule__WMLKeyValue__Key1ValueAlternatives_0_0)
{ after(grammarAccess.getWMLKeyValueAccess().getKey1ValueAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Key2ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getKey2ValueWMLMacroParserRuleCall_1_0()); }
	ruleWMLMacro{ after(grammarAccess.getWMLKeyValueAccess().getKey2ValueWMLMacroParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ID : ('a'..'z'|'A'..'Z'|'0'..'9') ('a'..'z'|'A'..'Z'|'_'|' '|'0'..'9')*;

RULE_IINT : ('-'|'+')? ('0'..'9')+;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';


