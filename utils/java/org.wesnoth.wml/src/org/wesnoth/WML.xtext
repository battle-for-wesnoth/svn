/**
 * @author Timotei Dolean
 */
 //grammar org.wesnoth.WML with org.eclipse.xtext.common.Terminals
grammar org.wesnoth.WML hidden(WS, SL_COMMENT)
generate wML "http://www.wesnoth.org/WML"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

//TODO: add cross-reference for variables
//handles TODO:
// - arrays [ ]
// - preprocessor commands: #define, #enddef, etc
// - fix: { { } }

WMLRoot:
	( Tags += WMLTag
	| MacroCalls += WMLMacroCall
	| MacroDefines += WMLMacroDefine
	| Textdomains += WMLTextdomain
	)*
	;

WMLTag:
	'[' (plus?='+')? name=ID ']'
		( Tags += WMLTag
		| Keys += WMLKey
		| MacroCalls += WMLMacroCall // this generates multiple alternatives
		| MacroDefines += WMLMacroDefine
		| Textdomains += WMLTextdomain
		)*
	'[/' endName = ID ']'
	;

WMLKey:
	(name = ID) '='
	value += WMLKeyValueRule+;

WMLKeyValueRule:
	WMLValue | WMLMacroCall | WMLLuaCode;
	
WMLMacroCall:
	name = MACRO;

WMLLuaCode:
	value = LUA_CODE;

WMLMacroDefine:
	name = DEFINE;
//		( Tags += WMLTag
//		| Keys += WMLKey
//		| MacroCalls += WMLMacroCall
//		| MacroDefines += WMLMacroDefine
//		| Textdomains += WMLTextdomain
//		)*;
//		ENDDEF;
	
WMLTextdomain:
	name = TEXTDOMAIN;

WMLValue:
	value = (ID | STRING | ANY_OTHER | '+');

terminal LUA_CODE   : '<<' -> '>>';
terminal MACRO      : '{' -> '}';	
terminal DEFINE     : '#define' -> '#enddef';//!('\n'|'\r')* ('\r'? '\n')?;
//terminal ENDDEF     : '#enddef' !('\n'|'\r')* ('\r'? '\n')?;
terminal TEXTDOMAIN : '#textdomain' !('\n'|'\r')* ('\r'? '\n')?;
terminal SL_COMMENT : '#' !('\n'|'\r')* ('\r'? '\n')?;
terminal ID         : ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|',')+;
terminal STRING     : '"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|"'"|'\\') | !('\\'|'"') )* '"';
terminal WS         : (' '|'\t'|'\r'|'\n')+;
terminal ANY_OTHER  : .;
