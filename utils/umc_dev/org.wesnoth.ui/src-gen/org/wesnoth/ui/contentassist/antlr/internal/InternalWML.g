/*
* generated by Xtext
*/
grammar InternalWML;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.wesnoth.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.wesnoth.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.wesnoth.services.WMLGrammarAccess;

}

@parser::members {
 
 	private WMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(WMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleWMLRoot
entryRuleWMLRoot 
:
{ before(grammarAccess.getWMLRootRule()); }
	 ruleWMLRoot
{ after(grammarAccess.getWMLRootRule()); } 
	 EOF 
;

// Rule WMLRoot
ruleWMLRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLRootAccess().getExpressionsAssignment()); }
(rule__WMLRoot__ExpressionsAssignment)*
{ after(grammarAccess.getWMLRootAccess().getExpressionsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLTag
entryRuleWMLTag 
:
{ before(grammarAccess.getWMLTagRule()); }
	 ruleWMLTag
{ after(grammarAccess.getWMLTagRule()); } 
	 EOF 
;

// Rule WMLTag
ruleWMLTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLTagAccess().getGroup()); }
(rule__WMLTag__Group__0)
{ after(grammarAccess.getWMLTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLKey
entryRuleWMLKey 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getWMLKeyRule()); }
	 ruleWMLKey
{ after(grammarAccess.getWMLKeyRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule WMLKey
ruleWMLKey
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyAccess().getGroup()); }
(rule__WMLKey__Group__0)
{ after(grammarAccess.getWMLKeyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleWMLKeyValue
entryRuleWMLKeyValue 
:
{ before(grammarAccess.getWMLKeyValueRule()); }
	 ruleWMLKeyValue
{ after(grammarAccess.getWMLKeyValueRule()); } 
	 EOF 
;

// Rule WMLKeyValue
ruleWMLKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLKeyValueAccess().getAlternatives()); }
(rule__WMLKeyValue__Alternatives)
{ after(grammarAccess.getWMLKeyValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroCall
entryRuleWMLMacroCall 
:
{ before(grammarAccess.getWMLMacroCallRule()); }
	 ruleWMLMacroCall
{ after(grammarAccess.getWMLMacroCallRule()); } 
	 EOF 
;

// Rule WMLMacroCall
ruleWMLMacroCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroCallAccess().getGroup()); }
(rule__WMLMacroCall__Group__0)
{ after(grammarAccess.getWMLMacroCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLArrayCall
entryRuleWMLArrayCall 
:
{ before(grammarAccess.getWMLArrayCallRule()); }
	 ruleWMLArrayCall
{ after(grammarAccess.getWMLArrayCallRule()); } 
	 EOF 
;

// Rule WMLArrayCall
ruleWMLArrayCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLArrayCallAccess().getGroup()); }
(rule__WMLArrayCall__Group__0)
{ after(grammarAccess.getWMLArrayCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroDefine
entryRuleWMLMacroDefine 
:
{ before(grammarAccess.getWMLMacroDefineRule()); }
	 ruleWMLMacroDefine
{ after(grammarAccess.getWMLMacroDefineRule()); } 
	 EOF 
;

// Rule WMLMacroDefine
ruleWMLMacroDefine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getGroup()); }
(rule__WMLMacroDefine__Group__0)
{ after(grammarAccess.getWMLMacroDefineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLPreprocIF
entryRuleWMLPreprocIF 
:
{ before(grammarAccess.getWMLPreprocIFRule()); }
	 ruleWMLPreprocIF
{ after(grammarAccess.getWMLPreprocIFRule()); } 
	 EOF 
;

// Rule WMLPreprocIF
ruleWMLPreprocIF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getGroup()); }
(rule__WMLPreprocIF__Group__0)
{ after(grammarAccess.getWMLPreprocIFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLRootExpression
entryRuleWMLRootExpression 
:
{ before(grammarAccess.getWMLRootExpressionRule()); }
	 ruleWMLRootExpression
{ after(grammarAccess.getWMLRootExpressionRule()); } 
	 EOF 
;

// Rule WMLRootExpression
ruleWMLRootExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLRootExpressionAccess().getAlternatives()); }
(rule__WMLRootExpression__Alternatives)
{ after(grammarAccess.getWMLRootExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLExpression
entryRuleWMLExpression 
:
{ before(grammarAccess.getWMLExpressionRule()); }
	 ruleWMLExpression
{ after(grammarAccess.getWMLExpressionRule()); } 
	 EOF 
;

// Rule WMLExpression
ruleWMLExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLExpressionAccess().getAlternatives()); }
(rule__WMLExpression__Alternatives)
{ after(grammarAccess.getWMLExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLValuedExpression
entryRuleWMLValuedExpression 
:
{ before(grammarAccess.getWMLValuedExpressionRule()); }
	 ruleWMLValuedExpression
{ after(grammarAccess.getWMLValuedExpressionRule()); } 
	 EOF 
;

// Rule WMLValuedExpression
ruleWMLValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLValuedExpressionAccess().getAlternatives()); }
(rule__WMLValuedExpression__Alternatives)
{ after(grammarAccess.getWMLValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLTextdomain
entryRuleWMLTextdomain 
:
{ before(grammarAccess.getWMLTextdomainRule()); }
	 ruleWMLTextdomain
{ after(grammarAccess.getWMLTextdomainRule()); } 
	 EOF 
;

// Rule WMLTextdomain
ruleWMLTextdomain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLTextdomainAccess().getNameAssignment()); }
(rule__WMLTextdomain__NameAssignment)
{ after(grammarAccess.getWMLTextdomainAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLLuaCode
entryRuleWMLLuaCode 
:
{ before(grammarAccess.getWMLLuaCodeRule()); }
	 ruleWMLLuaCode
{ after(grammarAccess.getWMLLuaCodeRule()); } 
	 EOF 
;

// Rule WMLLuaCode
ruleWMLLuaCode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLLuaCodeAccess().getValueAssignment()); }
(rule__WMLLuaCode__ValueAssignment)
{ after(grammarAccess.getWMLLuaCodeAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLMacroParameter
entryRuleWMLMacroParameter 
:
{ before(grammarAccess.getWMLMacroParameterRule()); }
	 ruleWMLMacroParameter
{ after(grammarAccess.getWMLMacroParameterRule()); } 
	 EOF 
;

// Rule WMLMacroParameter
ruleWMLMacroParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLMacroParameterAccess().getAlternatives()); }
(rule__WMLMacroParameter__Alternatives)
{ after(grammarAccess.getWMLMacroParameterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWMLValue
entryRuleWMLValue 
:
{ before(grammarAccess.getWMLValueRule()); }
	 ruleWMLValue
{ after(grammarAccess.getWMLValueRule()); } 
	 EOF 
;

// Rule WMLValue
ruleWMLValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWMLValueAccess().getAlternatives()); }
(rule__WMLValue__Alternatives)
{ after(grammarAccess.getWMLValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacroTokens
entryRuleMacroTokens 
:
{ before(grammarAccess.getMacroTokensRule()); }
	 ruleMacroTokens
{ after(grammarAccess.getMacroTokensRule()); } 
	 EOF 
;

// Rule MacroTokens
ruleMacroTokens
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroTokensAccess().getAlternatives()); }
(rule__MacroTokens__Alternatives)
{ after(grammarAccess.getMacroTokensAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__WMLKey__EolAlternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEolEOLTerminalRuleCall_4_0_0()); }
	RULE_EOL
{ after(grammarAccess.getWMLKeyAccess().getEolEOLTerminalRuleCall_4_0_0()); }
)

    |(
{ before(grammarAccess.getWMLKeyAccess().getEolSL_COMMENTTerminalRuleCall_4_0_1()); }
	RULE_SL_COMMENT
{ after(grammarAccess.getWMLKeyAccess().getEolSL_COMMENTTerminalRuleCall_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getGroup_0()); }
(rule__WMLKeyValue__Group_0__0)
{ after(grammarAccess.getWMLKeyValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLMacroCallParserRuleCall_1()); }
	ruleWMLMacroCall
{ after(grammarAccess.getWMLKeyValueAccess().getWMLMacroCallParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLLuaCodeParserRuleCall_2()); }
	ruleWMLLuaCode
{ after(grammarAccess.getWMLKeyValueAccess().getWMLLuaCodeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLArrayCallParserRuleCall_3()); }
	ruleWMLArrayCall
{ after(grammarAccess.getWMLKeyValueAccess().getWMLArrayCallParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getParamsAssignment_4_0()); }
(rule__WMLMacroCall__ParamsAssignment_4_0)
{ after(grammarAccess.getWMLMacroCallAccess().getParamsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getWMLMacroCallAccess().getExtraMacrosAssignment_4_1()); }
(rule__WMLMacroCall__ExtraMacrosAssignment_4_1)
{ after(grammarAccess.getWMLMacroCallAccess().getExtraMacrosAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getNameIFDEFTerminalRuleCall_0_0_0()); }
	RULE_IFDEF
{ after(grammarAccess.getWMLPreprocIFAccess().getNameIFDEFTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getWMLPreprocIFAccess().getNameIFNDEFTerminalRuleCall_0_0_1()); }
	RULE_IFNDEF
{ after(grammarAccess.getWMLPreprocIFAccess().getNameIFNDEFTerminalRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getWMLPreprocIFAccess().getNameIFHAVETerminalRuleCall_0_0_2()); }
	RULE_IFHAVE
{ after(grammarAccess.getWMLPreprocIFAccess().getNameIFHAVETerminalRuleCall_0_0_2()); }
)

    |(
{ before(grammarAccess.getWMLPreprocIFAccess().getNameIFNHAVETerminalRuleCall_0_0_3()); }
	RULE_IFNHAVE
{ after(grammarAccess.getWMLPreprocIFAccess().getNameIFNHAVETerminalRuleCall_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getExpressionsAssignment_1_0()); }
(rule__WMLPreprocIF__ExpressionsAssignment_1_0)
{ after(grammarAccess.getWMLPreprocIFAccess().getExpressionsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getWMLPreprocIFAccess().getElsesAssignment_1_1()); }
(rule__WMLPreprocIF__ElsesAssignment_1_1)
{ after(grammarAccess.getWMLPreprocIFAccess().getElsesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLRootExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootExpressionAccess().getWMLTagParserRuleCall_0()); }
	ruleWMLTag
{ after(grammarAccess.getWMLRootExpressionAccess().getWMLTagParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLRootExpressionAccess().getWMLMacroCallParserRuleCall_1()); }
	ruleWMLMacroCall
{ after(grammarAccess.getWMLRootExpressionAccess().getWMLMacroCallParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWMLRootExpressionAccess().getWMLMacroDefineParserRuleCall_2()); }
	ruleWMLMacroDefine
{ after(grammarAccess.getWMLRootExpressionAccess().getWMLMacroDefineParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getWMLRootExpressionAccess().getWMLTextdomainParserRuleCall_3()); }
	ruleWMLTextdomain
{ after(grammarAccess.getWMLRootExpressionAccess().getWMLTextdomainParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getWMLRootExpressionAccess().getWMLPreprocIFParserRuleCall_4()); }
	ruleWMLPreprocIF
{ after(grammarAccess.getWMLRootExpressionAccess().getWMLPreprocIFParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLExpressionAccess().getWMLRootExpressionParserRuleCall_0()); }
	ruleWMLRootExpression
{ after(grammarAccess.getWMLExpressionAccess().getWMLRootExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLExpressionAccess().getWMLKeyParserRuleCall_1()); }
	ruleWMLKey
{ after(grammarAccess.getWMLExpressionAccess().getWMLKeyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLValuedExpressionAccess().getWMLExpressionParserRuleCall_0()); }
	ruleWMLExpression
{ after(grammarAccess.getWMLValuedExpressionAccess().getWMLExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLValuedExpressionAccess().getGroup_1()); }
(rule__WMLValuedExpression__Group_1__0)
{ after(grammarAccess.getWMLValuedExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroParameter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroParameterAccess().getWMLValueParserRuleCall_0()); }
	ruleWMLValue
{ after(grammarAccess.getWMLMacroParameterAccess().getWMLValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLMacroParameterAccess().getMacroTokensParserRuleCall_1()); }
	ruleMacroTokens
{ after(grammarAccess.getWMLMacroParameterAccess().getMacroTokensParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLValueAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getWMLValueAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getWMLValueAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().get_Keyword_2()); }

	'_' 

{ after(grammarAccess.getWMLValueAccess().get_Keyword_2()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getTildeKeyword_3()); }

	'~' 

{ after(grammarAccess.getWMLValueAccess().getTildeKeyword_3()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getFullStopKeyword_4()); }

	'.' 

{ after(grammarAccess.getWMLValueAccess().getFullStopKeyword_4()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getFullStopSolidusKeyword_5()); }

	'./' 

{ after(grammarAccess.getWMLValueAccess().getFullStopSolidusKeyword_5()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getDollarSignKeyword_6()); }

	'$' 

{ after(grammarAccess.getWMLValueAccess().getDollarSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getSolidusKeyword_7()); }

	'/' 

{ after(grammarAccess.getWMLValueAccess().getSolidusKeyword_7()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getLeftParenthesisKeyword_8()); }

	'(' 

{ after(grammarAccess.getWMLValueAccess().getLeftParenthesisKeyword_8()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getWMLValueAccess().getRightParenthesisKeyword_9()); }
)

    |(
{ before(grammarAccess.getWMLValueAccess().getANY_OTHERTerminalRuleCall_10()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getWMLValueAccess().getANY_OTHERTerminalRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroTokens__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroTokensAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getMacroTokensAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getMacroTokensAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getMacroTokensAccess().getLeftSquareBracketKeyword_1()); }
)

    |(
{ before(grammarAccess.getMacroTokensAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getMacroTokensAccess().getRightSquareBracketKeyword_2()); }
)

    |(
{ before(grammarAccess.getMacroTokensAccess().getPlusSignKeyword_3()); }

	'+' 

{ after(grammarAccess.getMacroTokensAccess().getPlusSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getMacroTokensAccess().getLeftSquareBracketSolidusKeyword_4()); }

	'[/' 

{ after(grammarAccess.getMacroTokensAccess().getLeftSquareBracketSolidusKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__WMLTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__0__Impl
	rule__WMLTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getWMLTagAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__1__Impl
	rule__WMLTag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getPlusAssignment_1()); }
(rule__WMLTag__PlusAssignment_1)?
{ after(grammarAccess.getWMLTagAccess().getPlusAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__2__Impl
	rule__WMLTag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameAssignment_2()); }
(rule__WMLTag__NameAssignment_2)
{ after(grammarAccess.getWMLTagAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__3__Impl
	rule__WMLTag__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__4__Impl
	rule__WMLTag__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getExpressionsAssignment_4()); }
(rule__WMLTag__ExpressionsAssignment_4)*
{ after(grammarAccess.getWMLTagAccess().getExpressionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__5__Impl
	rule__WMLTag__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getLeftSquareBracketSolidusKeyword_5()); }

	'[/' 

{ after(grammarAccess.getWMLTagAccess().getLeftSquareBracketSolidusKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__6__Impl
	rule__WMLTag__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndNameAssignment_6()); }
(rule__WMLTag__EndNameAssignment_6)
{ after(grammarAccess.getWMLTagAccess().getEndNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLTag__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLTag__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_7()); }

	']' 

{ after(grammarAccess.getWMLTagAccess().getRightSquareBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__WMLKey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__0__Impl
	rule__WMLKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getNameAssignment_0()); }
(rule__WMLKey__NameAssignment_0)
{ after(grammarAccess.getWMLKeyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__1__Impl
	rule__WMLKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getWMLKeyAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__2__Impl
	rule__WMLKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
(rule__WMLKey__ValueAssignment_2)*
{ after(grammarAccess.getWMLKeyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__3__Impl
	rule__WMLKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getGroup_3()); }
(rule__WMLKey__Group_3__0)*
{ after(grammarAccess.getWMLKeyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEolAssignment_4()); }
(rule__WMLKey__EolAssignment_4)
{ after(grammarAccess.getWMLKeyAccess().getEolAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WMLKey__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__0__Impl
	rule__WMLKey__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEOLTerminalRuleCall_3_0()); }
(	RULE_EOL)?
{ after(grammarAccess.getWMLKeyAccess().getEOLTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__1__Impl
	rule__WMLKey__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getPlusSignKeyword_3_1()); }

	'+' 

{ after(grammarAccess.getWMLKeyAccess().getPlusSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__2__Impl
	rule__WMLKey__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEOLTerminalRuleCall_3_2()); }
(	RULE_EOL)?
{ after(grammarAccess.getWMLKeyAccess().getEOLTerminalRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKey__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKey__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWMLKeyAccess().getValueAssignment_3_3()); }
(rule__WMLKey__ValueAssignment_3_3)
{ after(grammarAccess.getWMLKeyAccess().getValueAssignment_3_3()); }
)
(
{ before(grammarAccess.getWMLKeyAccess().getValueAssignment_3_3()); }
(rule__WMLKey__ValueAssignment_3_3)*
{ after(grammarAccess.getWMLKeyAccess().getValueAssignment_3_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WMLKeyValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKeyValue__Group_0__0__Impl
	rule__WMLKeyValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLKeyValueAction_0_0()); }
(

)
{ after(grammarAccess.getWMLKeyValueAccess().getWMLKeyValueAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLKeyValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLKeyValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKeyValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyValueAccess().getWMLValueParserRuleCall_0_1()); }
	ruleWMLValue
{ after(grammarAccess.getWMLKeyValueAccess().getWMLValueParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WMLMacroCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__0__Impl
	rule__WMLMacroCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getWMLMacroCallAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__1__Impl
	rule__WMLMacroCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getPointAssignment_1()); }
(rule__WMLMacroCall__PointAssignment_1)?
{ after(grammarAccess.getWMLMacroCallAccess().getPointAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__2__Impl
	rule__WMLMacroCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getRelativeAssignment_2()); }
(rule__WMLMacroCall__RelativeAssignment_2)?
{ after(grammarAccess.getWMLMacroCallAccess().getRelativeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__3__Impl
	rule__WMLMacroCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getNameAssignment_3()); }
(rule__WMLMacroCall__NameAssignment_3)
{ after(grammarAccess.getWMLMacroCallAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__4__Impl
	rule__WMLMacroCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getAlternatives_4()); }
(rule__WMLMacroCall__Alternatives_4)*
{ after(grammarAccess.getWMLMacroCallAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getWMLMacroCallAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__WMLArrayCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLArrayCall__Group__0__Impl
	rule__WMLArrayCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLArrayCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLArrayCallAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getWMLArrayCallAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLArrayCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLArrayCall__Group__1__Impl
	rule__WMLArrayCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLArrayCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWMLArrayCallAccess().getValueAssignment_1()); }
(rule__WMLArrayCall__ValueAssignment_1)
{ after(grammarAccess.getWMLArrayCallAccess().getValueAssignment_1()); }
)
(
{ before(grammarAccess.getWMLArrayCallAccess().getValueAssignment_1()); }
(rule__WMLArrayCall__ValueAssignment_1)*
{ after(grammarAccess.getWMLArrayCallAccess().getValueAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLArrayCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLArrayCall__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLArrayCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLArrayCallAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getWMLArrayCallAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WMLMacroDefine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroDefine__Group__0__Impl
	rule__WMLMacroDefine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getNameAssignment_0()); }
(rule__WMLMacroDefine__NameAssignment_0)
{ after(grammarAccess.getWMLMacroDefineAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroDefine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroDefine__Group__1__Impl
	rule__WMLMacroDefine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getExpressionsAssignment_1()); }
(rule__WMLMacroDefine__ExpressionsAssignment_1)*
{ after(grammarAccess.getWMLMacroDefineAccess().getExpressionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLMacroDefine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLMacroDefine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getEndNameAssignment_2()); }
(rule__WMLMacroDefine__EndNameAssignment_2)
{ after(grammarAccess.getWMLMacroDefineAccess().getEndNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WMLPreprocIF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPreprocIF__Group__0__Impl
	rule__WMLPreprocIF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getNameAssignment_0()); }
(rule__WMLPreprocIF__NameAssignment_0)
{ after(grammarAccess.getWMLPreprocIFAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLPreprocIF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPreprocIF__Group__1__Impl
	rule__WMLPreprocIF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getAlternatives_1()); }
(rule__WMLPreprocIF__Alternatives_1)*
{ after(grammarAccess.getWMLPreprocIFAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLPreprocIF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLPreprocIF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getEndNameAssignment_2()); }
(rule__WMLPreprocIF__EndNameAssignment_2)
{ after(grammarAccess.getWMLPreprocIFAccess().getEndNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WMLValuedExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLValuedExpression__Group_1__0__Impl
	rule__WMLValuedExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLValuedExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLValuedExpressionAccess().getWMLValuedExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getWMLValuedExpressionAccess().getWMLValuedExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WMLValuedExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WMLValuedExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WMLValuedExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLValuedExpressionAccess().getWMLValueParserRuleCall_1_1()); }
	ruleWMLValue
{ after(grammarAccess.getWMLValuedExpressionAccess().getWMLValueParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__WMLRoot__ExpressionsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLRootAccess().getExpressionsWMLRootExpressionParserRuleCall_0()); }
	ruleWMLRootExpression{ after(grammarAccess.getWMLRootAccess().getExpressionsWMLRootExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__PlusAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
(
{ before(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
)

{ after(grammarAccess.getWMLTagAccess().getPlusPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getWMLTagAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__ExpressionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getExpressionsWMLExpressionParserRuleCall_4_0()); }
	ruleWMLExpression{ after(grammarAccess.getWMLTagAccess().getExpressionsWMLExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTag__EndNameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTagAccess().getEndNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getWMLTagAccess().getEndNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getWMLKeyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_2_0()); }
	ruleWMLKeyValue{ after(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__ValueAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_3_3_0()); }
	ruleWMLKeyValue{ after(grammarAccess.getWMLKeyAccess().getValueWMLKeyValueParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLKey__EolAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLKeyAccess().getEolAlternatives_4_0()); }
(rule__WMLKey__EolAlternatives_4_0)
{ after(grammarAccess.getWMLKeyAccess().getEolAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__PointAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getPointFullStopSolidusKeyword_1_0()); }
(
{ before(grammarAccess.getWMLMacroCallAccess().getPointFullStopSolidusKeyword_1_0()); }

	'./' 

{ after(grammarAccess.getWMLMacroCallAccess().getPointFullStopSolidusKeyword_1_0()); }
)

{ after(grammarAccess.getWMLMacroCallAccess().getPointFullStopSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__RelativeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getRelativeTildeKeyword_2_0()); }
(
{ before(grammarAccess.getWMLMacroCallAccess().getRelativeTildeKeyword_2_0()); }

	'~' 

{ after(grammarAccess.getWMLMacroCallAccess().getRelativeTildeKeyword_2_0()); }
)

{ after(grammarAccess.getWMLMacroCallAccess().getRelativeTildeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getWMLMacroCallAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__ParamsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getParamsWMLMacroParameterParserRuleCall_4_0_0()); }
	ruleWMLMacroParameter{ after(grammarAccess.getWMLMacroCallAccess().getParamsWMLMacroParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroCall__ExtraMacrosAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroCallAccess().getExtraMacrosWMLMacroCallParserRuleCall_4_1_0()); }
	ruleWMLMacroCall{ after(grammarAccess.getWMLMacroCallAccess().getExtraMacrosWMLMacroCallParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLArrayCall__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLArrayCallAccess().getValueWMLValueParserRuleCall_1_0()); }
	ruleWMLValue{ after(grammarAccess.getWMLArrayCallAccess().getValueWMLValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getNameDEFINETerminalRuleCall_0_0()); }
	RULE_DEFINE{ after(grammarAccess.getWMLMacroDefineAccess().getNameDEFINETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__ExpressionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getExpressionsWMLValuedExpressionParserRuleCall_1_0()); }
	ruleWMLValuedExpression{ after(grammarAccess.getWMLMacroDefineAccess().getExpressionsWMLValuedExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLMacroDefine__EndNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLMacroDefineAccess().getEndNameENDDEFTerminalRuleCall_2_0()); }
	RULE_ENDDEF{ after(grammarAccess.getWMLMacroDefineAccess().getEndNameENDDEFTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getNameAlternatives_0_0()); }
(rule__WMLPreprocIF__NameAlternatives_0_0)
{ after(grammarAccess.getWMLPreprocIFAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getExpressionsWMLValuedExpressionParserRuleCall_1_0_0()); }
	ruleWMLValuedExpression{ after(grammarAccess.getWMLPreprocIFAccess().getExpressionsWMLValuedExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__ElsesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getElsesELSETerminalRuleCall_1_1_0()); }
	RULE_ELSE{ after(grammarAccess.getWMLPreprocIFAccess().getElsesELSETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLPreprocIF__EndNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLPreprocIFAccess().getEndNameENDIFTerminalRuleCall_2_0()); }
	RULE_ENDIF{ after(grammarAccess.getWMLPreprocIFAccess().getEndNameENDIFTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLTextdomain__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLTextdomainAccess().getNameTEXTDOMAINTerminalRuleCall_0()); }
	RULE_TEXTDOMAIN{ after(grammarAccess.getWMLTextdomainAccess().getNameTEXTDOMAINTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WMLLuaCode__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWMLLuaCodeAccess().getValueLUA_CODETerminalRuleCall_0()); }
	RULE_LUA_CODE{ after(grammarAccess.getWMLLuaCodeAccess().getValueLUA_CODETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_LUA_CODE : '<<' ( options {greedy=false;} : . )*'>>';

RULE_IFHAVE : '#ifhave' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_IFNHAVE : '#ifnhave' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_IFDEF : '#ifdef' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_IFNDEF : '#ifndef' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ELSE : '#else' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ENDIF : '#endif' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_DEFINE : '#define' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ENDDEF : '#enddef' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_TEXTDOMAIN : '#textdomain' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-'|',')+;

RULE_EOL : ('\r'|'\n');

RULE_WS : (' '|'\t')+;

RULE_ANY_OTHER : .;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;


